00:29:01 DEBUG - GET "/api/usuarios/correo/boltaxmd@gmail.com", parameters={}
00:29:01 DEBUG - Mapped to com.example.api_gestion_almacen.controladores.UsuarioControlador#buscarPorCorreo(String)
00:29:01 INFO  - Buscando usuario por correo: boltaxmd@gmail.com
00:29:01 DEBUG - 
    select
        ue1_0.id,
        ue1_0.contrasena,
        ue1_0.correo_confirmado,
        ue1_0.correo_electronico,
        ue1_0.fecha_creacion,
        ue1_0.foto,
        ue1_0.google,
        ue1_0.movil,
        ue1_0.nombre_completo,
        ue1_0.rol_id 
    from
        usuarios ue1_0 
    where
        ue1_0.correo_electronico=?
00:29:01 DEBUG - 
    select
        re1_0.id,
        re1_0.nombre 
    from
        roles re1_0 
    where
        re1_0.id=?
00:29:01 INFO  - Usuario encontrado: boltaxmd@gmail.com
00:29:01 DEBUG - Using 'application/json', given [application/json] and supported [application/json]
00:29:01 DEBUG - Writing [com.example.api_gestion_almacen.dtos.UsuarioDto@244d2a8f]
00:29:01 DEBUG - Completed 200 OK
00:29:02 DEBUG - PUT "/api/usuarios/51", parameters={}
00:29:02 DEBUG - Mapped to com.example.api_gestion_almacen.controladores.UsuarioControlador#actualizarUsuario(Long, CrearUsuDto)
00:29:02 DEBUG - Read "application/json;charset=UTF-8" to [CrearUsuDto{nombreCompleto='andres', movil='null', correoElectronico='boltaxmd@gmail.com', rolId=4,  (truncated)...]
00:29:02 INFO  - Iniciando actualización de usuario con ID: 51
00:29:02 DEBUG - Datos de actualización: CrearUsuDto{nombreCompleto='andres', movil='null', correoElectronico='boltaxmd@gmail.com', rolId=4, contrasena='[PROTECTED]', foto=presente}
00:29:02 DEBUG - 
    select
        ue1_0.id,
        ue1_0.contrasena,
        ue1_0.correo_confirmado,
        ue1_0.correo_electronico,
        ue1_0.fecha_creacion,
        ue1_0.foto,
        ue1_0.google,
        ue1_0.movil,
        ue1_0.nombre_completo,
        r1_0.id,
        r1_0.nombre 
    from
        usuarios ue1_0 
    left join
        roles r1_0 
            on r1_0.id=ue1_0.rol_id 
    where
        ue1_0.id=?
00:29:02 DEBUG - 
    select
        re1_0.id,
        re1_0.nombre 
    from
        roles re1_0 
    where
        re1_0.id=?
00:29:03 DEBUG - 
    select
        ue1_0.id,
        ue1_0.contrasena,
        ue1_0.correo_confirmado,
        ue1_0.correo_electronico,
        ue1_0.fecha_creacion,
        ue1_0.foto,
        ue1_0.google,
        ue1_0.movil,
        ue1_0.nombre_completo,
        r1_0.id,
        r1_0.nombre 
    from
        usuarios ue1_0 
    left join
        roles r1_0 
            on r1_0.id=ue1_0.rol_id 
    where
        ue1_0.id=?
00:29:03 INFO  - Usuario actualizado exitosamente. ID: 51
00:29:03 DEBUG - Using 'application/json', given [*/*] and supported [application/json]
00:29:03 DEBUG - Writing [CrearUsuDto{nombreCompleto='andres', movil='null', correoElectronico='boltaxmd@gmail.com', rolId=4,  (truncated)...]
00:29:03 DEBUG - Completed 200 OK
00:29:03 DEBUG - GET "/api/usuarios/correo/boltaxmd@gmail.com", parameters={}
00:29:03 DEBUG - Mapped to com.example.api_gestion_almacen.controladores.UsuarioControlador#buscarPorCorreo(String)
00:29:03 INFO  - Buscando usuario por correo: boltaxmd@gmail.com
00:29:03 DEBUG - 
    select
        ue1_0.id,
        ue1_0.contrasena,
        ue1_0.correo_confirmado,
        ue1_0.correo_electronico,
        ue1_0.fecha_creacion,
        ue1_0.foto,
        ue1_0.google,
        ue1_0.movil,
        ue1_0.nombre_completo,
        ue1_0.rol_id 
    from
        usuarios ue1_0 
    where
        ue1_0.correo_electronico=?
00:29:03 DEBUG - 
    select
        re1_0.id,
        re1_0.nombre 
    from
        roles re1_0 
    where
        re1_0.id=?
00:29:03 INFO  - Usuario encontrado: boltaxmd@gmail.com
00:29:03 DEBUG - Using 'application/json', given [application/json] and supported [application/json]
00:29:03 DEBUG - Writing [com.example.api_gestion_almacen.dtos.UsuarioDto@17ecf92e]
00:29:03 DEBUG - Completed 200 OK
00:44:55 DEBUG - GET "/api/usuarios/correo/boltaxmd@gmail.com", parameters={}
00:44:55 DEBUG - Mapped to com.example.api_gestion_almacen.controladores.UsuarioControlador#buscarPorCorreo(String)
00:44:55 INFO  - Buscando usuario por correo: boltaxmd@gmail.com
00:44:55 DEBUG - 
    select
        ue1_0.id,
        ue1_0.contrasena,
        ue1_0.correo_confirmado,
        ue1_0.correo_electronico,
        ue1_0.fecha_creacion,
        ue1_0.foto,
        ue1_0.google,
        ue1_0.movil,
        ue1_0.nombre_completo,
        ue1_0.rol_id 
    from
        usuarios ue1_0 
    where
        ue1_0.correo_electronico=?
00:44:55 DEBUG - 
    select
        re1_0.id,
        re1_0.nombre 
    from
        roles re1_0 
    where
        re1_0.id=?
00:44:55 INFO  - Usuario encontrado: boltaxmd@gmail.com
00:44:55 DEBUG - Using 'application/json', given [application/json] and supported [application/json]
00:44:55 DEBUG - Writing [com.example.api_gestion_almacen.dtos.UsuarioDto@6adceffe]
00:44:55 DEBUG - Completed 200 OK
00:44:56 DEBUG - PUT "/api/usuarios/51", parameters={}
00:44:56 DEBUG - Mapped to com.example.api_gestion_almacen.controladores.UsuarioControlador#actualizarUsuario(Long, CrearUsuDto)
00:44:56 DEBUG - Read "application/json;charset=UTF-8" to [CrearUsuDto{nombreCompleto='andres', movil='null', correoElectronico='boltaxmd@gmail.com', rolId=4,  (truncated)...]
00:44:56 INFO  - Iniciando actualización de usuario con ID: 51
00:44:56 DEBUG - Datos de actualización: CrearUsuDto{nombreCompleto='andres', movil='null', correoElectronico='boltaxmd@gmail.com', rolId=4, contrasena='[PROTECTED]', foto=presente}
00:44:56 DEBUG - 
    select
        ue1_0.id,
        ue1_0.contrasena,
        ue1_0.correo_confirmado,
        ue1_0.correo_electronico,
        ue1_0.fecha_creacion,
        ue1_0.foto,
        ue1_0.google,
        ue1_0.movil,
        ue1_0.nombre_completo,
        r1_0.id,
        r1_0.nombre 
    from
        usuarios ue1_0 
    left join
        roles r1_0 
            on r1_0.id=ue1_0.rol_id 
    where
        ue1_0.id=?
00:44:56 DEBUG - 
    select
        re1_0.id,
        re1_0.nombre 
    from
        roles re1_0 
    where
        re1_0.id=?
00:44:57 DEBUG - 
    select
        ue1_0.id,
        ue1_0.contrasena,
        ue1_0.correo_confirmado,
        ue1_0.correo_electronico,
        ue1_0.fecha_creacion,
        ue1_0.foto,
        ue1_0.google,
        ue1_0.movil,
        ue1_0.nombre_completo,
        r1_0.id,
        r1_0.nombre 
    from
        usuarios ue1_0 
    left join
        roles r1_0 
            on r1_0.id=ue1_0.rol_id 
    where
        ue1_0.id=?
00:44:57 INFO  - Usuario actualizado exitosamente. ID: 51
00:44:57 DEBUG - Using 'application/json', given [*/*] and supported [application/json]
00:44:57 DEBUG - Writing [CrearUsuDto{nombreCompleto='andres', movil='null', correoElectronico='boltaxmd@gmail.com', rolId=4,  (truncated)...]
00:44:57 DEBUG - Completed 200 OK
00:44:57 DEBUG - GET "/api/usuarios/correo/boltaxmd@gmail.com", parameters={}
00:44:57 DEBUG - Mapped to com.example.api_gestion_almacen.controladores.UsuarioControlador#buscarPorCorreo(String)
00:44:57 INFO  - Buscando usuario por correo: boltaxmd@gmail.com
00:44:57 DEBUG - 
    select
        ue1_0.id,
        ue1_0.contrasena,
        ue1_0.correo_confirmado,
        ue1_0.correo_electronico,
        ue1_0.fecha_creacion,
        ue1_0.foto,
        ue1_0.google,
        ue1_0.movil,
        ue1_0.nombre_completo,
        ue1_0.rol_id 
    from
        usuarios ue1_0 
    where
        ue1_0.correo_electronico=?
00:44:57 DEBUG - 
    select
        re1_0.id,
        re1_0.nombre 
    from
        roles re1_0 
    where
        re1_0.id=?
00:44:57 INFO  - Usuario encontrado: boltaxmd@gmail.com
00:44:57 DEBUG - Using 'application/json', given [application/json] and supported [application/json]
00:44:57 DEBUG - Writing [com.example.api_gestion_almacen.dtos.UsuarioDto@513681c4]
00:44:57 DEBUG - Completed 200 OK
00:56:43 DEBUG - GET "/api/usuarios/correo/boltaxmd@gmail.com", parameters={}
00:56:43 DEBUG - Mapped to com.example.api_gestion_almacen.controladores.UsuarioControlador#buscarPorCorreo(String)
00:56:43 INFO  - Buscando usuario por correo: boltaxmd@gmail.com
00:56:43 DEBUG - 
    select
        ue1_0.id,
        ue1_0.contrasena,
        ue1_0.correo_confirmado,
        ue1_0.correo_electronico,
        ue1_0.fecha_creacion,
        ue1_0.foto,
        ue1_0.google,
        ue1_0.movil,
        ue1_0.nombre_completo,
        ue1_0.rol_id 
    from
        usuarios ue1_0 
    where
        ue1_0.correo_electronico=?
00:56:44 DEBUG - 
    select
        re1_0.id,
        re1_0.nombre 
    from
        roles re1_0 
    where
        re1_0.id=?
00:56:44 INFO  - Usuario encontrado: boltaxmd@gmail.com
00:56:44 DEBUG - Using 'application/json', given [application/json] and supported [application/json]
00:56:44 DEBUG - Writing [com.example.api_gestion_almacen.dtos.UsuarioDto@514b9fcd]
00:56:44 DEBUG - Completed 200 OK
00:56:44 DEBUG - PUT "/api/usuarios/51", parameters={}
00:56:44 DEBUG - Mapped to com.example.api_gestion_almacen.controladores.UsuarioControlador#actualizarUsuario(Long, CrearUsuDto)
00:56:44 DEBUG - Read "application/json;charset=UTF-8" to [CrearUsuDto{nombreCompleto='andres', movil='null', correoElectronico='boltaxmd@gmail.com', rolId=4,  (truncated)...]
00:56:44 INFO  - Iniciando actualización de usuario con ID: 51
00:56:44 DEBUG - Datos de actualización: CrearUsuDto{nombreCompleto='andres', movil='null', correoElectronico='boltaxmd@gmail.com', rolId=4, contrasena='[PROTECTED]', foto=presente}
00:56:44 DEBUG - 
    select
        ue1_0.id,
        ue1_0.contrasena,
        ue1_0.correo_confirmado,
        ue1_0.correo_electronico,
        ue1_0.fecha_creacion,
        ue1_0.foto,
        ue1_0.google,
        ue1_0.movil,
        ue1_0.nombre_completo,
        r1_0.id,
        r1_0.nombre 
    from
        usuarios ue1_0 
    left join
        roles r1_0 
            on r1_0.id=ue1_0.rol_id 
    where
        ue1_0.id=?
00:56:45 DEBUG - 
    select
        re1_0.id,
        re1_0.nombre 
    from
        roles re1_0 
    where
        re1_0.id=?
00:56:45 DEBUG - 
    select
        ue1_0.id,
        ue1_0.contrasena,
        ue1_0.correo_confirmado,
        ue1_0.correo_electronico,
        ue1_0.fecha_creacion,
        ue1_0.foto,
        ue1_0.google,
        ue1_0.movil,
        ue1_0.nombre_completo,
        r1_0.id,
        r1_0.nombre 
    from
        usuarios ue1_0 
    left join
        roles r1_0 
            on r1_0.id=ue1_0.rol_id 
    where
        ue1_0.id=?
00:56:46 INFO  - Usuario actualizado exitosamente. ID: 51
00:56:46 DEBUG - Using 'application/json', given [*/*] and supported [application/json]
00:56:46 DEBUG - Writing [CrearUsuDto{nombreCompleto='andres', movil='null', correoElectronico='boltaxmd@gmail.com', rolId=4,  (truncated)...]
00:56:46 DEBUG - Completed 200 OK
00:56:46 DEBUG - GET "/api/usuarios/correo/boltaxmd@gmail.com", parameters={}
00:56:46 DEBUG - Mapped to com.example.api_gestion_almacen.controladores.UsuarioControlador#buscarPorCorreo(String)
00:56:46 INFO  - Buscando usuario por correo: boltaxmd@gmail.com
00:56:46 DEBUG - 
    select
        ue1_0.id,
        ue1_0.contrasena,
        ue1_0.correo_confirmado,
        ue1_0.correo_electronico,
        ue1_0.fecha_creacion,
        ue1_0.foto,
        ue1_0.google,
        ue1_0.movil,
        ue1_0.nombre_completo,
        ue1_0.rol_id 
    from
        usuarios ue1_0 
    where
        ue1_0.correo_electronico=?
00:56:46 DEBUG - 
    select
        re1_0.id,
        re1_0.nombre 
    from
        roles re1_0 
    where
        re1_0.id=?
00:56:46 INFO  - Usuario encontrado: boltaxmd@gmail.com
00:56:46 DEBUG - Using 'application/json', given [application/json] and supported [application/json]
00:56:46 DEBUG - Writing [com.example.api_gestion_almacen.dtos.UsuarioDto@2c4c2f6b]
00:56:46 DEBUG - Completed 200 OK
01:12:18 DEBUG - GET "/api/usuarios/correo/boltaxmd@gmail.com", parameters={}
01:12:18 DEBUG - Mapped to com.example.api_gestion_almacen.controladores.UsuarioControlador#buscarPorCorreo(String)
01:12:18 INFO  - Buscando usuario por correo: boltaxmd@gmail.com
01:12:18 DEBUG - 
    select
        ue1_0.id,
        ue1_0.contrasena,
        ue1_0.correo_confirmado,
        ue1_0.correo_electronico,
        ue1_0.fecha_creacion,
        ue1_0.foto,
        ue1_0.google,
        ue1_0.movil,
        ue1_0.nombre_completo,
        ue1_0.rol_id 
    from
        usuarios ue1_0 
    where
        ue1_0.correo_electronico=?
01:12:19 DEBUG - 
    select
        re1_0.id,
        re1_0.nombre 
    from
        roles re1_0 
    where
        re1_0.id=?
01:12:19 INFO  - Usuario encontrado: boltaxmd@gmail.com
01:12:19 DEBUG - Using 'application/json', given [application/json] and supported [application/json]
01:12:19 DEBUG - Writing [com.example.api_gestion_almacen.dtos.UsuarioDto@437fcefb]
01:12:19 DEBUG - Completed 200 OK
01:12:19 DEBUG - PUT "/api/usuarios/51", parameters={}
01:12:19 DEBUG - Mapped to com.example.api_gestion_almacen.controladores.UsuarioControlador#actualizarUsuario(Long, CrearUsuDto)
01:12:19 DEBUG - Read "application/json;charset=UTF-8" to [CrearUsuDto{nombreCompleto='andres', movil='null', correoElectronico='boltaxmd@gmail.com', rolId=4,  (truncated)...]
01:12:19 INFO  - Iniciando actualización de usuario con ID: 51
01:12:19 DEBUG - Datos de actualización: CrearUsuDto{nombreCompleto='andres', movil='null', correoElectronico='boltaxmd@gmail.com', rolId=4, contrasena='[PROTECTED]', foto=presente}
01:12:19 DEBUG - 
    select
        ue1_0.id,
        ue1_0.contrasena,
        ue1_0.correo_confirmado,
        ue1_0.correo_electronico,
        ue1_0.fecha_creacion,
        ue1_0.foto,
        ue1_0.google,
        ue1_0.movil,
        ue1_0.nombre_completo,
        r1_0.id,
        r1_0.nombre 
    from
        usuarios ue1_0 
    left join
        roles r1_0 
            on r1_0.id=ue1_0.rol_id 
    where
        ue1_0.id=?
01:12:20 DEBUG - 
    select
        re1_0.id,
        re1_0.nombre 
    from
        roles re1_0 
    where
        re1_0.id=?
01:12:20 DEBUG - 
    select
        ue1_0.id,
        ue1_0.contrasena,
        ue1_0.correo_confirmado,
        ue1_0.correo_electronico,
        ue1_0.fecha_creacion,
        ue1_0.foto,
        ue1_0.google,
        ue1_0.movil,
        ue1_0.nombre_completo,
        r1_0.id,
        r1_0.nombre 
    from
        usuarios ue1_0 
    left join
        roles r1_0 
            on r1_0.id=ue1_0.rol_id 
    where
        ue1_0.id=?
01:12:20 INFO  - Usuario actualizado exitosamente. ID: 51
01:12:20 DEBUG - Using 'application/json', given [*/*] and supported [application/json]
01:12:20 DEBUG - Writing [CrearUsuDto{nombreCompleto='andres', movil='null', correoElectronico='boltaxmd@gmail.com', rolId=4,  (truncated)...]
01:12:20 DEBUG - Completed 200 OK
01:12:20 DEBUG - GET "/api/usuarios/correo/boltaxmd@gmail.com", parameters={}
01:12:20 DEBUG - Mapped to com.example.api_gestion_almacen.controladores.UsuarioControlador#buscarPorCorreo(String)
01:12:20 INFO  - Buscando usuario por correo: boltaxmd@gmail.com
01:12:20 DEBUG - 
    select
        ue1_0.id,
        ue1_0.contrasena,
        ue1_0.correo_confirmado,
        ue1_0.correo_electronico,
        ue1_0.fecha_creacion,
        ue1_0.foto,
        ue1_0.google,
        ue1_0.movil,
        ue1_0.nombre_completo,
        ue1_0.rol_id 
    from
        usuarios ue1_0 
    where
        ue1_0.correo_electronico=?
01:12:20 DEBUG - 
    select
        re1_0.id,
        re1_0.nombre 
    from
        roles re1_0 
    where
        re1_0.id=?
01:12:21 INFO  - Usuario encontrado: boltaxmd@gmail.com
01:12:21 DEBUG - Using 'application/json', given [application/json] and supported [application/json]
01:12:21 DEBUG - Writing [com.example.api_gestion_almacen.dtos.UsuarioDto@369d3145]
01:12:21 DEBUG - Completed 200 OK
01:15:51 DEBUG - GET "/api/usuarios/correo/boltaxmd@gmail.com", parameters={}
01:15:51 DEBUG - Mapped to com.example.api_gestion_almacen.controladores.UsuarioControlador#buscarPorCorreo(String)
01:15:51 INFO  - Buscando usuario por correo: boltaxmd@gmail.com
01:15:51 DEBUG - 
    select
        ue1_0.id,
        ue1_0.contrasena,
        ue1_0.correo_confirmado,
        ue1_0.correo_electronico,
        ue1_0.fecha_creacion,
        ue1_0.foto,
        ue1_0.google,
        ue1_0.movil,
        ue1_0.nombre_completo,
        ue1_0.rol_id 
    from
        usuarios ue1_0 
    where
        ue1_0.correo_electronico=?
01:15:51 DEBUG - 
    select
        re1_0.id,
        re1_0.nombre 
    from
        roles re1_0 
    where
        re1_0.id=?
01:15:51 INFO  - Usuario encontrado: boltaxmd@gmail.com
01:15:51 DEBUG - Using 'application/json', given [application/json] and supported [application/json]
01:15:51 DEBUG - Writing [com.example.api_gestion_almacen.dtos.UsuarioDto@53f6da6d]
01:15:51 DEBUG - Completed 200 OK
01:15:51 DEBUG - PUT "/api/usuarios/51", parameters={}
01:15:51 DEBUG - Mapped to com.example.api_gestion_almacen.controladores.UsuarioControlador#actualizarUsuario(Long, CrearUsuDto)
01:15:51 DEBUG - Read "application/json;charset=UTF-8" to [CrearUsuDto{nombreCompleto='andres', movil='null', correoElectronico='boltaxmd@gmail.com', rolId=4,  (truncated)...]
01:15:51 INFO  - Iniciando actualización de usuario con ID: 51
01:15:51 DEBUG - Datos de actualización: CrearUsuDto{nombreCompleto='andres', movil='null', correoElectronico='boltaxmd@gmail.com', rolId=4, contrasena='[PROTECTED]', foto=presente}
01:15:52 DEBUG - 
    select
        ue1_0.id,
        ue1_0.contrasena,
        ue1_0.correo_confirmado,
        ue1_0.correo_electronico,
        ue1_0.fecha_creacion,
        ue1_0.foto,
        ue1_0.google,
        ue1_0.movil,
        ue1_0.nombre_completo,
        r1_0.id,
        r1_0.nombre 
    from
        usuarios ue1_0 
    left join
        roles r1_0 
            on r1_0.id=ue1_0.rol_id 
    where
        ue1_0.id=?
01:15:52 DEBUG - 
    select
        re1_0.id,
        re1_0.nombre 
    from
        roles re1_0 
    where
        re1_0.id=?
01:15:52 DEBUG - 
    select
        ue1_0.id,
        ue1_0.contrasena,
        ue1_0.correo_confirmado,
        ue1_0.correo_electronico,
        ue1_0.fecha_creacion,
        ue1_0.foto,
        ue1_0.google,
        ue1_0.movil,
        ue1_0.nombre_completo,
        r1_0.id,
        r1_0.nombre 
    from
        usuarios ue1_0 
    left join
        roles r1_0 
            on r1_0.id=ue1_0.rol_id 
    where
        ue1_0.id=?
01:15:53 INFO  - Usuario actualizado exitosamente. ID: 51
01:15:53 DEBUG - Using 'application/json', given [*/*] and supported [application/json]
01:15:53 DEBUG - Writing [CrearUsuDto{nombreCompleto='andres', movil='null', correoElectronico='boltaxmd@gmail.com', rolId=4,  (truncated)...]
01:15:53 DEBUG - Completed 200 OK
01:15:53 DEBUG - GET "/api/usuarios/correo/boltaxmd@gmail.com", parameters={}
01:15:53 DEBUG - Mapped to com.example.api_gestion_almacen.controladores.UsuarioControlador#buscarPorCorreo(String)
01:15:53 INFO  - Buscando usuario por correo: boltaxmd@gmail.com
01:15:53 DEBUG - 
    select
        ue1_0.id,
        ue1_0.contrasena,
        ue1_0.correo_confirmado,
        ue1_0.correo_electronico,
        ue1_0.fecha_creacion,
        ue1_0.foto,
        ue1_0.google,
        ue1_0.movil,
        ue1_0.nombre_completo,
        ue1_0.rol_id 
    from
        usuarios ue1_0 
    where
        ue1_0.correo_electronico=?
01:15:53 DEBUG - 
    select
        re1_0.id,
        re1_0.nombre 
    from
        roles re1_0 
    where
        re1_0.id=?
01:15:53 INFO  - Usuario encontrado: boltaxmd@gmail.com
01:15:53 DEBUG - Using 'application/json', given [application/json] and supported [application/json]
01:15:53 DEBUG - Writing [com.example.api_gestion_almacen.dtos.UsuarioDto@33e0d661]
01:15:53 DEBUG - Completed 200 OK
01:21:36 DEBUG - GET "/api/usuarios/correo/boltaxmd@gmail.com", parameters={}
01:21:36 DEBUG - Mapped to com.example.api_gestion_almacen.controladores.UsuarioControlador#buscarPorCorreo(String)
01:21:36 INFO  - Buscando usuario por correo: boltaxmd@gmail.com
01:21:36 DEBUG - 
    select
        ue1_0.id,
        ue1_0.contrasena,
        ue1_0.correo_confirmado,
        ue1_0.correo_electronico,
        ue1_0.fecha_creacion,
        ue1_0.foto,
        ue1_0.google,
        ue1_0.movil,
        ue1_0.nombre_completo,
        ue1_0.rol_id 
    from
        usuarios ue1_0 
    where
        ue1_0.correo_electronico=?
01:21:37 DEBUG - 
    select
        re1_0.id,
        re1_0.nombre 
    from
        roles re1_0 
    where
        re1_0.id=?
01:21:37 INFO  - Usuario encontrado: boltaxmd@gmail.com
01:21:37 DEBUG - Using 'application/json', given [application/json] and supported [application/json]
01:21:37 DEBUG - Writing [com.example.api_gestion_almacen.dtos.UsuarioDto@4b51fce0]
01:21:37 DEBUG - Completed 200 OK
01:21:37 DEBUG - PUT "/api/usuarios/51", parameters={}
01:21:37 DEBUG - Mapped to com.example.api_gestion_almacen.controladores.UsuarioControlador#actualizarUsuario(Long, CrearUsuDto)
01:21:37 DEBUG - Read "application/json;charset=UTF-8" to [CrearUsuDto{nombreCompleto='andres', movil='null', correoElectronico='boltaxmd@gmail.com', rolId=4,  (truncated)...]
01:21:37 INFO  - Iniciando actualización de usuario con ID: 51
01:21:37 DEBUG - Datos de actualización: CrearUsuDto{nombreCompleto='andres', movil='null', correoElectronico='boltaxmd@gmail.com', rolId=4, contrasena='[PROTECTED]', foto=presente}
01:21:37 DEBUG - 
    select
        ue1_0.id,
        ue1_0.contrasena,
        ue1_0.correo_confirmado,
        ue1_0.correo_electronico,
        ue1_0.fecha_creacion,
        ue1_0.foto,
        ue1_0.google,
        ue1_0.movil,
        ue1_0.nombre_completo,
        r1_0.id,
        r1_0.nombre 
    from
        usuarios ue1_0 
    left join
        roles r1_0 
            on r1_0.id=ue1_0.rol_id 
    where
        ue1_0.id=?
01:21:38 DEBUG - 
    select
        re1_0.id,
        re1_0.nombre 
    from
        roles re1_0 
    where
        re1_0.id=?
01:21:38 DEBUG - 
    select
        ue1_0.id,
        ue1_0.contrasena,
        ue1_0.correo_confirmado,
        ue1_0.correo_electronico,
        ue1_0.fecha_creacion,
        ue1_0.foto,
        ue1_0.google,
        ue1_0.movil,
        ue1_0.nombre_completo,
        r1_0.id,
        r1_0.nombre 
    from
        usuarios ue1_0 
    left join
        roles r1_0 
            on r1_0.id=ue1_0.rol_id 
    where
        ue1_0.id=?
01:21:38 INFO  - Usuario actualizado exitosamente. ID: 51
01:21:38 DEBUG - Using 'application/json', given [*/*] and supported [application/json]
01:21:38 DEBUG - Writing [CrearUsuDto{nombreCompleto='andres', movil='null', correoElectronico='boltaxmd@gmail.com', rolId=4,  (truncated)...]
01:21:38 DEBUG - Completed 200 OK
01:21:38 DEBUG - GET "/api/usuarios/correo/boltaxmd@gmail.com", parameters={}
01:21:38 DEBUG - Mapped to com.example.api_gestion_almacen.controladores.UsuarioControlador#buscarPorCorreo(String)
01:21:38 INFO  - Buscando usuario por correo: boltaxmd@gmail.com
01:21:38 DEBUG - 
    select
        ue1_0.id,
        ue1_0.contrasena,
        ue1_0.correo_confirmado,
        ue1_0.correo_electronico,
        ue1_0.fecha_creacion,
        ue1_0.foto,
        ue1_0.google,
        ue1_0.movil,
        ue1_0.nombre_completo,
        ue1_0.rol_id 
    from
        usuarios ue1_0 
    where
        ue1_0.correo_electronico=?
01:21:38 DEBUG - 
    select
        re1_0.id,
        re1_0.nombre 
    from
        roles re1_0 
    where
        re1_0.id=?
01:21:39 INFO  - Usuario encontrado: boltaxmd@gmail.com
01:21:39 DEBUG - Using 'application/json', given [application/json] and supported [application/json]
01:21:39 DEBUG - Writing [com.example.api_gestion_almacen.dtos.UsuarioDto@251f262]
01:21:39 DEBUG - Completed 200 OK
01:24:09 DEBUG - GET "/api/usuarios/correo/boltaxmd@gmail.com", parameters={}
01:24:09 DEBUG - Mapped to com.example.api_gestion_almacen.controladores.UsuarioControlador#buscarPorCorreo(String)
01:24:09 INFO  - Buscando usuario por correo: boltaxmd@gmail.com
01:24:09 DEBUG - 
    select
        ue1_0.id,
        ue1_0.contrasena,
        ue1_0.correo_confirmado,
        ue1_0.correo_electronico,
        ue1_0.fecha_creacion,
        ue1_0.foto,
        ue1_0.google,
        ue1_0.movil,
        ue1_0.nombre_completo,
        ue1_0.rol_id 
    from
        usuarios ue1_0 
    where
        ue1_0.correo_electronico=?
01:24:09 DEBUG - 
    select
        re1_0.id,
        re1_0.nombre 
    from
        roles re1_0 
    where
        re1_0.id=?
01:24:09 INFO  - Usuario encontrado: boltaxmd@gmail.com
01:24:09 DEBUG - Using 'application/json', given [application/json] and supported [application/json]
01:24:09 DEBUG - Writing [com.example.api_gestion_almacen.dtos.UsuarioDto@6de49dbc]
01:24:09 DEBUG - Completed 200 OK
01:24:10 DEBUG - PUT "/api/usuarios/51", parameters={}
01:24:10 DEBUG - Mapped to com.example.api_gestion_almacen.controladores.UsuarioControlador#actualizarUsuario(Long, CrearUsuDto)
01:24:10 DEBUG - Read "application/json;charset=UTF-8" to [CrearUsuDto{nombreCompleto='andres', movil='null', correoElectronico='boltaxmd@gmail.com', rolId=4,  (truncated)...]
01:24:10 INFO  - Iniciando actualización de usuario con ID: 51
01:24:10 DEBUG - Datos de actualización: CrearUsuDto{nombreCompleto='andres', movil='null', correoElectronico='boltaxmd@gmail.com', rolId=4, contrasena='[PROTECTED]', foto=presente}
01:24:10 DEBUG - 
    select
        ue1_0.id,
        ue1_0.contrasena,
        ue1_0.correo_confirmado,
        ue1_0.correo_electronico,
        ue1_0.fecha_creacion,
        ue1_0.foto,
        ue1_0.google,
        ue1_0.movil,
        ue1_0.nombre_completo,
        r1_0.id,
        r1_0.nombre 
    from
        usuarios ue1_0 
    left join
        roles r1_0 
            on r1_0.id=ue1_0.rol_id 
    where
        ue1_0.id=?
01:24:10 DEBUG - 
    select
        re1_0.id,
        re1_0.nombre 
    from
        roles re1_0 
    where
        re1_0.id=?
01:24:11 DEBUG - 
    select
        ue1_0.id,
        ue1_0.contrasena,
        ue1_0.correo_confirmado,
        ue1_0.correo_electronico,
        ue1_0.fecha_creacion,
        ue1_0.foto,
        ue1_0.google,
        ue1_0.movil,
        ue1_0.nombre_completo,
        r1_0.id,
        r1_0.nombre 
    from
        usuarios ue1_0 
    left join
        roles r1_0 
            on r1_0.id=ue1_0.rol_id 
    where
        ue1_0.id=?
01:24:11 INFO  - Usuario actualizado exitosamente. ID: 51
01:24:11 DEBUG - Using 'application/json', given [*/*] and supported [application/json]
01:24:11 DEBUG - Writing [CrearUsuDto{nombreCompleto='andres', movil='null', correoElectronico='boltaxmd@gmail.com', rolId=4,  (truncated)...]
01:24:11 DEBUG - Completed 200 OK
01:24:11 DEBUG - GET "/api/usuarios/correo/boltaxmd@gmail.com", parameters={}
01:24:11 DEBUG - Mapped to com.example.api_gestion_almacen.controladores.UsuarioControlador#buscarPorCorreo(String)
01:24:11 INFO  - Buscando usuario por correo: boltaxmd@gmail.com
01:24:11 DEBUG - 
    select
        ue1_0.id,
        ue1_0.contrasena,
        ue1_0.correo_confirmado,
        ue1_0.correo_electronico,
        ue1_0.fecha_creacion,
        ue1_0.foto,
        ue1_0.google,
        ue1_0.movil,
        ue1_0.nombre_completo,
        ue1_0.rol_id 
    from
        usuarios ue1_0 
    where
        ue1_0.correo_electronico=?
01:24:11 DEBUG - 
    select
        re1_0.id,
        re1_0.nombre 
    from
        roles re1_0 
    where
        re1_0.id=?
01:24:11 INFO  - Usuario encontrado: boltaxmd@gmail.com
01:24:11 DEBUG - Using 'application/json', given [application/json] and supported [application/json]
01:24:11 DEBUG - Writing [com.example.api_gestion_almacen.dtos.UsuarioDto@2f8fd0cb]
01:24:11 DEBUG - Completed 200 OK
01:35:15 DEBUG - GET "/api/usuarios/correo/boltaxmd@gmail.com", parameters={}
01:35:15 DEBUG - Mapped to com.example.api_gestion_almacen.controladores.UsuarioControlador#buscarPorCorreo(String)
01:35:15 INFO  - Buscando usuario por correo: boltaxmd@gmail.com
01:35:15 DEBUG - 
    select
        ue1_0.id,
        ue1_0.contrasena,
        ue1_0.correo_confirmado,
        ue1_0.correo_electronico,
        ue1_0.fecha_creacion,
        ue1_0.foto,
        ue1_0.google,
        ue1_0.movil,
        ue1_0.nombre_completo,
        ue1_0.rol_id 
    from
        usuarios ue1_0 
    where
        ue1_0.correo_electronico=?
01:35:16 DEBUG - 
    select
        re1_0.id,
        re1_0.nombre 
    from
        roles re1_0 
    where
        re1_0.id=?
01:35:16 INFO  - Usuario encontrado: boltaxmd@gmail.com
01:35:16 DEBUG - Using 'application/json', given [application/json] and supported [application/json]
01:35:16 DEBUG - Writing [com.example.api_gestion_almacen.dtos.UsuarioDto@2d62da4e]
01:35:16 DEBUG - Completed 200 OK
01:35:16 DEBUG - PUT "/api/usuarios/51", parameters={}
01:35:16 DEBUG - Mapped to com.example.api_gestion_almacen.controladores.UsuarioControlador#actualizarUsuario(Long, CrearUsuDto)
01:35:16 DEBUG - Read "application/json;charset=UTF-8" to [CrearUsuDto{nombreCompleto='andres', movil='null', correoElectronico='boltaxmd@gmail.com', rolId=4,  (truncated)...]
01:35:16 INFO  - Iniciando actualización de usuario con ID: 51
01:35:16 DEBUG - Datos de actualización: CrearUsuDto{nombreCompleto='andres', movil='null', correoElectronico='boltaxmd@gmail.com', rolId=4, contrasena='[PROTECTED]', foto=presente}
01:35:16 DEBUG - 
    select
        ue1_0.id,
        ue1_0.contrasena,
        ue1_0.correo_confirmado,
        ue1_0.correo_electronico,
        ue1_0.fecha_creacion,
        ue1_0.foto,
        ue1_0.google,
        ue1_0.movil,
        ue1_0.nombre_completo,
        r1_0.id,
        r1_0.nombre 
    from
        usuarios ue1_0 
    left join
        roles r1_0 
            on r1_0.id=ue1_0.rol_id 
    where
        ue1_0.id=?
01:35:17 DEBUG - 
    select
        re1_0.id,
        re1_0.nombre 
    from
        roles re1_0 
    where
        re1_0.id=?
01:35:17 DEBUG - 
    select
        ue1_0.id,
        ue1_0.contrasena,
        ue1_0.correo_confirmado,
        ue1_0.correo_electronico,
        ue1_0.fecha_creacion,
        ue1_0.foto,
        ue1_0.google,
        ue1_0.movil,
        ue1_0.nombre_completo,
        r1_0.id,
        r1_0.nombre 
    from
        usuarios ue1_0 
    left join
        roles r1_0 
            on r1_0.id=ue1_0.rol_id 
    where
        ue1_0.id=?
01:35:17 INFO  - Usuario actualizado exitosamente. ID: 51
01:35:17 DEBUG - Using 'application/json', given [*/*] and supported [application/json]
01:35:17 DEBUG - Writing [CrearUsuDto{nombreCompleto='andres', movil='null', correoElectronico='boltaxmd@gmail.com', rolId=4,  (truncated)...]
01:35:17 DEBUG - Completed 200 OK
01:35:17 DEBUG - GET "/api/usuarios/correo/boltaxmd@gmail.com", parameters={}
01:35:17 DEBUG - Mapped to com.example.api_gestion_almacen.controladores.UsuarioControlador#buscarPorCorreo(String)
01:35:17 INFO  - Buscando usuario por correo: boltaxmd@gmail.com
01:35:17 DEBUG - 
    select
        ue1_0.id,
        ue1_0.contrasena,
        ue1_0.correo_confirmado,
        ue1_0.correo_electronico,
        ue1_0.fecha_creacion,
        ue1_0.foto,
        ue1_0.google,
        ue1_0.movil,
        ue1_0.nombre_completo,
        ue1_0.rol_id 
    from
        usuarios ue1_0 
    where
        ue1_0.correo_electronico=?
01:35:17 DEBUG - 
    select
        re1_0.id,
        re1_0.nombre 
    from
        roles re1_0 
    where
        re1_0.id=?
01:35:18 INFO  - Usuario encontrado: boltaxmd@gmail.com
01:35:18 DEBUG - Using 'application/json', given [application/json] and supported [application/json]
01:35:18 DEBUG - Writing [com.example.api_gestion_almacen.dtos.UsuarioDto@514115f9]
01:35:18 DEBUG - Completed 200 OK
15:28:30 INFO  - Starting ApiGestionAlmacenApplication using Java 21.0.4 with PID 24948 (C:\Users\amoliaz\Downloads\api-gestion-almacen11-02\api-gestion-almacen10-02\api-gestion-almacen (1)_1\api-gestion-almacen (1)\api-gestion-almacen\target\classes started by amoliaz in C:\Users\amoliaz\Downloads\api-gestion-almacen11-02\api-gestion-almacen10-02\api-gestion-almacen (1)_1\api-gestion-almacen (1)\api-gestion-almacen)
15:28:30 DEBUG - Running with Spring Boot v3.4.2, Spring v6.2.2
15:28:30 INFO  - No active profile set, falling back to 1 default profile: "default"
15:28:30 DEBUG - Loading source class com.example.api_gestion_almacen.ApiGestionAlmacenApplication
15:28:30 DEBUG - Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@3f2ef586
15:28:30 DEBUG - @EnableAutoConfiguration was declared on a class in the package 'com.example.api_gestion_almacen'. Automatic @Repository and @Entity scanning is enabled.
15:28:31 DEBUG - Code archive: C:\Users\amoliaz\.m2\repository\org\springframework\boot\spring-boot\3.4.2\spring-boot-3.4.2.jar
15:28:31 DEBUG - Code archive: C:\Users\amoliaz\.m2\repository\org\springframework\boot\spring-boot\3.4.2\spring-boot-3.4.2.jar
15:28:31 DEBUG - Document root: C:\Users\amoliaz\Downloads\api-gestion-almacen11-02\api-gestion-almacen10-02\api-gestion-almacen (1)_1\api-gestion-almacen (1)\api-gestion-almacen\src\main\webapp
15:28:31 INFO  - Tomcat initialized with port 8081 (http)
15:28:31 DEBUG - Published root WebApplicationContext as ServletContext attribute with name [org.springframework.web.context.WebApplicationContext.ROOT]
15:28:31 INFO  - Root WebApplicationContext: initialization completed in 941 ms
15:28:31 DEBUG - Mapping filters: characterEncodingFilter urls=[/*] order=-2147483648, formContentFilter urls=[/*] order=-9900, requestContextFilter urls=[/*] order=-105
15:28:31 DEBUG - Mapping servlets: dispatcherServlet urls=[/]
15:28:31 DEBUG - Filter 'requestContextFilter' configured for use
15:28:31 DEBUG - Filter 'characterEncodingFilter' configured for use
15:28:31 DEBUG - Filter 'formContentFilter' configured for use
15:28:34 DEBUG - 24 mappings in 'requestMappingHandlerMapping'
15:28:34 DEBUG - Patterns [/webjars/**, /**] in 'resourceHandlerMapping'
15:28:34 DEBUG - ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
15:28:34 DEBUG - ControllerAdvice beans: 0 @ExceptionHandler, 1 ResponseBodyAdvice
15:28:34 DEBUG - Application Admin MBean registered with name 'org.springframework.boot:type=Admin,name=SpringApplication'
15:28:34 INFO  - Tomcat started on port 8081 (http) with context path '/'
15:28:34 DEBUG - 


============================
CONDITIONS EVALUATION REPORT
============================


Positive matches:
-----------------

   AopAutoConfiguration matched:
      - @ConditionalOnProperty (spring.aop.auto=true) matched (OnPropertyCondition)

   AopAutoConfiguration.AspectJAutoProxyingConfiguration matched:
      - @ConditionalOnClass found required class 'org.aspectj.weaver.Advice' (OnClassCondition)

   AopAutoConfiguration.AspectJAutoProxyingConfiguration.CglibAutoProxyConfiguration matched:
      - @ConditionalOnProperty (spring.aop.proxy-target-class=true) matched (OnPropertyCondition)

   ApplicationAvailabilityAutoConfiguration#applicationAvailability matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.availability.ApplicationAvailability; SearchStrategy: all) did not find any beans (OnBeanCondition)

   DataSourceAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'javax.sql.DataSource', 'org.springframework.jdbc.datasource.embedded.EmbeddedDatabaseType' (OnClassCondition)
      - @ConditionalOnMissingBean (types: io.r2dbc.spi.ConnectionFactory; SearchStrategy: all) did not find any beans (OnBeanCondition)

   DataSourceAutoConfiguration.PooledDataSourceConfiguration matched:
      - AnyNestedCondition 1 matched 1 did not; NestedCondition on DataSourceAutoConfiguration.PooledDataSourceCondition.PooledDataSourceAvailable PooledDataSource found supported DataSource; NestedCondition on DataSourceAutoConfiguration.PooledDataSourceCondition.ExplicitType @ConditionalOnProperty (spring.datasource.type) did not find property 'type' (DataSourceAutoConfiguration.PooledDataSourceCondition)
      - @ConditionalOnMissingBean (types: javax.sql.DataSource,javax.sql.XADataSource; SearchStrategy: all) did not find any beans (OnBeanCondition)

   DataSourceAutoConfiguration.PooledDataSourceConfiguration#jdbcConnectionDetails matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.autoconfigure.jdbc.JdbcConnectionDetails; SearchStrategy: all) did not find any beans (OnBeanCondition)

   DataSourceConfiguration.Hikari matched:
      - @ConditionalOnClass found required class 'com.zaxxer.hikari.HikariDataSource' (OnClassCondition)
      - @ConditionalOnProperty (spring.datasource.type=com.zaxxer.hikari.HikariDataSource) matched (OnPropertyCondition)
      - @ConditionalOnMissingBean (types: javax.sql.DataSource; SearchStrategy: all) did not find any beans (OnBeanCondition)

   DataSourceInitializationConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.jdbc.datasource.init.DatabasePopulator' (OnClassCondition)
      - @ConditionalOnSingleCandidate (types: javax.sql.DataSource; SearchStrategy: all) found a single bean 'dataSource'; @ConditionalOnMissingBean (types: org.springframework.boot.autoconfigure.sql.init.SqlDataSourceScriptDatabaseInitializer,org.springframework.boot.autoconfigure.sql.init.SqlR2dbcScriptDatabaseInitializer; SearchStrategy: all) did not find any beans (OnBeanCondition)

   DataSourceJmxConfiguration matched:
      - @ConditionalOnProperty (spring.jmx.enabled=true) matched (OnPropertyCondition)

   DataSourceJmxConfiguration.Hikari matched:
      - @ConditionalOnClass found required class 'com.zaxxer.hikari.HikariDataSource' (OnClassCondition)
      - @ConditionalOnSingleCandidate (types: javax.sql.DataSource; SearchStrategy: all) found a single bean 'dataSource' (OnBeanCondition)

   DataSourcePoolMetadataProvidersConfiguration.HikariPoolDataSourceMetadataProviderConfiguration matched:
      - @ConditionalOnClass found required class 'com.zaxxer.hikari.HikariDataSource' (OnClassCondition)

   DataSourceTransactionManagerAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'javax.sql.DataSource', 'org.springframework.jdbc.core.JdbcTemplate', 'org.springframework.transaction.TransactionManager' (OnClassCondition)

   DataSourceTransactionManagerAutoConfiguration.JdbcTransactionManagerConfiguration matched:
      - @ConditionalOnSingleCandidate (types: javax.sql.DataSource; SearchStrategy: all) found a single bean 'dataSource' (OnBeanCondition)

   DispatcherServletAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.web.servlet.DispatcherServlet' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)

   DispatcherServletAutoConfiguration.DispatcherServletConfiguration matched:
      - @ConditionalOnClass found required class 'jakarta.servlet.ServletRegistration' (OnClassCondition)
      - Default DispatcherServlet did not find dispatcher servlet beans (DispatcherServletAutoConfiguration.DefaultDispatcherServletCondition)

   DispatcherServletAutoConfiguration.DispatcherServletRegistrationConfiguration matched:
      - @ConditionalOnClass found required class 'jakarta.servlet.ServletRegistration' (OnClassCondition)
      - DispatcherServlet Registration did not find servlet registration bean (DispatcherServletAutoConfiguration.DispatcherServletRegistrationCondition)

   DispatcherServletAutoConfiguration.DispatcherServletRegistrationConfiguration#dispatcherServletRegistration matched:
      - @ConditionalOnBean (names: dispatcherServlet types: org.springframework.web.servlet.DispatcherServlet; SearchStrategy: all) found bean 'dispatcherServlet' (OnBeanCondition)

   EmbeddedWebServerFactoryCustomizerAutoConfiguration matched:
      - @ConditionalOnWebApplication (required) found 'session' scope (OnWebApplicationCondition)
      - @ConditionalOnWarDeployment the application is not deployed as a WAR file. (OnWarDeploymentCondition)

   EmbeddedWebServerFactoryCustomizerAutoConfiguration.TomcatWebServerFactoryCustomizerConfiguration matched:
      - @ConditionalOnClass found required classes 'org.apache.catalina.startup.Tomcat', 'org.apache.coyote.UpgradeProtocol' (OnClassCondition)

   ErrorMvcAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'jakarta.servlet.Servlet', 'org.springframework.web.servlet.DispatcherServlet' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)

   ErrorMvcAutoConfiguration#basicErrorController matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.web.servlet.error.ErrorController; SearchStrategy: current) did not find any beans (OnBeanCondition)

   ErrorMvcAutoConfiguration#errorAttributes matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.web.servlet.error.ErrorAttributes; SearchStrategy: current) did not find any beans (OnBeanCondition)

   ErrorMvcAutoConfiguration.DefaultErrorViewResolverConfiguration#conventionErrorViewResolver matched:
      - @ConditionalOnBean (types: org.springframework.web.servlet.DispatcherServlet; SearchStrategy: all) found bean 'dispatcherServlet'; @ConditionalOnMissingBean (types: org.springframework.boot.autoconfigure.web.servlet.error.ErrorViewResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)

   ErrorMvcAutoConfiguration.WhitelabelErrorViewConfiguration matched:
      - @ConditionalOnProperty (server.error.whitelabel.enabled) matched (OnPropertyCondition)
      - ErrorTemplate Missing did not find error template view (ErrorMvcAutoConfiguration.ErrorTemplateMissingCondition)

   ErrorMvcAutoConfiguration.WhitelabelErrorViewConfiguration#beanNameViewResolver matched:
      - @ConditionalOnMissingBean (types: org.springframework.web.servlet.view.BeanNameViewResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)

   ErrorMvcAutoConfiguration.WhitelabelErrorViewConfiguration#defaultErrorView matched:
      - @ConditionalOnMissingBean (names: error; SearchStrategy: all) did not find any beans (OnBeanCondition)

   GenericCacheConfiguration matched:
      - Cache org.springframework.boot.autoconfigure.cache.GenericCacheConfiguration automatic cache type (CacheCondition)

   HibernateJpaAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean', 'jakarta.persistence.EntityManager', 'org.hibernate.engine.spi.SessionImplementor' (OnClassCondition)

   HibernateJpaConfiguration matched:
      - @ConditionalOnSingleCandidate (types: javax.sql.DataSource; SearchStrategy: all) found a single bean 'dataSource' (OnBeanCondition)

   HttpClientAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.http.client.ClientHttpRequestFactory' (OnClassCondition)
      - NoneNestedConditions 0 matched 1 did not; NestedCondition on NotReactiveWebApplicationCondition.ReactiveWebApplication did not find reactive web application classes (NotReactiveWebApplicationCondition)

   HttpClientAutoConfiguration#clientHttpRequestFactoryBuilder matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.http.client.ClientHttpRequestFactoryBuilder; SearchStrategy: all) did not find any beans (OnBeanCondition)

   HttpClientAutoConfiguration#clientHttpRequestFactorySettings matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.http.client.ClientHttpRequestFactorySettings; SearchStrategy: all) did not find any beans (OnBeanCondition)

   HttpEncodingAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.web.filter.CharacterEncodingFilter' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)
      - @ConditionalOnProperty (server.servlet.encoding.enabled) matched (OnPropertyCondition)

   HttpEncodingAutoConfiguration#characterEncodingFilter matched:
      - @ConditionalOnMissingBean (types: org.springframework.web.filter.CharacterEncodingFilter; SearchStrategy: all) did not find any beans (OnBeanCondition)

   HttpMessageConvertersAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.http.converter.HttpMessageConverter' (OnClassCondition)
      - NoneNestedConditions 0 matched 1 did not; NestedCondition on HttpMessageConvertersAutoConfiguration.NotReactiveWebApplicationCondition.ReactiveWebApplication did not find reactive web application classes (HttpMessageConvertersAutoConfiguration.NotReactiveWebApplicationCondition)

   HttpMessageConvertersAutoConfiguration#messageConverters matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.autoconfigure.http.HttpMessageConverters; SearchStrategy: all) did not find any beans (OnBeanCondition)

   HttpMessageConvertersAutoConfiguration.StringHttpMessageConverterConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.http.converter.StringHttpMessageConverter' (OnClassCondition)

   HttpMessageConvertersAutoConfiguration.StringHttpMessageConverterConfiguration#stringHttpMessageConverter matched:
      - @ConditionalOnMissingBean (types: org.springframework.http.converter.StringHttpMessageConverter; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JacksonAutoConfiguration matched:
      - @ConditionalOnClass found required class 'com.fasterxml.jackson.databind.ObjectMapper' (OnClassCondition)

   JacksonAutoConfiguration.Jackson2ObjectMapperBuilderCustomizerConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.http.converter.json.Jackson2ObjectMapperBuilder' (OnClassCondition)

   JacksonAutoConfiguration.JacksonObjectMapperBuilderConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.http.converter.json.Jackson2ObjectMapperBuilder' (OnClassCondition)

   JacksonAutoConfiguration.JacksonObjectMapperBuilderConfiguration#jacksonObjectMapperBuilder matched:
      - @ConditionalOnMissingBean (types: org.springframework.http.converter.json.Jackson2ObjectMapperBuilder; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JacksonAutoConfiguration.JacksonObjectMapperConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.http.converter.json.Jackson2ObjectMapperBuilder' (OnClassCondition)

   JacksonAutoConfiguration.JacksonObjectMapperConfiguration#jacksonObjectMapper matched:
      - @ConditionalOnMissingBean (types: com.fasterxml.jackson.databind.ObjectMapper; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JacksonAutoConfiguration.ParameterNamesModuleConfiguration matched:
      - @ConditionalOnClass found required class 'com.fasterxml.jackson.module.paramnames.ParameterNamesModule' (OnClassCondition)

   JacksonAutoConfiguration.ParameterNamesModuleConfiguration#parameterNamesModule matched:
      - @ConditionalOnMissingBean (types: com.fasterxml.jackson.module.paramnames.ParameterNamesModule; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JacksonHttpMessageConvertersConfiguration.MappingJackson2HttpMessageConverterConfiguration matched:
      - @ConditionalOnClass found required class 'com.fasterxml.jackson.databind.ObjectMapper' (OnClassCondition)
      - @ConditionalOnProperty (spring.mvc.converters.preferred-json-mapper=jackson) matched (OnPropertyCondition)
      - @ConditionalOnBean (types: com.fasterxml.jackson.databind.ObjectMapper; SearchStrategy: all) found bean 'jacksonObjectMapper' (OnBeanCondition)

   JacksonHttpMessageConvertersConfiguration.MappingJackson2HttpMessageConverterConfiguration#mappingJackson2HttpMessageConverter matched:
      - @ConditionalOnMissingBean (types: org.springframework.http.converter.json.MappingJackson2HttpMessageConverter ignored: org.springframework.hateoas.server.mvc.TypeConstrainedMappingJackson2HttpMessageConverter,org.springframework.data.rest.webmvc.alps.AlpsJsonHttpMessageConverter; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JdbcClientAutoConfiguration matched:
      - @ConditionalOnSingleCandidate (types: org.springframework.jdbc.core.namedparam.NamedParameterJdbcTemplate; SearchStrategy: all) found a single bean 'namedParameterJdbcTemplate'; @ConditionalOnMissingBean (types: org.springframework.jdbc.core.simple.JdbcClient; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JdbcTemplateAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'javax.sql.DataSource', 'org.springframework.jdbc.core.JdbcTemplate' (OnClassCondition)
      - @ConditionalOnSingleCandidate (types: javax.sql.DataSource; SearchStrategy: all) found a single bean 'dataSource' (OnBeanCondition)

   JdbcTemplateConfiguration matched:
      - @ConditionalOnMissingBean (types: org.springframework.jdbc.core.JdbcOperations; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JmxAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.jmx.export.MBeanExporter' (OnClassCondition)
      - @ConditionalOnProperty (spring.jmx.enabled=true) matched (OnPropertyCondition)

   JmxAutoConfiguration#mbeanExporter matched:
      - @ConditionalOnMissingBean (types: org.springframework.jmx.export.MBeanExporter; SearchStrategy: current) did not find any beans (OnBeanCondition)

   JmxAutoConfiguration#mbeanServer matched:
      - @ConditionalOnMissingBean (types: javax.management.MBeanServer; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JmxAutoConfiguration#objectNamingStrategy matched:
      - @ConditionalOnMissingBean (types: org.springframework.jmx.export.naming.ObjectNamingStrategy; SearchStrategy: current) did not find any beans (OnBeanCondition)

   JpaBaseConfiguration#entityManagerFactory matched:
      - @ConditionalOnMissingBean (types: org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean,jakarta.persistence.EntityManagerFactory; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JpaBaseConfiguration#entityManagerFactoryBuilder matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.orm.jpa.EntityManagerFactoryBuilder; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JpaBaseConfiguration#jpaVendorAdapter matched:
      - @ConditionalOnMissingBean (types: org.springframework.orm.jpa.JpaVendorAdapter; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JpaBaseConfiguration#transactionManager matched:
      - @ConditionalOnMissingBean (types: org.springframework.transaction.TransactionManager; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JpaBaseConfiguration.PersistenceManagedTypesConfiguration matched:
      - @ConditionalOnMissingBean (types: org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean,jakarta.persistence.EntityManagerFactory; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JpaBaseConfiguration.PersistenceManagedTypesConfiguration#persistenceManagedTypes matched:
      - @ConditionalOnMissingBean (types: org.springframework.orm.jpa.persistenceunit.PersistenceManagedTypes; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JpaRepositoriesAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.data.jpa.repository.JpaRepository' (OnClassCondition)
      - @ConditionalOnProperty (spring.data.jpa.repositories.enabled=true) matched (OnPropertyCondition)
      - @ConditionalOnBean (types: javax.sql.DataSource; SearchStrategy: all) found bean 'dataSource'; @ConditionalOnMissingBean (types: org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean,org.springframework.data.jpa.repository.config.JpaRepositoryConfigExtension; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JtaAutoConfiguration matched:
      - @ConditionalOnClass found required class 'jakarta.transaction.Transaction' (OnClassCondition)
      - @ConditionalOnProperty (spring.jta.enabled) matched (OnPropertyCondition)

   LifecycleAutoConfiguration#defaultLifecycleProcessor matched:
      - @ConditionalOnMissingBean (names: lifecycleProcessor; SearchStrategy: current) did not find any beans (OnBeanCondition)

   MultipartAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'jakarta.servlet.Servlet', 'org.springframework.web.multipart.support.StandardServletMultipartResolver', 'jakarta.servlet.MultipartConfigElement' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)
      - @ConditionalOnProperty (spring.servlet.multipart.enabled) matched (OnPropertyCondition)

   MultipartAutoConfiguration#multipartConfigElement matched:
      - @ConditionalOnMissingBean (types: jakarta.servlet.MultipartConfigElement; SearchStrategy: all) did not find any beans (OnBeanCondition)

   MultipartAutoConfiguration#multipartResolver matched:
      - @ConditionalOnMissingBean (types: org.springframework.web.multipart.MultipartResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)

   NamedParameterJdbcTemplateConfiguration matched:
      - @ConditionalOnSingleCandidate (types: org.springframework.jdbc.core.JdbcTemplate; SearchStrategy: all) found a single bean 'jdbcTemplate'; @ConditionalOnMissingBean (types: org.springframework.jdbc.core.namedparam.NamedParameterJdbcOperations; SearchStrategy: all) did not find any beans (OnBeanCondition)

   NoOpCacheConfiguration matched:
      - Cache org.springframework.boot.autoconfigure.cache.NoOpCacheConfiguration automatic cache type (CacheCondition)

   PersistenceExceptionTranslationAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.dao.annotation.PersistenceExceptionTranslationPostProcessor' (OnClassCondition)

   PersistenceExceptionTranslationAutoConfiguration#persistenceExceptionTranslationPostProcessor matched:
      - @ConditionalOnProperty (spring.dao.exceptiontranslation.enabled) matched (OnPropertyCondition)
      - @ConditionalOnMissingBean (types: org.springframework.dao.annotation.PersistenceExceptionTranslationPostProcessor; SearchStrategy: all) did not find any beans (OnBeanCondition)

   PropertyPlaceholderAutoConfiguration#propertySourcesPlaceholderConfigurer matched:
      - @ConditionalOnMissingBean (types: org.springframework.context.support.PropertySourcesPlaceholderConfigurer; SearchStrategy: current) did not find any beans (OnBeanCondition)

   RestClientAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.web.client.RestClient' (OnClassCondition)
      - NoneNestedConditions 0 matched 1 did not; NestedCondition on NotReactiveWebApplicationCondition.ReactiveWebApplication did not find reactive web application classes (NotReactiveWebApplicationCondition)

   RestClientAutoConfiguration#httpMessageConvertersRestClientCustomizer matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.autoconfigure.web.client.HttpMessageConvertersRestClientCustomizer; SearchStrategy: all) did not find any beans (OnBeanCondition)

   RestClientAutoConfiguration#restClientBuilder matched:
      - @ConditionalOnMissingBean (types: org.springframework.web.client.RestClient$Builder; SearchStrategy: all) did not find any beans (OnBeanCondition)

   RestClientAutoConfiguration#restClientBuilderConfigurer matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.autoconfigure.web.client.RestClientBuilderConfigurer; SearchStrategy: all) did not find any beans (OnBeanCondition)

   RestClientAutoConfiguration#restClientSsl matched:
      - @ConditionalOnBean (types: org.springframework.boot.ssl.SslBundles; SearchStrategy: all) found bean 'sslBundleRegistry'; @ConditionalOnMissingBean (types: org.springframework.boot.autoconfigure.web.client.RestClientSsl; SearchStrategy: all) did not find any beans (OnBeanCondition)

   RestTemplateAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.web.client.RestTemplate' (OnClassCondition)
      - NoneNestedConditions 0 matched 1 did not; NestedCondition on NotReactiveWebApplicationCondition.ReactiveWebApplication did not find reactive web application classes (NotReactiveWebApplicationCondition)

   RestTemplateAutoConfiguration#restTemplateBuilder matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.web.client.RestTemplateBuilder; SearchStrategy: all) did not find any beans (OnBeanCondition)

   ServletWebServerFactoryAutoConfiguration matched:
      - @ConditionalOnClass found required class 'jakarta.servlet.ServletRequest' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)

   ServletWebServerFactoryAutoConfiguration#tomcatServletWebServerFactoryCustomizer matched:
      - @ConditionalOnClass found required class 'org.apache.catalina.startup.Tomcat' (OnClassCondition)

   ServletWebServerFactoryConfiguration.EmbeddedTomcat matched:
      - @ConditionalOnClass found required classes 'jakarta.servlet.Servlet', 'org.apache.catalina.startup.Tomcat', 'org.apache.coyote.UpgradeProtocol' (OnClassCondition)
      - @ConditionalOnMissingBean (types: org.springframework.boot.web.servlet.server.ServletWebServerFactory; SearchStrategy: current) did not find any beans (OnBeanCondition)

   SimpleCacheConfiguration matched:
      - Cache org.springframework.boot.autoconfigure.cache.SimpleCacheConfiguration automatic cache type (CacheCondition)

   SpringApplicationAdminJmxAutoConfiguration matched:
      - @ConditionalOnProperty (spring.application.admin.enabled=true) matched (OnPropertyCondition)

   SpringApplicationAdminJmxAutoConfiguration#springApplicationAdminRegistrar matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.admin.SpringApplicationAdminMXBeanRegistrar; SearchStrategy: all) did not find any beans (OnBeanCondition)

   SpringDataWebAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'org.springframework.data.web.PageableHandlerMethodArgumentResolver', 'org.springframework.web.servlet.config.annotation.WebMvcConfigurer' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)
      - @ConditionalOnMissingBean (types: org.springframework.data.web.PageableHandlerMethodArgumentResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)

   SpringDataWebAutoConfiguration#pageableCustomizer matched:
      - @ConditionalOnMissingBean (types: org.springframework.data.web.config.PageableHandlerMethodArgumentResolverCustomizer; SearchStrategy: all) did not find any beans (OnBeanCondition)

   SpringDataWebAutoConfiguration#sortCustomizer matched:
      - @ConditionalOnMissingBean (types: org.springframework.data.web.config.SortHandlerMethodArgumentResolverCustomizer; SearchStrategy: all) did not find any beans (OnBeanCondition)

   SpringDataWebAutoConfiguration#springDataWebSettings matched:
      - @ConditionalOnMissingBean (types: org.springframework.data.web.config.SpringDataWebSettings; SearchStrategy: all) did not find any beans (OnBeanCondition)

   SqlInitializationAutoConfiguration matched:
      - @ConditionalOnProperty (spring.sql.init.enabled) matched (OnPropertyCondition)
      - NoneNestedConditions 0 matched 1 did not; NestedCondition on SqlInitializationAutoConfiguration.SqlInitializationModeCondition.ModeIsNever @ConditionalOnProperty (spring.sql.init.mode=never) did not find property 'mode' (SqlInitializationAutoConfiguration.SqlInitializationModeCondition)

   SslAutoConfiguration#sslBundleRegistry matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.ssl.SslBundleRegistry,org.springframework.boot.ssl.SslBundles; SearchStrategy: all) did not find any beans (OnBeanCondition)

   TaskExecutionAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor' (OnClassCondition)

   TaskExecutorConfigurations.SimpleAsyncTaskExecutorBuilderConfiguration#simpleAsyncTaskExecutorBuilder matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.task.SimpleAsyncTaskExecutorBuilder; SearchStrategy: all) did not find any beans (OnBeanCondition)
      - @ConditionalOnThreading found PLATFORM (OnThreadingCondition)

   TaskExecutorConfigurations.TaskExecutorConfiguration matched:
      - @ConditionalOnMissingBean (types: java.util.concurrent.Executor; SearchStrategy: all) did not find any beans (OnBeanCondition)

   TaskExecutorConfigurations.TaskExecutorConfiguration#applicationTaskExecutor matched:
      - @ConditionalOnThreading found PLATFORM (OnThreadingCondition)

   TaskExecutorConfigurations.ThreadPoolTaskExecutorBuilderConfiguration#threadPoolTaskExecutorBuilder matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.task.ThreadPoolTaskExecutorBuilder; SearchStrategy: all) did not find any beans (OnBeanCondition)

   TaskSchedulingAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.scheduling.concurrent.ThreadPoolTaskScheduler' (OnClassCondition)

   TaskSchedulingConfigurations.SimpleAsyncTaskSchedulerBuilderConfiguration#simpleAsyncTaskSchedulerBuilder matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.task.SimpleAsyncTaskSchedulerBuilder; SearchStrategy: all) did not find any beans (OnBeanCondition)
      - @ConditionalOnThreading found PLATFORM (OnThreadingCondition)

   TaskSchedulingConfigurations.ThreadPoolTaskSchedulerBuilderConfiguration#threadPoolTaskSchedulerBuilder matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.task.ThreadPoolTaskSchedulerBuilder; SearchStrategy: all) did not find any beans (OnBeanCondition)

   TransactionAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.transaction.PlatformTransactionManager' (OnClassCondition)

   TransactionAutoConfiguration.EnableTransactionManagementConfiguration matched:
      - @ConditionalOnBean (types: org.springframework.transaction.TransactionManager; SearchStrategy: all) found bean 'transactionManager'; @ConditionalOnMissingBean (types: org.springframework.transaction.annotation.AbstractTransactionManagementConfiguration; SearchStrategy: all) did not find any beans (OnBeanCondition)

   TransactionAutoConfiguration.EnableTransactionManagementConfiguration.CglibAutoProxyConfiguration matched:
      - @ConditionalOnProperty (spring.aop.proxy-target-class=true) matched (OnPropertyCondition)

   TransactionAutoConfiguration.TransactionTemplateConfiguration matched:
      - @ConditionalOnSingleCandidate (types: org.springframework.transaction.PlatformTransactionManager; SearchStrategy: all) found a single bean 'transactionManager' (OnBeanCondition)

   TransactionAutoConfiguration.TransactionTemplateConfiguration#transactionTemplate matched:
      - @ConditionalOnMissingBean (types: org.springframework.transaction.support.TransactionOperations; SearchStrategy: all) did not find any beans (OnBeanCondition)

   TransactionManagerCustomizationAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.transaction.PlatformTransactionManager' (OnClassCondition)

   TransactionManagerCustomizationAutoConfiguration#platformTransactionManagerCustomizers matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.autoconfigure.transaction.TransactionManagerCustomizers; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebMvcAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'jakarta.servlet.Servlet', 'org.springframework.web.servlet.DispatcherServlet', 'org.springframework.web.servlet.config.annotation.WebMvcConfigurer' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)
      - @ConditionalOnMissingBean (types: org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebMvcAutoConfiguration#formContentFilter matched:
      - @ConditionalOnProperty (spring.mvc.formcontent.filter.enabled) matched (OnPropertyCondition)
      - @ConditionalOnMissingBean (types: org.springframework.web.filter.FormContentFilter; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebMvcAutoConfiguration.EnableWebMvcConfiguration#flashMapManager matched:
      - @ConditionalOnMissingBean (names: flashMapManager; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebMvcAutoConfiguration.EnableWebMvcConfiguration#localeResolver matched:
      - @ConditionalOnMissingBean (names: localeResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebMvcAutoConfiguration.EnableWebMvcConfiguration#themeResolver matched:
      - @ConditionalOnMissingBean (names: themeResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebMvcAutoConfiguration.EnableWebMvcConfiguration#viewNameTranslator matched:
      - @ConditionalOnMissingBean (names: viewNameTranslator; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebMvcAutoConfiguration.WebMvcAutoConfigurationAdapter#defaultViewResolver matched:
      - @ConditionalOnMissingBean (types: org.springframework.web.servlet.view.InternalResourceViewResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebMvcAutoConfiguration.WebMvcAutoConfigurationAdapter#requestContextFilter matched:
      - @ConditionalOnMissingBean (types: org.springframework.web.context.request.RequestContextListener,org.springframework.web.filter.RequestContextFilter; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebMvcAutoConfiguration.WebMvcAutoConfigurationAdapter#viewResolver matched:
      - @ConditionalOnBean (types: org.springframework.web.servlet.ViewResolver; SearchStrategy: all) found beans 'defaultViewResolver', 'beanNameViewResolver', 'mvcViewResolver'; @ConditionalOnMissingBean (names: viewResolver types: org.springframework.web.servlet.view.ContentNegotiatingViewResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebSocketServletAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'jakarta.servlet.Servlet', 'jakarta.websocket.server.ServerContainer' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)

   WebSocketServletAutoConfiguration.TomcatWebSocketConfiguration matched:
      - @ConditionalOnClass found required classes 'org.apache.catalina.startup.Tomcat', 'org.apache.tomcat.websocket.server.WsSci' (OnClassCondition)

   WebSocketServletAutoConfiguration.TomcatWebSocketConfiguration#websocketServletWebServerCustomizer matched:
      - @ConditionalOnMissingBean (names: websocketServletWebServerCustomizer; SearchStrategy: all) did not find any beans (OnBeanCondition)


Negative matches:
-----------------

   ActiveMQAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'jakarta.jms.ConnectionFactory' (OnClassCondition)

   AopAutoConfiguration.AspectJAutoProxyingConfiguration.JdkDynamicAutoProxyConfiguration:
      Did not match:
         - @ConditionalOnProperty (spring.aop.proxy-target-class=false) did not find property 'proxy-target-class' (OnPropertyCondition)

   AopAutoConfiguration.ClassProxyingConfiguration:
      Did not match:
         - @ConditionalOnMissingClass found unwanted class 'org.aspectj.weaver.Advice' (OnClassCondition)

   ArtemisAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'jakarta.jms.ConnectionFactory' (OnClassCondition)

   BatchAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.batch.core.launch.JobLauncher' (OnClassCondition)

   Cache2kCacheConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.cache2k.Cache2kBuilder' (OnClassCondition)

   CacheAutoConfiguration:
      Did not match:
         - @ConditionalOnBean (types: org.springframework.cache.interceptor.CacheAspectSupport; SearchStrategy: all) did not find any beans of type org.springframework.cache.interceptor.CacheAspectSupport (OnBeanCondition)
      Matched:
         - @ConditionalOnClass found required class 'org.springframework.cache.CacheManager' (OnClassCondition)

   CacheAutoConfiguration.CacheManagerEntityManagerFactoryDependsOnPostProcessor:
      Did not match:
         - Ancestor org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration did not match (ConditionEvaluationReport.AncestorsMatchedCondition)
      Matched:
         - @ConditionalOnClass found required class 'org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean' (OnClassCondition)

   CaffeineCacheConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.github.benmanes.caffeine.cache.Caffeine' (OnClassCondition)

   CassandraAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.datastax.oss.driver.api.core.CqlSession' (OnClassCondition)

   CassandraDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.datastax.oss.driver.api.core.CqlSession' (OnClassCondition)

   CassandraReactiveDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.datastax.oss.driver.api.core.CqlSession' (OnClassCondition)

   CassandraReactiveRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.cassandra.ReactiveSession' (OnClassCondition)

   CassandraRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.datastax.oss.driver.api.core.CqlSession' (OnClassCondition)

   ClientHttpConnectorAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.reactive.function.client.WebClient' (OnClassCondition)

   CodecsAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.reactive.function.client.WebClient' (OnClassCondition)

   CouchbaseAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.couchbase.client.java.Cluster' (OnClassCondition)

   CouchbaseCacheConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.couchbase.client.java.Cluster' (OnClassCondition)

   CouchbaseDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.couchbase.client.java.Bucket' (OnClassCondition)

   CouchbaseReactiveDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.couchbase.client.java.Cluster' (OnClassCondition)

   CouchbaseReactiveRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.couchbase.client.java.Cluster' (OnClassCondition)

   CouchbaseRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.couchbase.client.java.Bucket' (OnClassCondition)

   DataSourceAutoConfiguration.EmbeddedDatabaseConfiguration:
      Did not match:
         - EmbeddedDataSource spring.datasource.url is set (DataSourceAutoConfiguration.EmbeddedDatabaseCondition)

   DataSourceCheckpointRestoreConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.crac.Resource' (OnClassCondition)

   DataSourceConfiguration.Dbcp2:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.apache.commons.dbcp2.BasicDataSource' (OnClassCondition)

   DataSourceConfiguration.Generic:
      Did not match:
         - @ConditionalOnProperty (spring.datasource.type) did not find property 'spring.datasource.type' (OnPropertyCondition)

   DataSourceConfiguration.OracleUcp:
      Did not match:
         - @ConditionalOnClass did not find required classes 'oracle.ucp.jdbc.PoolDataSourceImpl', 'oracle.jdbc.OracleConnection' (OnClassCondition)

   DataSourceConfiguration.Tomcat:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.apache.tomcat.jdbc.pool.DataSource' (OnClassCondition)

   DataSourceJmxConfiguration.TomcatDataSourceJmxConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.apache.tomcat.jdbc.pool.DataSourceProxy' (OnClassCondition)

   DataSourcePoolMetadataProvidersConfiguration.CommonsDbcp2PoolDataSourceMetadataProviderConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.apache.commons.dbcp2.BasicDataSource' (OnClassCondition)

   DataSourcePoolMetadataProvidersConfiguration.OracleUcpPoolDataSourceMetadataProviderConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required classes 'oracle.ucp.jdbc.PoolDataSource', 'oracle.jdbc.OracleConnection' (OnClassCondition)

   DataSourcePoolMetadataProvidersConfiguration.TomcatDataSourcePoolMetadataProviderConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.apache.tomcat.jdbc.pool.DataSource' (OnClassCondition)

   DataSourceTransactionManagerAutoConfiguration.JdbcTransactionManagerConfiguration#transactionManager:
      Did not match:
         - @ConditionalOnMissingBean (types: org.springframework.transaction.TransactionManager; SearchStrategy: all) found beans of type 'org.springframework.transaction.TransactionManager' transactionManager (OnBeanCondition)

   DispatcherServletAutoConfiguration.DispatcherServletConfiguration#multipartResolver:
      Did not match:
         - @ConditionalOnBean (types: org.springframework.web.multipart.MultipartResolver; SearchStrategy: all) did not find any beans of type org.springframework.web.multipart.MultipartResolver (OnBeanCondition)

   ElasticsearchClientAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'co.elastic.clients.elasticsearch.ElasticsearchClient' (OnClassCondition)

   ElasticsearchDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.elasticsearch.client.elc.ElasticsearchTemplate' (OnClassCondition)

   ElasticsearchRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.elasticsearch.repository.ElasticsearchRepository' (OnClassCondition)

   ElasticsearchRestClientAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.elasticsearch.client.RestClientBuilder' (OnClassCondition)

   EmbeddedLdapAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.unboundid.ldap.listener.InMemoryDirectoryServer' (OnClassCondition)

   EmbeddedWebServerFactoryCustomizerAutoConfiguration.JettyWebServerFactoryCustomizerConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required classes 'org.eclipse.jetty.server.Server', 'org.eclipse.jetty.util.Loader', 'org.eclipse.jetty.ee10.webapp.WebAppContext' (OnClassCondition)

   EmbeddedWebServerFactoryCustomizerAutoConfiguration.NettyWebServerFactoryCustomizerConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'reactor.netty.http.server.HttpServer' (OnClassCondition)

   EmbeddedWebServerFactoryCustomizerAutoConfiguration.TomcatWebServerFactoryCustomizerConfiguration#tomcatVirtualThreadsProtocolHandlerCustomizer:
      Did not match:
         - @ConditionalOnThreading did not find VIRTUAL (OnThreadingCondition)

   EmbeddedWebServerFactoryCustomizerAutoConfiguration.UndertowWebServerFactoryCustomizerConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required classes 'io.undertow.Undertow', 'org.xnio.SslClientAuthMode' (OnClassCondition)

   ErrorWebFluxAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.reactive.config.WebFluxConfigurer' (OnClassCondition)

   FlywayAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.flywaydb.core.Flyway' (OnClassCondition)

   FreeMarkerAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'freemarker.template.Configuration' (OnClassCondition)

   GraphQlAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'graphql.GraphQL' (OnClassCondition)

   GraphQlQueryByExampleAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'graphql.GraphQL' (OnClassCondition)

   GraphQlQuerydslAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.querydsl.core.Query' (OnClassCondition)

   GraphQlRSocketAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'graphql.GraphQL' (OnClassCondition)

   GraphQlReactiveQueryByExampleAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'graphql.GraphQL' (OnClassCondition)

   GraphQlReactiveQuerydslAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.querydsl.core.Query' (OnClassCondition)

   GraphQlWebFluxAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'graphql.GraphQL' (OnClassCondition)

   GraphQlWebFluxSecurityAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'graphql.GraphQL' (OnClassCondition)

   GraphQlWebMvcAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'graphql.GraphQL' (OnClassCondition)

   GraphQlWebMvcSecurityAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'graphql.GraphQL' (OnClassCondition)

   GroovyTemplateAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'groovy.text.markup.MarkupTemplateEngine' (OnClassCondition)

   GsonAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.google.gson.Gson' (OnClassCondition)

   GsonHttpMessageConvertersConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.google.gson.Gson' (OnClassCondition)

   H2ConsoleAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.h2.server.web.JakartaWebServlet' (OnClassCondition)

   HazelcastAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.hazelcast.core.HazelcastInstance' (OnClassCondition)

   HazelcastCacheConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.hazelcast.core.HazelcastInstance' (OnClassCondition)

   HazelcastJpaDependencyAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.hazelcast.core.HazelcastInstance' (OnClassCondition)

   HttpHandlerAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.reactive.DispatcherHandler' (OnClassCondition)

   HypermediaAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.hateoas.EntityModel' (OnClassCondition)

   InfinispanCacheConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.infinispan.spring.embedded.provider.SpringEmbeddedCacheManager' (OnClassCondition)

   IntegrationAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.integration.config.EnableIntegration' (OnClassCondition)

   JCacheCacheConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'javax.cache.Caching' (OnClassCondition)

   JacksonHttpMessageConvertersConfiguration.MappingJackson2XmlHttpMessageConverterConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.fasterxml.jackson.dataformat.xml.XmlMapper' (OnClassCondition)

   JdbcRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.jdbc.repository.config.AbstractJdbcConfiguration' (OnClassCondition)

   JerseyAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.glassfish.jersey.server.spring.SpringComponentProvider' (OnClassCondition)

   JmsAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'jakarta.jms.Message' (OnClassCondition)

   JndiConnectionFactoryAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.jms.core.JmsTemplate' (OnClassCondition)

   JndiDataSourceAutoConfiguration:
      Did not match:
         - @ConditionalOnProperty (spring.datasource.jndi-name) did not find property 'jndi-name' (OnPropertyCondition)
      Matched:
         - @ConditionalOnClass found required classes 'javax.sql.DataSource', 'org.springframework.jdbc.datasource.embedded.EmbeddedDatabaseType' (OnClassCondition)

   JndiJtaConfiguration:
      Did not match:
         - @ConditionalOnJndi JNDI environment is not available (OnJndiCondition)
      Matched:
         - @ConditionalOnClass found required class 'org.springframework.transaction.jta.JtaTransactionManager' (OnClassCondition)

   JooqAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.jooq.DSLContext' (OnClassCondition)

   JpaBaseConfiguration.JpaWebConfiguration:
      Did not match:
         - @ConditionalOnProperty (spring.jpa.open-in-view=true) found different value in property 'open-in-view' (OnPropertyCondition)
      Matched:
         - @ConditionalOnClass found required class 'org.springframework.web.servlet.config.annotation.WebMvcConfigurer' (OnClassCondition)
         - found 'session' scope (OnWebApplicationCondition)

   JpaRepositoriesAutoConfiguration#entityManagerFactoryBootstrapExecutorCustomizer:
      Did not match:
         - AnyNestedCondition 0 matched 2 did not; NestedCondition on JpaRepositoriesAutoConfiguration.BootstrapExecutorCondition.LazyBootstrapMode @ConditionalOnProperty (spring.data.jpa.repositories.bootstrap-mode=lazy) did not find property 'bootstrap-mode'; NestedCondition on JpaRepositoriesAutoConfiguration.BootstrapExecutorCondition.DeferredBootstrapMode @ConditionalOnProperty (spring.data.jpa.repositories.bootstrap-mode=deferred) did not find property 'bootstrap-mode' (JpaRepositoriesAutoConfiguration.BootstrapExecutorCondition)

   JsonbAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'jakarta.json.bind.Jsonb' (OnClassCondition)

   JsonbHttpMessageConvertersConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'jakarta.json.bind.Jsonb' (OnClassCondition)

   KafkaAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.kafka.core.KafkaTemplate' (OnClassCondition)

   LdapAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.ldap.core.ContextSource' (OnClassCondition)

   LdapRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.ldap.repository.LdapRepository' (OnClassCondition)

   LiquibaseAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'liquibase.change.DatabaseChange' (OnClassCondition)

   MailSenderAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'jakarta.mail.internet.MimeMessage' (OnClassCondition)

   MailSenderValidatorAutoConfiguration:
      Did not match:
         - @ConditionalOnSingleCandidate did not find required type 'org.springframework.mail.javamail.JavaMailSenderImpl' (OnBeanCondition)

   MessageSourceAutoConfiguration:
      Did not match:
         - ResourceBundle did not find bundle with basename messages (MessageSourceAutoConfiguration.ResourceBundleCondition)

   MongoAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.mongodb.client.MongoClient' (OnClassCondition)

   MongoDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.mongodb.client.MongoClient' (OnClassCondition)

   MongoReactiveAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.mongodb.reactivestreams.client.MongoClient' (OnClassCondition)

   MongoReactiveDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.mongodb.reactivestreams.client.MongoClient' (OnClassCondition)

   MongoReactiveRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.mongodb.reactivestreams.client.MongoClient' (OnClassCondition)

   MongoRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.mongodb.client.MongoClient' (OnClassCondition)

   MustacheAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.samskivert.mustache.Mustache' (OnClassCondition)

   Neo4jAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.neo4j.driver.Driver' (OnClassCondition)

   Neo4jDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.neo4j.driver.Driver' (OnClassCondition)

   Neo4jReactiveDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.neo4j.driver.Driver' (OnClassCondition)

   Neo4jReactiveRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.neo4j.driver.Driver' (OnClassCondition)

   Neo4jRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.neo4j.driver.Driver' (OnClassCondition)

   NettyAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.netty.util.NettyRuntime' (OnClassCondition)

   OAuth2AuthorizationServerAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.oauth2.server.authorization.OAuth2Authorization' (OnClassCondition)

   OAuth2AuthorizationServerJwtAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.oauth2.server.authorization.OAuth2Authorization' (OnClassCondition)

   OAuth2ClientAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.config.annotation.web.configuration.EnableWebSecurity' (OnClassCondition)

   OAuth2ResourceServerAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.oauth2.server.resource.authentication.BearerTokenAuthenticationToken' (OnClassCondition)

   ProjectInfoAutoConfiguration#buildProperties:
      Did not match:
         - @ConditionalOnResource did not find resource '${spring.info.build.location:classpath:META-INF/build-info.properties}' (OnResourceCondition)

   ProjectInfoAutoConfiguration#gitProperties:
      Did not match:
         - GitResource did not find git info at classpath:git.properties (ProjectInfoAutoConfiguration.GitResourceAvailableCondition)

   PulsarAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.apache.pulsar.client.api.PulsarClient' (OnClassCondition)

   PulsarReactiveAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.apache.pulsar.client.api.PulsarClient' (OnClassCondition)

   QuartzAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.quartz.Scheduler' (OnClassCondition)

   R2dbcAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.r2dbc.spi.ConnectionFactory' (OnClassCondition)

   R2dbcDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.r2dbc.core.R2dbcEntityTemplate' (OnClassCondition)

   R2dbcInitializationConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required classes 'io.r2dbc.spi.ConnectionFactory', 'org.springframework.r2dbc.connection.init.DatabasePopulator' (OnClassCondition)

   R2dbcProxyAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.r2dbc.proxy.ProxyConnectionFactory' (OnClassCondition)

   R2dbcRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.r2dbc.spi.ConnectionFactory' (OnClassCondition)

   R2dbcTransactionManagerAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.r2dbc.connection.R2dbcTransactionManager' (OnClassCondition)

   RSocketGraphQlClientAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'graphql.GraphQL' (OnClassCondition)

   RSocketMessagingAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.rsocket.RSocket' (OnClassCondition)

   RSocketRequesterAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.rsocket.RSocket' (OnClassCondition)

   RSocketSecurityAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.rsocket.core.SecuritySocketAcceptorInterceptor' (OnClassCondition)

   RSocketServerAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.rsocket.core.RSocketServer' (OnClassCondition)

   RSocketStrategiesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.netty.buffer.PooledByteBufAllocator' (OnClassCondition)

   RabbitAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.rabbitmq.client.Channel' (OnClassCondition)

   ReactiveElasticsearchClientAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'co.elastic.clients.transport.ElasticsearchTransport' (OnClassCondition)

   ReactiveElasticsearchRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'reactor.core.publisher.Mono' (OnClassCondition)

   ReactiveMultipartAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.reactive.config.WebFluxConfigurer' (OnClassCondition)

   ReactiveOAuth2ClientAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'reactor.core.publisher.Flux' (OnClassCondition)

   ReactiveOAuth2ResourceServerAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.config.annotation.web.reactive.EnableWebFluxSecurity' (OnClassCondition)

   ReactiveSecurityAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'reactor.core.publisher.Flux' (OnClassCondition)

   ReactiveUserDetailsServiceAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.authentication.ReactiveAuthenticationManager' (OnClassCondition)

   ReactiveWebServerFactoryAutoConfiguration:
      Did not match:
         - @ConditionalOnWebApplication did not find reactive web application classes (OnWebApplicationCondition)

   ReactorAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'reactor.core.publisher.Hooks' (OnClassCondition)

   RedisAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.redis.core.RedisOperations' (OnClassCondition)

   RedisCacheConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.redis.connection.RedisConnectionFactory' (OnClassCondition)

   RedisReactiveAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'reactor.core.publisher.Flux' (OnClassCondition)

   RedisRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.redis.repository.configuration.EnableRedisRepositories' (OnClassCondition)

   RepositoryRestMvcAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.rest.webmvc.config.RepositoryRestMvcConfiguration' (OnClassCondition)

   Saml2RelyingPartyAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.saml2.provider.service.registration.RelyingPartyRegistrationRepository' (OnClassCondition)

   SecurityAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.authentication.DefaultAuthenticationEventPublisher' (OnClassCondition)

   SecurityFilterAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.config.http.SessionCreationPolicy' (OnClassCondition)

   SendGridAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.sendgrid.SendGrid' (OnClassCondition)

   ServletWebServerFactoryAutoConfiguration.ForwardedHeaderFilterConfiguration:
      Did not match:
         - @ConditionalOnProperty (server.forward-headers-strategy=framework) did not find property 'server.forward-headers-strategy' (OnPropertyCondition)

   ServletWebServerFactoryConfiguration.EmbeddedJetty:
      Did not match:
         - @ConditionalOnClass did not find required classes 'org.eclipse.jetty.server.Server', 'org.eclipse.jetty.util.Loader', 'org.eclipse.jetty.ee10.webapp.WebAppContext' (OnClassCondition)

   ServletWebServerFactoryConfiguration.EmbeddedUndertow:
      Did not match:
         - @ConditionalOnClass did not find required classes 'io.undertow.Undertow', 'org.xnio.SslClientAuthMode' (OnClassCondition)

   SessionAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.session.Session' (OnClassCondition)

   TaskExecutorConfigurations.SimpleAsyncTaskExecutorBuilderConfiguration#simpleAsyncTaskExecutorBuilderVirtualThreads:
      Did not match:
         - @ConditionalOnMissingBean (types: org.springframework.boot.task.SimpleAsyncTaskExecutorBuilder; SearchStrategy: all) found beans of type 'org.springframework.boot.task.SimpleAsyncTaskExecutorBuilder' simpleAsyncTaskExecutorBuilder (OnBeanCondition)

   TaskExecutorConfigurations.TaskExecutorConfiguration#applicationTaskExecutorVirtualThreads:
      Did not match:
         - @ConditionalOnThreading did not find VIRTUAL (OnThreadingCondition)

   TaskSchedulingAutoConfiguration#scheduledBeanLazyInitializationExcludeFilter:
      Did not match:
         - @ConditionalOnBean (names: org.springframework.context.annotation.internalScheduledAnnotationProcessor; SearchStrategy: all) did not find any beans named org.springframework.context.annotation.internalScheduledAnnotationProcessor (OnBeanCondition)

   TaskSchedulingConfigurations.SimpleAsyncTaskSchedulerBuilderConfiguration#simpleAsyncTaskSchedulerBuilderVirtualThreads:
      Did not match:
         - @ConditionalOnMissingBean (types: org.springframework.boot.task.SimpleAsyncTaskSchedulerBuilder; SearchStrategy: all) found beans of type 'org.springframework.boot.task.SimpleAsyncTaskSchedulerBuilder' simpleAsyncTaskSchedulerBuilder (OnBeanCondition)

   TaskSchedulingConfigurations.TaskSchedulerConfiguration:
      Did not match:
         - @ConditionalOnBean (names: org.springframework.context.annotation.internalScheduledAnnotationProcessor; SearchStrategy: all) did not find any beans named org.springframework.context.annotation.internalScheduledAnnotationProcessor (OnBeanCondition)

   ThymeleafAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.thymeleaf.spring6.SpringTemplateEngine' (OnClassCondition)

   TransactionAutoConfiguration#transactionalOperator:
      Did not match:
         - @ConditionalOnSingleCandidate (types: org.springframework.transaction.ReactiveTransactionManager; SearchStrategy: all) did not find any beans (OnBeanCondition)

   TransactionAutoConfiguration.AspectJTransactionManagementConfiguration:
      Did not match:
         - @ConditionalOnBean (types: org.springframework.transaction.aspectj.AbstractTransactionAspect; SearchStrategy: all) did not find any beans of type org.springframework.transaction.aspectj.AbstractTransactionAspect (OnBeanCondition)

   TransactionAutoConfiguration.EnableTransactionManagementConfiguration.JdkDynamicAutoProxyConfiguration:
      Did not match:
         - @ConditionalOnProperty (spring.aop.proxy-target-class=false) did not find property 'proxy-target-class' (OnPropertyCondition)

   UserDetailsServiceAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.authentication.AuthenticationManager' (OnClassCondition)

   ValidationAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'jakarta.validation.executable.ExecutableValidator' (OnClassCondition)

   WebClientAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.reactive.function.client.WebClient' (OnClassCondition)

   WebFluxAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.reactive.config.WebFluxConfigurer' (OnClassCondition)

   WebMvcAutoConfiguration#hiddenHttpMethodFilter:
      Did not match:
         - @ConditionalOnProperty (spring.mvc.hiddenmethod.filter.enabled) did not find property 'enabled' (OnPropertyCondition)

   WebMvcAutoConfiguration.ProblemDetailsErrorHandlingConfiguration:
      Did not match:
         - @ConditionalOnProperty (spring.mvc.problemdetails.enabled=true) did not find property 'enabled' (OnPropertyCondition)

   WebMvcAutoConfiguration.ResourceChainCustomizerConfiguration:
      Did not match:
         - @ConditionalOnEnabledResourceChain did not find class org.webjars.WebJarVersionLocator (OnEnabledResourceChainCondition)

   WebMvcAutoConfiguration.WebMvcAutoConfigurationAdapter#beanNameViewResolver:
      Did not match:
         - @ConditionalOnMissingBean (types: org.springframework.web.servlet.view.BeanNameViewResolver; SearchStrategy: all) found beans of type 'org.springframework.web.servlet.view.BeanNameViewResolver' beanNameViewResolver (OnBeanCondition)

   WebServiceTemplateAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.oxm.Marshaller' (OnClassCondition)

   WebServicesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.ws.transport.http.MessageDispatcherServlet' (OnClassCondition)

   WebSessionIdResolverAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'reactor.core.publisher.Mono' (OnClassCondition)

   WebSocketMessagingAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.socket.config.annotation.WebSocketMessageBrokerConfigurer' (OnClassCondition)

   WebSocketReactiveAutoConfiguration:
      Did not match:
         - @ConditionalOnWebApplication did not find reactive web application classes (OnWebApplicationCondition)

   WebSocketServletAutoConfiguration.JettyWebSocketConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.eclipse.jetty.ee10.websocket.jakarta.server.config.JakartaWebSocketServletContainerInitializer' (OnClassCondition)

   WebSocketServletAutoConfiguration.UndertowWebSocketConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.undertow.websockets.jsr.Bootstrap' (OnClassCondition)

   XADataSourceAutoConfiguration:
      Did not match:
         - @ConditionalOnBean (types: org.springframework.boot.jdbc.XADataSourceWrapper; SearchStrategy: all) did not find any beans of type org.springframework.boot.jdbc.XADataSourceWrapper (OnBeanCondition)
      Matched:
         - @ConditionalOnClass found required classes 'javax.sql.DataSource', 'jakarta.transaction.TransactionManager', 'org.springframework.jdbc.datasource.embedded.EmbeddedDatabaseType' (OnClassCondition)


Exclusions:
-----------

    None


Unconditional classes:
----------------------

    org.springframework.boot.autoconfigure.context.ConfigurationPropertiesAutoConfiguration

    org.springframework.boot.autoconfigure.ssl.SslAutoConfiguration

    org.springframework.boot.autoconfigure.context.LifecycleAutoConfiguration

    org.springframework.boot.autoconfigure.context.PropertyPlaceholderAutoConfiguration

    org.springframework.boot.autoconfigure.availability.ApplicationAvailabilityAutoConfiguration

    org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration



15:28:34 INFO  - Started ApiGestionAlmacenApplication in 4.894 seconds (process running for 5.47)
15:28:34 DEBUG - Application availability state LivenessState changed to CORRECT
15:28:34 DEBUG - Application availability state ReadinessState changed to ACCEPTING_TRAFFIC
15:29:06 INFO  - Initializing Servlet 'dispatcherServlet'
15:29:06 DEBUG - Detected StandardServletMultipartResolver
15:29:06 DEBUG - Detected AcceptHeaderLocaleResolver
15:29:06 DEBUG - Detected FixedThemeResolver
15:29:06 DEBUG - Detected org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator@5f32de90
15:29:06 DEBUG - Detected org.springframework.web.servlet.support.SessionFlashMapManager@4960b819
15:29:06 DEBUG - enableLoggingRequestDetails='false': request parameters and headers will be masked to prevent unsafe logging of potentially sensitive data
15:29:06 INFO  - Completed initialization in 0 ms
15:29:06 DEBUG - GET "/api/usuarios/correo/palomitasverdes73@gmail.com", parameters={}
15:29:06 DEBUG - Mapped to com.example.api_gestion_almacen.controladores.UsuarioControlador#buscarPorCorreo(String)
15:29:06 INFO  - Buscando usuario por correo: palomitasverdes73@gmail.com
15:29:06 DEBUG - 
    select
        ue1_0.id,
        ue1_0.contrasena,
        ue1_0.correo_confirmado,
        ue1_0.correo_electronico,
        ue1_0.fecha_creacion,
        ue1_0.foto,
        ue1_0.google,
        ue1_0.movil,
        ue1_0.nombre_completo,
        ue1_0.rol_id 
    from
        usuarios ue1_0 
    where
        ue1_0.correo_electronico=?
15:29:06 DEBUG - 
    select
        re1_0.id,
        re1_0.nombre 
    from
        roles re1_0 
    where
        re1_0.id=?
15:29:06 INFO  - Usuario encontrado: palomitasverdes73@gmail.com
15:29:06 DEBUG - Using 'application/json', given [application/json] and supported [application/json]
15:29:06 DEBUG - Writing [com.example.api_gestion_almacen.dtos.UsuarioDto@264ba16c]
15:29:06 DEBUG - Completed 200 OK
15:29:07 DEBUG - POST "/api/usuarios/autenticar", parameters={}
15:29:07 DEBUG - Mapped to com.example.api_gestion_almacen.controladores.UsuarioControlador#autenticarUsuario(Map)
15:29:07 DEBUG - Read "application/json;charset=UTF-8" to [{contrasena=3cc890a93fa2160c551414745f084c101a9a4be2d32d6b1b1c622d1a217dbbaa, correoElectronico=palo (truncated)...]
15:29:07 INFO  - Intento de autenticación para usuario: palomitasverdes73@gmail.com
15:29:07 DEBUG - 
    select
        ue1_0.id,
        ue1_0.contrasena,
        ue1_0.correo_confirmado,
        ue1_0.correo_electronico,
        ue1_0.fecha_creacion,
        ue1_0.foto,
        ue1_0.google,
        ue1_0.movil,
        ue1_0.nombre_completo,
        ue1_0.rol_id 
    from
        usuarios ue1_0 
    where
        ue1_0.correo_electronico=?
15:29:07 DEBUG - 
    select
        re1_0.id,
        re1_0.nombre 
    from
        roles re1_0 
    where
        re1_0.id=?
15:29:07 INFO  - Autenticación exitosa para: palomitasverdes73@gmail.com
15:29:07 DEBUG - Using 'application/json', given [*/*] and supported [application/json]
15:29:07 DEBUG - Writing [com.example.api_gestion_almacen.dtos.UsuarioDto@3027b434]
15:29:07 DEBUG - Completed 200 OK
15:34:10 DEBUG - GET "/api/usuarios/correo/boltaxmd@gmail.com", parameters={}
15:34:10 DEBUG - Mapped to com.example.api_gestion_almacen.controladores.UsuarioControlador#buscarPorCorreo(String)
15:34:10 INFO  - Buscando usuario por correo: boltaxmd@gmail.com
15:34:10 DEBUG - 
    select
        ue1_0.id,
        ue1_0.contrasena,
        ue1_0.correo_confirmado,
        ue1_0.correo_electronico,
        ue1_0.fecha_creacion,
        ue1_0.foto,
        ue1_0.google,
        ue1_0.movil,
        ue1_0.nombre_completo,
        ue1_0.rol_id 
    from
        usuarios ue1_0 
    where
        ue1_0.correo_electronico=?
15:34:10 DEBUG - 
    select
        re1_0.id,
        re1_0.nombre 
    from
        roles re1_0 
    where
        re1_0.id=?
15:34:11 INFO  - Usuario encontrado: boltaxmd@gmail.com
15:34:11 DEBUG - Using 'application/json', given [application/json] and supported [application/json]
15:34:11 DEBUG - Writing [com.example.api_gestion_almacen.dtos.UsuarioDto@7e0ed4cb]
15:34:11 DEBUG - Completed 200 OK
15:34:11 DEBUG - PUT "/api/usuarios/51", parameters={}
15:34:11 DEBUG - Mapped to com.example.api_gestion_almacen.controladores.UsuarioControlador#actualizarUsuario(Long, CrearUsuDto)
15:34:11 DEBUG - Read "application/json;charset=UTF-8" to [CrearUsuDto{nombreCompleto='andres', movil='null', correoElectronico='boltaxmd@gmail.com', rolId=4,  (truncated)...]
15:34:11 INFO  - Iniciando actualización de usuario con ID: 51
15:34:11 DEBUG - Datos de actualización: CrearUsuDto{nombreCompleto='andres', movil='null', correoElectronico='boltaxmd@gmail.com', rolId=4, contrasena='[PROTECTED]', foto=presente}
15:34:11 DEBUG - 
    select
        ue1_0.id,
        ue1_0.contrasena,
        ue1_0.correo_confirmado,
        ue1_0.correo_electronico,
        ue1_0.fecha_creacion,
        ue1_0.foto,
        ue1_0.google,
        ue1_0.movil,
        ue1_0.nombre_completo,
        r1_0.id,
        r1_0.nombre 
    from
        usuarios ue1_0 
    left join
        roles r1_0 
            on r1_0.id=ue1_0.rol_id 
    where
        ue1_0.id=?
15:34:12 DEBUG - 
    select
        re1_0.id,
        re1_0.nombre 
    from
        roles re1_0 
    where
        re1_0.id=?
15:34:12 DEBUG - 
    select
        ue1_0.id,
        ue1_0.contrasena,
        ue1_0.correo_confirmado,
        ue1_0.correo_electronico,
        ue1_0.fecha_creacion,
        ue1_0.foto,
        ue1_0.google,
        ue1_0.movil,
        ue1_0.nombre_completo,
        r1_0.id,
        r1_0.nombre 
    from
        usuarios ue1_0 
    left join
        roles r1_0 
            on r1_0.id=ue1_0.rol_id 
    where
        ue1_0.id=?
15:34:12 INFO  - Usuario actualizado exitosamente. ID: 51
15:34:12 DEBUG - Using 'application/json', given [*/*] and supported [application/json]
15:34:12 DEBUG - Writing [CrearUsuDto{nombreCompleto='andres', movil='null', correoElectronico='boltaxmd@gmail.com', rolId=4,  (truncated)...]
15:34:12 DEBUG - Completed 200 OK
15:34:12 DEBUG - GET "/api/usuarios/correo/boltaxmd@gmail.com", parameters={}
15:34:12 DEBUG - Mapped to com.example.api_gestion_almacen.controladores.UsuarioControlador#buscarPorCorreo(String)
15:34:12 INFO  - Buscando usuario por correo: boltaxmd@gmail.com
15:34:12 DEBUG - 
    select
        ue1_0.id,
        ue1_0.contrasena,
        ue1_0.correo_confirmado,
        ue1_0.correo_electronico,
        ue1_0.fecha_creacion,
        ue1_0.foto,
        ue1_0.google,
        ue1_0.movil,
        ue1_0.nombre_completo,
        ue1_0.rol_id 
    from
        usuarios ue1_0 
    where
        ue1_0.correo_electronico=?
15:34:13 DEBUG - 
    select
        re1_0.id,
        re1_0.nombre 
    from
        roles re1_0 
    where
        re1_0.id=?
15:34:13 INFO  - Usuario encontrado: boltaxmd@gmail.com
15:34:13 DEBUG - Using 'application/json', given [application/json] and supported [application/json]
15:34:13 DEBUG - Writing [com.example.api_gestion_almacen.dtos.UsuarioDto@6974aeb8]
15:34:13 DEBUG - Completed 200 OK
15:34:18 DEBUG - GET "/api/usuarios/correo/palomitasverdes73@gmail.com", parameters={}
15:34:18 DEBUG - Mapped to com.example.api_gestion_almacen.controladores.UsuarioControlador#buscarPorCorreo(String)
15:34:18 INFO  - Buscando usuario por correo: palomitasverdes73@gmail.com
15:34:18 DEBUG - 
    select
        ue1_0.id,
        ue1_0.contrasena,
        ue1_0.correo_confirmado,
        ue1_0.correo_electronico,
        ue1_0.fecha_creacion,
        ue1_0.foto,
        ue1_0.google,
        ue1_0.movil,
        ue1_0.nombre_completo,
        ue1_0.rol_id 
    from
        usuarios ue1_0 
    where
        ue1_0.correo_electronico=?
15:34:18 DEBUG - 
    select
        re1_0.id,
        re1_0.nombre 
    from
        roles re1_0 
    where
        re1_0.id=?
15:34:19 INFO  - Usuario encontrado: palomitasverdes73@gmail.com
15:34:19 DEBUG - Using 'application/json', given [application/json] and supported [application/json]
15:34:19 DEBUG - Writing [com.example.api_gestion_almacen.dtos.UsuarioDto@9b90118]
15:34:19 DEBUG - Completed 200 OK
15:34:19 DEBUG - POST "/api/usuarios/autenticar", parameters={}
15:34:19 DEBUG - Mapped to com.example.api_gestion_almacen.controladores.UsuarioControlador#autenticarUsuario(Map)
15:34:19 DEBUG - Read "application/json;charset=UTF-8" to [{contrasena=3cc890a93fa2160c551414745f084c101a9a4be2d32d6b1b1c622d1a217dbbaa, correoElectronico=palo (truncated)...]
15:34:19 INFO  - Intento de autenticación para usuario: palomitasverdes73@gmail.com
15:34:19 DEBUG - 
    select
        ue1_0.id,
        ue1_0.contrasena,
        ue1_0.correo_confirmado,
        ue1_0.correo_electronico,
        ue1_0.fecha_creacion,
        ue1_0.foto,
        ue1_0.google,
        ue1_0.movil,
        ue1_0.nombre_completo,
        ue1_0.rol_id 
    from
        usuarios ue1_0 
    where
        ue1_0.correo_electronico=?
15:34:19 DEBUG - 
    select
        re1_0.id,
        re1_0.nombre 
    from
        roles re1_0 
    where
        re1_0.id=?
15:34:19 INFO  - Autenticación exitosa para: palomitasverdes73@gmail.com
15:34:19 DEBUG - Using 'application/json', given [*/*] and supported [application/json]
15:34:19 DEBUG - Writing [com.example.api_gestion_almacen.dtos.UsuarioDto@67db9a9]
15:34:19 DEBUG - Completed 200 OK
15:34:33 DEBUG - GET "/api/usuarios/correo/boltaxmd@gmail.com", parameters={}
15:34:33 DEBUG - Mapped to com.example.api_gestion_almacen.controladores.UsuarioControlador#buscarPorCorreo(String)
15:34:33 INFO  - Buscando usuario por correo: boltaxmd@gmail.com
15:34:33 DEBUG - 
    select
        ue1_0.id,
        ue1_0.contrasena,
        ue1_0.correo_confirmado,
        ue1_0.correo_electronico,
        ue1_0.fecha_creacion,
        ue1_0.foto,
        ue1_0.google,
        ue1_0.movil,
        ue1_0.nombre_completo,
        ue1_0.rol_id 
    from
        usuarios ue1_0 
    where
        ue1_0.correo_electronico=?
15:34:34 DEBUG - 
    select
        re1_0.id,
        re1_0.nombre 
    from
        roles re1_0 
    where
        re1_0.id=?
15:34:34 INFO  - Usuario encontrado: boltaxmd@gmail.com
15:34:34 DEBUG - Using 'application/json', given [application/json] and supported [application/json]
15:34:34 DEBUG - Writing [com.example.api_gestion_almacen.dtos.UsuarioDto@720dc497]
15:34:34 DEBUG - Completed 200 OK
15:34:34 DEBUG - PUT "/api/usuarios/51", parameters={}
15:34:34 DEBUG - Mapped to com.example.api_gestion_almacen.controladores.UsuarioControlador#actualizarUsuario(Long, CrearUsuDto)
15:34:34 DEBUG - Read "application/json;charset=UTF-8" to [CrearUsuDto{nombreCompleto='andres', movil='null', correoElectronico='boltaxmd@gmail.com', rolId=4,  (truncated)...]
15:34:34 INFO  - Iniciando actualización de usuario con ID: 51
15:34:34 DEBUG - Datos de actualización: CrearUsuDto{nombreCompleto='andres', movil='null', correoElectronico='boltaxmd@gmail.com', rolId=4, contrasena='[PROTECTED]', foto=presente}
15:34:34 DEBUG - 
    select
        ue1_0.id,
        ue1_0.contrasena,
        ue1_0.correo_confirmado,
        ue1_0.correo_electronico,
        ue1_0.fecha_creacion,
        ue1_0.foto,
        ue1_0.google,
        ue1_0.movil,
        ue1_0.nombre_completo,
        r1_0.id,
        r1_0.nombre 
    from
        usuarios ue1_0 
    left join
        roles r1_0 
            on r1_0.id=ue1_0.rol_id 
    where
        ue1_0.id=?
15:34:34 DEBUG - 
    select
        re1_0.id,
        re1_0.nombre 
    from
        roles re1_0 
    where
        re1_0.id=?
15:34:35 DEBUG - 
    select
        ue1_0.id,
        ue1_0.contrasena,
        ue1_0.correo_confirmado,
        ue1_0.correo_electronico,
        ue1_0.fecha_creacion,
        ue1_0.foto,
        ue1_0.google,
        ue1_0.movil,
        ue1_0.nombre_completo,
        r1_0.id,
        r1_0.nombre 
    from
        usuarios ue1_0 
    left join
        roles r1_0 
            on r1_0.id=ue1_0.rol_id 
    where
        ue1_0.id=?
15:34:35 INFO  - Usuario actualizado exitosamente. ID: 51
15:34:35 DEBUG - Using 'application/json', given [*/*] and supported [application/json]
15:34:35 DEBUG - Writing [CrearUsuDto{nombreCompleto='andres', movil='null', correoElectronico='boltaxmd@gmail.com', rolId=4,  (truncated)...]
15:34:35 DEBUG - Completed 200 OK
15:34:35 DEBUG - GET "/api/usuarios/correo/boltaxmd@gmail.com", parameters={}
15:34:35 DEBUG - Mapped to com.example.api_gestion_almacen.controladores.UsuarioControlador#buscarPorCorreo(String)
15:34:35 INFO  - Buscando usuario por correo: boltaxmd@gmail.com
15:34:35 DEBUG - 
    select
        ue1_0.id,
        ue1_0.contrasena,
        ue1_0.correo_confirmado,
        ue1_0.correo_electronico,
        ue1_0.fecha_creacion,
        ue1_0.foto,
        ue1_0.google,
        ue1_0.movil,
        ue1_0.nombre_completo,
        ue1_0.rol_id 
    from
        usuarios ue1_0 
    where
        ue1_0.correo_electronico=?
15:34:35 DEBUG - 
    select
        re1_0.id,
        re1_0.nombre 
    from
        roles re1_0 
    where
        re1_0.id=?
15:34:35 INFO  - Usuario encontrado: boltaxmd@gmail.com
15:34:35 DEBUG - Using 'application/json', given [application/json] and supported [application/json]
15:34:35 DEBUG - Writing [com.example.api_gestion_almacen.dtos.UsuarioDto@3e2fec86]
15:34:35 DEBUG - Completed 200 OK
15:38:45 DEBUG - GET "/api/usuarios/correo/boltaxmd@gmail.com", parameters={}
15:38:45 DEBUG - Mapped to com.example.api_gestion_almacen.controladores.UsuarioControlador#buscarPorCorreo(String)
15:38:45 INFO  - Buscando usuario por correo: boltaxmd@gmail.com
15:38:45 DEBUG - 
    select
        ue1_0.id,
        ue1_0.contrasena,
        ue1_0.correo_confirmado,
        ue1_0.correo_electronico,
        ue1_0.fecha_creacion,
        ue1_0.foto,
        ue1_0.google,
        ue1_0.movil,
        ue1_0.nombre_completo,
        ue1_0.rol_id 
    from
        usuarios ue1_0 
    where
        ue1_0.correo_electronico=?
15:38:45 DEBUG - 
    select
        re1_0.id,
        re1_0.nombre 
    from
        roles re1_0 
    where
        re1_0.id=?
15:38:45 INFO  - Usuario encontrado: boltaxmd@gmail.com
15:38:45 DEBUG - Using 'application/json', given [application/json] and supported [application/json]
15:38:45 DEBUG - Writing [com.example.api_gestion_almacen.dtos.UsuarioDto@3ceff22e]
15:38:45 DEBUG - Completed 200 OK
15:38:46 DEBUG - PUT "/api/usuarios/51", parameters={}
15:38:46 DEBUG - Mapped to com.example.api_gestion_almacen.controladores.UsuarioControlador#actualizarUsuario(Long, CrearUsuDto)
15:38:46 DEBUG - Read "application/json;charset=UTF-8" to [CrearUsuDto{nombreCompleto='andres', movil='null', correoElectronico='boltaxmd@gmail.com', rolId=4,  (truncated)...]
15:38:46 INFO  - Iniciando actualización de usuario con ID: 51
15:38:46 DEBUG - Datos de actualización: CrearUsuDto{nombreCompleto='andres', movil='null', correoElectronico='boltaxmd@gmail.com', rolId=4, contrasena='[PROTECTED]', foto=presente}
15:38:46 DEBUG - 
    select
        ue1_0.id,
        ue1_0.contrasena,
        ue1_0.correo_confirmado,
        ue1_0.correo_electronico,
        ue1_0.fecha_creacion,
        ue1_0.foto,
        ue1_0.google,
        ue1_0.movil,
        ue1_0.nombre_completo,
        r1_0.id,
        r1_0.nombre 
    from
        usuarios ue1_0 
    left join
        roles r1_0 
            on r1_0.id=ue1_0.rol_id 
    where
        ue1_0.id=?
15:38:47 DEBUG - 
    select
        re1_0.id,
        re1_0.nombre 
    from
        roles re1_0 
    where
        re1_0.id=?
15:38:47 DEBUG - 
    select
        ue1_0.id,
        ue1_0.contrasena,
        ue1_0.correo_confirmado,
        ue1_0.correo_electronico,
        ue1_0.fecha_creacion,
        ue1_0.foto,
        ue1_0.google,
        ue1_0.movil,
        ue1_0.nombre_completo,
        r1_0.id,
        r1_0.nombre 
    from
        usuarios ue1_0 
    left join
        roles r1_0 
            on r1_0.id=ue1_0.rol_id 
    where
        ue1_0.id=?
15:38:47 INFO  - Usuario actualizado exitosamente. ID: 51
15:38:47 DEBUG - Using 'application/json', given [*/*] and supported [application/json]
15:38:47 DEBUG - Writing [CrearUsuDto{nombreCompleto='andres', movil='null', correoElectronico='boltaxmd@gmail.com', rolId=4,  (truncated)...]
15:38:47 DEBUG - Completed 200 OK
15:38:47 DEBUG - GET "/api/usuarios/correo/boltaxmd@gmail.com", parameters={}
15:38:47 DEBUG - Mapped to com.example.api_gestion_almacen.controladores.UsuarioControlador#buscarPorCorreo(String)
15:38:47 INFO  - Buscando usuario por correo: boltaxmd@gmail.com
15:38:47 DEBUG - 
    select
        ue1_0.id,
        ue1_0.contrasena,
        ue1_0.correo_confirmado,
        ue1_0.correo_electronico,
        ue1_0.fecha_creacion,
        ue1_0.foto,
        ue1_0.google,
        ue1_0.movil,
        ue1_0.nombre_completo,
        ue1_0.rol_id 
    from
        usuarios ue1_0 
    where
        ue1_0.correo_electronico=?
15:38:47 DEBUG - 
    select
        re1_0.id,
        re1_0.nombre 
    from
        roles re1_0 
    where
        re1_0.id=?
15:38:48 INFO  - Usuario encontrado: boltaxmd@gmail.com
15:38:48 DEBUG - Using 'application/json', given [application/json] and supported [application/json]
15:38:48 DEBUG - Writing [com.example.api_gestion_almacen.dtos.UsuarioDto@55a8bc5c]
15:38:48 DEBUG - Completed 200 OK
15:50:47 DEBUG - GET "/api/usuarios/correo/boltaxmd@gmail.com", parameters={}
15:50:47 DEBUG - Mapped to com.example.api_gestion_almacen.controladores.UsuarioControlador#buscarPorCorreo(String)
15:50:47 INFO  - Buscando usuario por correo: boltaxmd@gmail.com
15:50:47 DEBUG - 
    select
        ue1_0.id,
        ue1_0.contrasena,
        ue1_0.correo_confirmado,
        ue1_0.correo_electronico,
        ue1_0.fecha_creacion,
        ue1_0.foto,
        ue1_0.google,
        ue1_0.movil,
        ue1_0.nombre_completo,
        ue1_0.rol_id 
    from
        usuarios ue1_0 
    where
        ue1_0.correo_electronico=?
15:50:48 DEBUG - 
    select
        re1_0.id,
        re1_0.nombre 
    from
        roles re1_0 
    where
        re1_0.id=?
15:50:48 INFO  - Usuario encontrado: boltaxmd@gmail.com
15:50:48 DEBUG - Using 'application/json', given [application/json] and supported [application/json]
15:50:48 DEBUG - Writing [com.example.api_gestion_almacen.dtos.UsuarioDto@34f73165]
15:50:48 DEBUG - Completed 200 OK
15:53:59 DEBUG - GET "/api/usuarios/correo/boltaxmd@gmail.com", parameters={}
15:53:59 DEBUG - Mapped to com.example.api_gestion_almacen.controladores.UsuarioControlador#buscarPorCorreo(String)
15:53:59 INFO  - Buscando usuario por correo: boltaxmd@gmail.com
15:53:59 DEBUG - 
    select
        ue1_0.id,
        ue1_0.contrasena,
        ue1_0.correo_confirmado,
        ue1_0.correo_electronico,
        ue1_0.fecha_creacion,
        ue1_0.foto,
        ue1_0.google,
        ue1_0.movil,
        ue1_0.nombre_completo,
        ue1_0.rol_id 
    from
        usuarios ue1_0 
    where
        ue1_0.correo_electronico=?
15:53:59 DEBUG - 
    select
        re1_0.id,
        re1_0.nombre 
    from
        roles re1_0 
    where
        re1_0.id=?
15:54:00 INFO  - Usuario encontrado: boltaxmd@gmail.com
15:54:00 DEBUG - Using 'application/json', given [application/json] and supported [application/json]
15:54:00 DEBUG - Writing [com.example.api_gestion_almacen.dtos.UsuarioDto@46aa8f8d]
15:54:00 DEBUG - Completed 200 OK
15:55:32 DEBUG - GET "/api/usuarios/correo/boltaxmd@gmail.com", parameters={}
15:55:32 DEBUG - Mapped to com.example.api_gestion_almacen.controladores.UsuarioControlador#buscarPorCorreo(String)
15:55:32 INFO  - Buscando usuario por correo: boltaxmd@gmail.com
15:55:32 DEBUG - 
    select
        ue1_0.id,
        ue1_0.contrasena,
        ue1_0.correo_confirmado,
        ue1_0.correo_electronico,
        ue1_0.fecha_creacion,
        ue1_0.foto,
        ue1_0.google,
        ue1_0.movil,
        ue1_0.nombre_completo,
        ue1_0.rol_id 
    from
        usuarios ue1_0 
    where
        ue1_0.correo_electronico=?
15:55:32 DEBUG - 
    select
        re1_0.id,
        re1_0.nombre 
    from
        roles re1_0 
    where
        re1_0.id=?
15:55:32 INFO  - Usuario encontrado: boltaxmd@gmail.com
15:55:32 DEBUG - Using 'application/json', given [application/json] and supported [application/json]
15:55:32 DEBUG - Writing [com.example.api_gestion_almacen.dtos.UsuarioDto@1ce6c7bf]
15:55:32 DEBUG - Completed 200 OK
16:00:22 DEBUG - GET "/api/usuarios/correo/palomitasverdes73@gmail.com", parameters={}
16:00:22 DEBUG - Mapped to com.example.api_gestion_almacen.controladores.UsuarioControlador#buscarPorCorreo(String)
16:00:22 INFO  - Buscando usuario por correo: palomitasverdes73@gmail.com
16:00:22 DEBUG - 
    select
        ue1_0.id,
        ue1_0.contrasena,
        ue1_0.correo_confirmado,
        ue1_0.correo_electronico,
        ue1_0.fecha_creacion,
        ue1_0.foto,
        ue1_0.google,
        ue1_0.movil,
        ue1_0.nombre_completo,
        ue1_0.rol_id 
    from
        usuarios ue1_0 
    where
        ue1_0.correo_electronico=?
16:00:23 DEBUG - 
    select
        re1_0.id,
        re1_0.nombre 
    from
        roles re1_0 
    where
        re1_0.id=?
16:00:23 INFO  - Usuario encontrado: palomitasverdes73@gmail.com
16:00:23 DEBUG - Using 'application/json', given [application/json] and supported [application/json]
16:00:23 DEBUG - Writing [com.example.api_gestion_almacen.dtos.UsuarioDto@5c5e077e]
16:00:23 DEBUG - Completed 200 OK
16:00:23 DEBUG - POST "/api/usuarios/autenticar", parameters={}
16:00:23 DEBUG - Mapped to com.example.api_gestion_almacen.controladores.UsuarioControlador#autenticarUsuario(Map)
16:00:23 DEBUG - Read "application/json;charset=UTF-8" to [{contrasena=3cc890a93fa2160c551414745f084c101a9a4be2d32d6b1b1c622d1a217dbbaa, correoElectronico=palo (truncated)...]
16:00:23 INFO  - Intento de autenticación para usuario: palomitasverdes73@gmail.com
16:00:23 DEBUG - 
    select
        ue1_0.id,
        ue1_0.contrasena,
        ue1_0.correo_confirmado,
        ue1_0.correo_electronico,
        ue1_0.fecha_creacion,
        ue1_0.foto,
        ue1_0.google,
        ue1_0.movil,
        ue1_0.nombre_completo,
        ue1_0.rol_id 
    from
        usuarios ue1_0 
    where
        ue1_0.correo_electronico=?
16:00:23 DEBUG - 
    select
        re1_0.id,
        re1_0.nombre 
    from
        roles re1_0 
    where
        re1_0.id=?
16:00:23 INFO  - Autenticación exitosa para: palomitasverdes73@gmail.com
16:00:23 DEBUG - Using 'application/json', given [*/*] and supported [application/json]
16:00:23 DEBUG - Writing [com.example.api_gestion_almacen.dtos.UsuarioDto@3ad195ee]
16:00:23 DEBUG - Completed 200 OK
16:02:33 DEBUG - GET "/api/usuarios", parameters={}
16:02:33 DEBUG - Mapped to com.example.api_gestion_almacen.controladores.UsuarioControlador#obtenerTodosLosUsuarios()
16:02:33 INFO  - Obteniendo lista de todos los usuarios
16:02:33 DEBUG - 
    select
        ue1_0.id,
        ue1_0.contrasena,
        ue1_0.correo_confirmado,
        ue1_0.correo_electronico,
        ue1_0.fecha_creacion,
        ue1_0.foto,
        ue1_0.google,
        ue1_0.movil,
        ue1_0.nombre_completo,
        ue1_0.rol_id 
    from
        usuarios ue1_0
16:02:37 DEBUG - 
    select
        re1_0.id,
        re1_0.nombre 
    from
        roles re1_0 
    where
        re1_0.id=?
16:02:37 DEBUG - 
    select
        re1_0.id,
        re1_0.nombre 
    from
        roles re1_0 
    where
        re1_0.id=?
16:02:37 DEBUG - 
    select
        re1_0.id,
        re1_0.nombre 
    from
        roles re1_0 
    where
        re1_0.id=?
16:02:37 DEBUG - 
    select
        re1_0.id,
        re1_0.nombre 
    from
        roles re1_0 
    where
        re1_0.id=?
16:02:37 DEBUG - Failed to complete request: org.springframework.orm.jpa.JpaSystemException: Null value was assigned to a property [class com.example.api_gestion_almacen.entidades.UsuarioEntidad.correoConfirmado] of primitive type: 'com.example.api_gestion_almacen.entidades.UsuarioEntidad.correoConfirmado' (setter)
16:02:37 ERROR - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: org.springframework.orm.jpa.JpaSystemException: Null value was assigned to a property [class com.example.api_gestion_almacen.entidades.UsuarioEntidad.correoConfirmado] of primitive type: 'com.example.api_gestion_almacen.entidades.UsuarioEntidad.correoConfirmado' (setter)] with root cause
java.lang.IllegalArgumentException: Can not set boolean field com.example.api_gestion_almacen.entidades.UsuarioEntidad.correoConfirmado to null value
	at java.base/jdk.internal.reflect.FieldAccessorImpl.throwSetIllegalArgumentException(FieldAccessorImpl.java:228)
	at java.base/jdk.internal.reflect.FieldAccessorImpl.throwSetIllegalArgumentException(FieldAccessorImpl.java:232)
	at java.base/jdk.internal.reflect.MethodHandleBooleanFieldAccessorImpl.set(MethodHandleBooleanFieldAccessorImpl.java:111)
	at java.base/java.lang.reflect.Field.set(Field.java:836)
	at org.hibernate.property.access.spi.SetterFieldImpl.set(SetterFieldImpl.java:57)
	at org.hibernate.persister.entity.AbstractEntityPersister.setPropertyValues(AbstractEntityPersister.java:4635)
	at org.hibernate.sql.results.graph.entity.internal.EntityInitializerImpl.initializeEntityInstance(EntityInitializerImpl.java:1345)
	at org.hibernate.sql.results.graph.entity.internal.EntityInitializerImpl.initializeInstance(EntityInitializerImpl.java:1308)
	at org.hibernate.sql.results.graph.entity.internal.EntityInitializerImpl.initializeInstance(EntityInitializerImpl.java:97)
	at org.hibernate.sql.results.internal.StandardRowReader.coordinateInitializers(StandardRowReader.java:244)
	at org.hibernate.sql.results.internal.StandardRowReader.readRow(StandardRowReader.java:141)
	at org.hibernate.sql.results.spi.ListResultsConsumer.read(ListResultsConsumer.java:249)
	at org.hibernate.sql.results.spi.ListResultsConsumer.consume(ListResultsConsumer.java:201)
	at org.hibernate.sql.results.spi.ListResultsConsumer.consume(ListResultsConsumer.java:35)
	at org.hibernate.sql.exec.internal.JdbcSelectExecutorStandardImpl.doExecuteQuery(JdbcSelectExecutorStandardImpl.java:224)
	at org.hibernate.sql.exec.internal.JdbcSelectExecutorStandardImpl.executeQuery(JdbcSelectExecutorStandardImpl.java:102)
	at org.hibernate.sql.exec.spi.JdbcSelectExecutor.executeQuery(JdbcSelectExecutor.java:91)
	at org.hibernate.sql.exec.spi.JdbcSelectExecutor.list(JdbcSelectExecutor.java:165)
	at org.hibernate.query.sqm.internal.ConcreteSqmSelectQueryPlan.lambda$new$1(ConcreteSqmSelectQueryPlan.java:152)
	at org.hibernate.query.sqm.internal.ConcreteSqmSelectQueryPlan.withCacheableSqmInterpretation(ConcreteSqmSelectQueryPlan.java:442)
	at org.hibernate.query.sqm.internal.ConcreteSqmSelectQueryPlan.performList(ConcreteSqmSelectQueryPlan.java:362)
	at org.hibernate.query.sqm.internal.QuerySqmImpl.doList(QuerySqmImpl.java:380)
	at org.hibernate.query.spi.AbstractSelectionQuery.list(AbstractSelectionQuery.java:143)
	at org.hibernate.query.Query.getResultList(Query.java:120)
	at org.springframework.data.jpa.repository.support.SimpleJpaRepository.findAll(SimpleJpaRepository.java:393)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:359)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker$RepositoryFragmentMethodInvoker.lambda$new$0(RepositoryMethodInvoker.java:277)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.doInvoke(RepositoryMethodInvoker.java:170)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.invoke(RepositoryMethodInvoker.java:158)
	at org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments.invoke(RepositoryComposition.java:515)
	at org.springframework.data.repository.core.support.RepositoryComposition.invoke(RepositoryComposition.java:284)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$ImplementationMethodExecutionInterceptor.invoke(RepositoryFactorySupport.java:752)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:174)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:149)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:69)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:380)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:138)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:165)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:223)
	at jdk.proxy2/jdk.proxy2.$Proxy127.findAll(Unknown Source)
	at com.example.api_gestion_almacen.servicios.UsuarioServicio.obtenerTodosLosUsuarios(UsuarioServicio.java:90)
	at com.example.api_gestion_almacen.controladores.UsuarioControlador.obtenerTodosLosUsuarios(UsuarioControlador.java:91)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:257)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:190)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:986)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:891)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1088)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:978)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:397)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:1583)
16:02:37 DEBUG - "ERROR" dispatch for GET "/error", parameters={}
16:02:37 DEBUG - Mapped to org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController#error(HttpServletRequest)
16:02:37 DEBUG - Using 'application/json', given [application/json] and supported [application/json, application/*+json]
16:02:37 DEBUG - Writing [{timestamp=Fri Mar 07 16:02:37 CET 2025, status=500, error=Internal Server Error, path=/api/usuarios (truncated)...]
16:02:37 DEBUG - Exiting from "ERROR" dispatch, status 500
16:02:45 DEBUG - GET "/api/usuarios", parameters={}
16:02:45 DEBUG - Mapped to com.example.api_gestion_almacen.controladores.UsuarioControlador#obtenerTodosLosUsuarios()
16:02:45 INFO  - Obteniendo lista de todos los usuarios
16:02:45 DEBUG - 
    select
        ue1_0.id,
        ue1_0.contrasena,
        ue1_0.correo_confirmado,
        ue1_0.correo_electronico,
        ue1_0.fecha_creacion,
        ue1_0.foto,
        ue1_0.google,
        ue1_0.movil,
        ue1_0.nombre_completo,
        ue1_0.rol_id 
    from
        usuarios ue1_0
16:02:49 DEBUG - 
    select
        re1_0.id,
        re1_0.nombre 
    from
        roles re1_0 
    where
        re1_0.id=?
16:02:49 DEBUG - 
    select
        re1_0.id,
        re1_0.nombre 
    from
        roles re1_0 
    where
        re1_0.id=?
16:02:49 DEBUG - 
    select
        re1_0.id,
        re1_0.nombre 
    from
        roles re1_0 
    where
        re1_0.id=?
16:02:49 DEBUG - 
    select
        re1_0.id,
        re1_0.nombre 
    from
        roles re1_0 
    where
        re1_0.id=?
16:02:49 DEBUG - Failed to complete request: org.springframework.orm.jpa.JpaSystemException: Null value was assigned to a property [class com.example.api_gestion_almacen.entidades.UsuarioEntidad.correoConfirmado] of primitive type: 'com.example.api_gestion_almacen.entidades.UsuarioEntidad.correoConfirmado' (setter)
16:02:49 ERROR - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: org.springframework.orm.jpa.JpaSystemException: Null value was assigned to a property [class com.example.api_gestion_almacen.entidades.UsuarioEntidad.correoConfirmado] of primitive type: 'com.example.api_gestion_almacen.entidades.UsuarioEntidad.correoConfirmado' (setter)] with root cause
java.lang.IllegalArgumentException: Can not set boolean field com.example.api_gestion_almacen.entidades.UsuarioEntidad.correoConfirmado to null value
	at java.base/jdk.internal.reflect.FieldAccessorImpl.throwSetIllegalArgumentException(FieldAccessorImpl.java:228)
	at java.base/jdk.internal.reflect.FieldAccessorImpl.throwSetIllegalArgumentException(FieldAccessorImpl.java:232)
	at java.base/jdk.internal.reflect.MethodHandleBooleanFieldAccessorImpl.set(MethodHandleBooleanFieldAccessorImpl.java:111)
	at java.base/java.lang.reflect.Field.set(Field.java:836)
	at org.hibernate.property.access.spi.SetterFieldImpl.set(SetterFieldImpl.java:57)
	at org.hibernate.persister.entity.AbstractEntityPersister.setPropertyValues(AbstractEntityPersister.java:4635)
	at org.hibernate.sql.results.graph.entity.internal.EntityInitializerImpl.initializeEntityInstance(EntityInitializerImpl.java:1345)
	at org.hibernate.sql.results.graph.entity.internal.EntityInitializerImpl.initializeInstance(EntityInitializerImpl.java:1308)
	at org.hibernate.sql.results.graph.entity.internal.EntityInitializerImpl.initializeInstance(EntityInitializerImpl.java:97)
	at org.hibernate.sql.results.internal.StandardRowReader.coordinateInitializers(StandardRowReader.java:244)
	at org.hibernate.sql.results.internal.StandardRowReader.readRow(StandardRowReader.java:141)
	at org.hibernate.sql.results.spi.ListResultsConsumer.read(ListResultsConsumer.java:249)
	at org.hibernate.sql.results.spi.ListResultsConsumer.consume(ListResultsConsumer.java:201)
	at org.hibernate.sql.results.spi.ListResultsConsumer.consume(ListResultsConsumer.java:35)
	at org.hibernate.sql.exec.internal.JdbcSelectExecutorStandardImpl.doExecuteQuery(JdbcSelectExecutorStandardImpl.java:224)
	at org.hibernate.sql.exec.internal.JdbcSelectExecutorStandardImpl.executeQuery(JdbcSelectExecutorStandardImpl.java:102)
	at org.hibernate.sql.exec.spi.JdbcSelectExecutor.executeQuery(JdbcSelectExecutor.java:91)
	at org.hibernate.sql.exec.spi.JdbcSelectExecutor.list(JdbcSelectExecutor.java:165)
	at org.hibernate.query.sqm.internal.ConcreteSqmSelectQueryPlan.lambda$new$1(ConcreteSqmSelectQueryPlan.java:152)
	at org.hibernate.query.sqm.internal.ConcreteSqmSelectQueryPlan.withCacheableSqmInterpretation(ConcreteSqmSelectQueryPlan.java:442)
	at org.hibernate.query.sqm.internal.ConcreteSqmSelectQueryPlan.performList(ConcreteSqmSelectQueryPlan.java:362)
	at org.hibernate.query.sqm.internal.QuerySqmImpl.doList(QuerySqmImpl.java:380)
	at org.hibernate.query.spi.AbstractSelectionQuery.list(AbstractSelectionQuery.java:143)
	at org.hibernate.query.Query.getResultList(Query.java:120)
	at org.springframework.data.jpa.repository.support.SimpleJpaRepository.findAll(SimpleJpaRepository.java:393)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:359)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker$RepositoryFragmentMethodInvoker.lambda$new$0(RepositoryMethodInvoker.java:277)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.doInvoke(RepositoryMethodInvoker.java:170)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.invoke(RepositoryMethodInvoker.java:158)
	at org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments.invoke(RepositoryComposition.java:515)
	at org.springframework.data.repository.core.support.RepositoryComposition.invoke(RepositoryComposition.java:284)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$ImplementationMethodExecutionInterceptor.invoke(RepositoryFactorySupport.java:752)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:174)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:149)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:69)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:380)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:138)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:165)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:223)
	at jdk.proxy2/jdk.proxy2.$Proxy127.findAll(Unknown Source)
	at com.example.api_gestion_almacen.servicios.UsuarioServicio.obtenerTodosLosUsuarios(UsuarioServicio.java:90)
	at com.example.api_gestion_almacen.controladores.UsuarioControlador.obtenerTodosLosUsuarios(UsuarioControlador.java:91)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:257)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:190)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:986)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:891)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1088)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:978)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:397)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:1583)
16:02:49 DEBUG - "ERROR" dispatch for GET "/error", parameters={}
16:02:49 DEBUG - Mapped to org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController#error(HttpServletRequest)
16:02:49 DEBUG - Using 'application/json', given [application/json] and supported [application/json, application/*+json]
16:02:49 DEBUG - Writing [{timestamp=Fri Mar 07 16:02:49 CET 2025, status=500, error=Internal Server Error, path=/api/usuarios (truncated)...]
16:02:49 DEBUG - Exiting from "ERROR" dispatch, status 500
16:13:44 INFO  - Application shutdown requested.
16:13:44 DEBUG - Application availability state ReadinessState changed from ACCEPTING_TRAFFIC to REFUSING_TRAFFIC
16:13:44 DEBUG - Closing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@3f2ef586, started on Fri Mar 07 15:28:30 CET 2025
16:13:44 INFO  - Commencing graceful shutdown. Waiting for active requests to complete
16:13:44 INFO  - Graceful shutdown complete
16:13:55 INFO  - Starting ApiGestionAlmacenApplication using Java 21.0.4 with PID 32144 (C:\Users\amoliaz\Downloads\api-gestion-almacen11-02\api-gestion-almacen10-02\api-gestion-almacen (1)_1\api-gestion-almacen (1)\api-gestion-almacen\target\classes started by amoliaz in C:\Users\amoliaz\Downloads\api-gestion-almacen11-02\api-gestion-almacen10-02\api-gestion-almacen (1)_1\api-gestion-almacen (1)\api-gestion-almacen)
16:13:55 DEBUG - Running with Spring Boot v3.4.2, Spring v6.2.2
16:13:55 INFO  - No active profile set, falling back to 1 default profile: "default"
16:13:55 DEBUG - Loading source class com.example.api_gestion_almacen.ApiGestionAlmacenApplication
16:13:55 DEBUG - Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@756cf158
16:13:56 DEBUG - @EnableAutoConfiguration was declared on a class in the package 'com.example.api_gestion_almacen'. Automatic @Repository and @Entity scanning is enabled.
16:13:56 DEBUG - Code archive: C:\Users\amoliaz\.m2\repository\org\springframework\boot\spring-boot\3.4.2\spring-boot-3.4.2.jar
16:13:56 DEBUG - Code archive: C:\Users\amoliaz\.m2\repository\org\springframework\boot\spring-boot\3.4.2\spring-boot-3.4.2.jar
16:13:56 DEBUG - Document root: C:\Users\amoliaz\Downloads\api-gestion-almacen11-02\api-gestion-almacen10-02\api-gestion-almacen (1)_1\api-gestion-almacen (1)\api-gestion-almacen\src\main\webapp
16:13:56 INFO  - Tomcat initialized with port 8081 (http)
16:13:56 DEBUG - Published root WebApplicationContext as ServletContext attribute with name [org.springframework.web.context.WebApplicationContext.ROOT]
16:13:56 INFO  - Root WebApplicationContext: initialization completed in 1040 ms
16:13:56 DEBUG - Mapping filters: characterEncodingFilter urls=[/*] order=-2147483648, formContentFilter urls=[/*] order=-9900, requestContextFilter urls=[/*] order=-105
16:13:56 DEBUG - Mapping servlets: dispatcherServlet urls=[/]
16:13:56 DEBUG - Filter 'requestContextFilter' configured for use
16:13:56 DEBUG - Filter 'characterEncodingFilter' configured for use
16:13:56 DEBUG - Filter 'formContentFilter' configured for use
16:14:00 DEBUG - 24 mappings in 'requestMappingHandlerMapping'
16:14:00 DEBUG - Patterns [/webjars/**, /**] in 'resourceHandlerMapping'
16:14:00 DEBUG - ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
16:14:00 DEBUG - ControllerAdvice beans: 0 @ExceptionHandler, 1 ResponseBodyAdvice
16:14:00 DEBUG - Application Admin MBean registered with name 'org.springframework.boot:type=Admin,name=SpringApplication'
16:14:00 INFO  - Tomcat started on port 8081 (http) with context path '/'
16:14:00 DEBUG - 


============================
CONDITIONS EVALUATION REPORT
============================


Positive matches:
-----------------

   AopAutoConfiguration matched:
      - @ConditionalOnProperty (spring.aop.auto=true) matched (OnPropertyCondition)

   AopAutoConfiguration.AspectJAutoProxyingConfiguration matched:
      - @ConditionalOnClass found required class 'org.aspectj.weaver.Advice' (OnClassCondition)

   AopAutoConfiguration.AspectJAutoProxyingConfiguration.CglibAutoProxyConfiguration matched:
      - @ConditionalOnProperty (spring.aop.proxy-target-class=true) matched (OnPropertyCondition)

   ApplicationAvailabilityAutoConfiguration#applicationAvailability matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.availability.ApplicationAvailability; SearchStrategy: all) did not find any beans (OnBeanCondition)

   DataSourceAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'javax.sql.DataSource', 'org.springframework.jdbc.datasource.embedded.EmbeddedDatabaseType' (OnClassCondition)
      - @ConditionalOnMissingBean (types: io.r2dbc.spi.ConnectionFactory; SearchStrategy: all) did not find any beans (OnBeanCondition)

   DataSourceAutoConfiguration.PooledDataSourceConfiguration matched:
      - AnyNestedCondition 1 matched 1 did not; NestedCondition on DataSourceAutoConfiguration.PooledDataSourceCondition.PooledDataSourceAvailable PooledDataSource found supported DataSource; NestedCondition on DataSourceAutoConfiguration.PooledDataSourceCondition.ExplicitType @ConditionalOnProperty (spring.datasource.type) did not find property 'type' (DataSourceAutoConfiguration.PooledDataSourceCondition)
      - @ConditionalOnMissingBean (types: javax.sql.DataSource,javax.sql.XADataSource; SearchStrategy: all) did not find any beans (OnBeanCondition)

   DataSourceAutoConfiguration.PooledDataSourceConfiguration#jdbcConnectionDetails matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.autoconfigure.jdbc.JdbcConnectionDetails; SearchStrategy: all) did not find any beans (OnBeanCondition)

   DataSourceConfiguration.Hikari matched:
      - @ConditionalOnClass found required class 'com.zaxxer.hikari.HikariDataSource' (OnClassCondition)
      - @ConditionalOnProperty (spring.datasource.type=com.zaxxer.hikari.HikariDataSource) matched (OnPropertyCondition)
      - @ConditionalOnMissingBean (types: javax.sql.DataSource; SearchStrategy: all) did not find any beans (OnBeanCondition)

   DataSourceInitializationConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.jdbc.datasource.init.DatabasePopulator' (OnClassCondition)
      - @ConditionalOnSingleCandidate (types: javax.sql.DataSource; SearchStrategy: all) found a single bean 'dataSource'; @ConditionalOnMissingBean (types: org.springframework.boot.autoconfigure.sql.init.SqlDataSourceScriptDatabaseInitializer,org.springframework.boot.autoconfigure.sql.init.SqlR2dbcScriptDatabaseInitializer; SearchStrategy: all) did not find any beans (OnBeanCondition)

   DataSourceJmxConfiguration matched:
      - @ConditionalOnProperty (spring.jmx.enabled=true) matched (OnPropertyCondition)

   DataSourceJmxConfiguration.Hikari matched:
      - @ConditionalOnClass found required class 'com.zaxxer.hikari.HikariDataSource' (OnClassCondition)
      - @ConditionalOnSingleCandidate (types: javax.sql.DataSource; SearchStrategy: all) found a single bean 'dataSource' (OnBeanCondition)

   DataSourcePoolMetadataProvidersConfiguration.HikariPoolDataSourceMetadataProviderConfiguration matched:
      - @ConditionalOnClass found required class 'com.zaxxer.hikari.HikariDataSource' (OnClassCondition)

   DataSourceTransactionManagerAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'javax.sql.DataSource', 'org.springframework.jdbc.core.JdbcTemplate', 'org.springframework.transaction.TransactionManager' (OnClassCondition)

   DataSourceTransactionManagerAutoConfiguration.JdbcTransactionManagerConfiguration matched:
      - @ConditionalOnSingleCandidate (types: javax.sql.DataSource; SearchStrategy: all) found a single bean 'dataSource' (OnBeanCondition)

   DispatcherServletAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.web.servlet.DispatcherServlet' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)

   DispatcherServletAutoConfiguration.DispatcherServletConfiguration matched:
      - @ConditionalOnClass found required class 'jakarta.servlet.ServletRegistration' (OnClassCondition)
      - Default DispatcherServlet did not find dispatcher servlet beans (DispatcherServletAutoConfiguration.DefaultDispatcherServletCondition)

   DispatcherServletAutoConfiguration.DispatcherServletRegistrationConfiguration matched:
      - @ConditionalOnClass found required class 'jakarta.servlet.ServletRegistration' (OnClassCondition)
      - DispatcherServlet Registration did not find servlet registration bean (DispatcherServletAutoConfiguration.DispatcherServletRegistrationCondition)

   DispatcherServletAutoConfiguration.DispatcherServletRegistrationConfiguration#dispatcherServletRegistration matched:
      - @ConditionalOnBean (names: dispatcherServlet types: org.springframework.web.servlet.DispatcherServlet; SearchStrategy: all) found bean 'dispatcherServlet' (OnBeanCondition)

   EmbeddedWebServerFactoryCustomizerAutoConfiguration matched:
      - @ConditionalOnWebApplication (required) found 'session' scope (OnWebApplicationCondition)
      - @ConditionalOnWarDeployment the application is not deployed as a WAR file. (OnWarDeploymentCondition)

   EmbeddedWebServerFactoryCustomizerAutoConfiguration.TomcatWebServerFactoryCustomizerConfiguration matched:
      - @ConditionalOnClass found required classes 'org.apache.catalina.startup.Tomcat', 'org.apache.coyote.UpgradeProtocol' (OnClassCondition)

   ErrorMvcAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'jakarta.servlet.Servlet', 'org.springframework.web.servlet.DispatcherServlet' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)

   ErrorMvcAutoConfiguration#basicErrorController matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.web.servlet.error.ErrorController; SearchStrategy: current) did not find any beans (OnBeanCondition)

   ErrorMvcAutoConfiguration#errorAttributes matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.web.servlet.error.ErrorAttributes; SearchStrategy: current) did not find any beans (OnBeanCondition)

   ErrorMvcAutoConfiguration.DefaultErrorViewResolverConfiguration#conventionErrorViewResolver matched:
      - @ConditionalOnBean (types: org.springframework.web.servlet.DispatcherServlet; SearchStrategy: all) found bean 'dispatcherServlet'; @ConditionalOnMissingBean (types: org.springframework.boot.autoconfigure.web.servlet.error.ErrorViewResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)

   ErrorMvcAutoConfiguration.WhitelabelErrorViewConfiguration matched:
      - @ConditionalOnProperty (server.error.whitelabel.enabled) matched (OnPropertyCondition)
      - ErrorTemplate Missing did not find error template view (ErrorMvcAutoConfiguration.ErrorTemplateMissingCondition)

   ErrorMvcAutoConfiguration.WhitelabelErrorViewConfiguration#beanNameViewResolver matched:
      - @ConditionalOnMissingBean (types: org.springframework.web.servlet.view.BeanNameViewResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)

   ErrorMvcAutoConfiguration.WhitelabelErrorViewConfiguration#defaultErrorView matched:
      - @ConditionalOnMissingBean (names: error; SearchStrategy: all) did not find any beans (OnBeanCondition)

   GenericCacheConfiguration matched:
      - Cache org.springframework.boot.autoconfigure.cache.GenericCacheConfiguration automatic cache type (CacheCondition)

   HibernateJpaAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean', 'jakarta.persistence.EntityManager', 'org.hibernate.engine.spi.SessionImplementor' (OnClassCondition)

   HibernateJpaConfiguration matched:
      - @ConditionalOnSingleCandidate (types: javax.sql.DataSource; SearchStrategy: all) found a single bean 'dataSource' (OnBeanCondition)

   HttpClientAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.http.client.ClientHttpRequestFactory' (OnClassCondition)
      - NoneNestedConditions 0 matched 1 did not; NestedCondition on NotReactiveWebApplicationCondition.ReactiveWebApplication did not find reactive web application classes (NotReactiveWebApplicationCondition)

   HttpClientAutoConfiguration#clientHttpRequestFactoryBuilder matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.http.client.ClientHttpRequestFactoryBuilder; SearchStrategy: all) did not find any beans (OnBeanCondition)

   HttpClientAutoConfiguration#clientHttpRequestFactorySettings matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.http.client.ClientHttpRequestFactorySettings; SearchStrategy: all) did not find any beans (OnBeanCondition)

   HttpEncodingAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.web.filter.CharacterEncodingFilter' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)
      - @ConditionalOnProperty (server.servlet.encoding.enabled) matched (OnPropertyCondition)

   HttpEncodingAutoConfiguration#characterEncodingFilter matched:
      - @ConditionalOnMissingBean (types: org.springframework.web.filter.CharacterEncodingFilter; SearchStrategy: all) did not find any beans (OnBeanCondition)

   HttpMessageConvertersAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.http.converter.HttpMessageConverter' (OnClassCondition)
      - NoneNestedConditions 0 matched 1 did not; NestedCondition on HttpMessageConvertersAutoConfiguration.NotReactiveWebApplicationCondition.ReactiveWebApplication did not find reactive web application classes (HttpMessageConvertersAutoConfiguration.NotReactiveWebApplicationCondition)

   HttpMessageConvertersAutoConfiguration#messageConverters matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.autoconfigure.http.HttpMessageConverters; SearchStrategy: all) did not find any beans (OnBeanCondition)

   HttpMessageConvertersAutoConfiguration.StringHttpMessageConverterConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.http.converter.StringHttpMessageConverter' (OnClassCondition)

   HttpMessageConvertersAutoConfiguration.StringHttpMessageConverterConfiguration#stringHttpMessageConverter matched:
      - @ConditionalOnMissingBean (types: org.springframework.http.converter.StringHttpMessageConverter; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JacksonAutoConfiguration matched:
      - @ConditionalOnClass found required class 'com.fasterxml.jackson.databind.ObjectMapper' (OnClassCondition)

   JacksonAutoConfiguration.Jackson2ObjectMapperBuilderCustomizerConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.http.converter.json.Jackson2ObjectMapperBuilder' (OnClassCondition)

   JacksonAutoConfiguration.JacksonObjectMapperBuilderConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.http.converter.json.Jackson2ObjectMapperBuilder' (OnClassCondition)

   JacksonAutoConfiguration.JacksonObjectMapperBuilderConfiguration#jacksonObjectMapperBuilder matched:
      - @ConditionalOnMissingBean (types: org.springframework.http.converter.json.Jackson2ObjectMapperBuilder; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JacksonAutoConfiguration.JacksonObjectMapperConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.http.converter.json.Jackson2ObjectMapperBuilder' (OnClassCondition)

   JacksonAutoConfiguration.JacksonObjectMapperConfiguration#jacksonObjectMapper matched:
      - @ConditionalOnMissingBean (types: com.fasterxml.jackson.databind.ObjectMapper; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JacksonAutoConfiguration.ParameterNamesModuleConfiguration matched:
      - @ConditionalOnClass found required class 'com.fasterxml.jackson.module.paramnames.ParameterNamesModule' (OnClassCondition)

   JacksonAutoConfiguration.ParameterNamesModuleConfiguration#parameterNamesModule matched:
      - @ConditionalOnMissingBean (types: com.fasterxml.jackson.module.paramnames.ParameterNamesModule; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JacksonHttpMessageConvertersConfiguration.MappingJackson2HttpMessageConverterConfiguration matched:
      - @ConditionalOnClass found required class 'com.fasterxml.jackson.databind.ObjectMapper' (OnClassCondition)
      - @ConditionalOnProperty (spring.mvc.converters.preferred-json-mapper=jackson) matched (OnPropertyCondition)
      - @ConditionalOnBean (types: com.fasterxml.jackson.databind.ObjectMapper; SearchStrategy: all) found bean 'jacksonObjectMapper' (OnBeanCondition)

   JacksonHttpMessageConvertersConfiguration.MappingJackson2HttpMessageConverterConfiguration#mappingJackson2HttpMessageConverter matched:
      - @ConditionalOnMissingBean (types: org.springframework.http.converter.json.MappingJackson2HttpMessageConverter ignored: org.springframework.hateoas.server.mvc.TypeConstrainedMappingJackson2HttpMessageConverter,org.springframework.data.rest.webmvc.alps.AlpsJsonHttpMessageConverter; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JdbcClientAutoConfiguration matched:
      - @ConditionalOnSingleCandidate (types: org.springframework.jdbc.core.namedparam.NamedParameterJdbcTemplate; SearchStrategy: all) found a single bean 'namedParameterJdbcTemplate'; @ConditionalOnMissingBean (types: org.springframework.jdbc.core.simple.JdbcClient; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JdbcTemplateAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'javax.sql.DataSource', 'org.springframework.jdbc.core.JdbcTemplate' (OnClassCondition)
      - @ConditionalOnSingleCandidate (types: javax.sql.DataSource; SearchStrategy: all) found a single bean 'dataSource' (OnBeanCondition)

   JdbcTemplateConfiguration matched:
      - @ConditionalOnMissingBean (types: org.springframework.jdbc.core.JdbcOperations; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JmxAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.jmx.export.MBeanExporter' (OnClassCondition)
      - @ConditionalOnProperty (spring.jmx.enabled=true) matched (OnPropertyCondition)

   JmxAutoConfiguration#mbeanExporter matched:
      - @ConditionalOnMissingBean (types: org.springframework.jmx.export.MBeanExporter; SearchStrategy: current) did not find any beans (OnBeanCondition)

   JmxAutoConfiguration#mbeanServer matched:
      - @ConditionalOnMissingBean (types: javax.management.MBeanServer; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JmxAutoConfiguration#objectNamingStrategy matched:
      - @ConditionalOnMissingBean (types: org.springframework.jmx.export.naming.ObjectNamingStrategy; SearchStrategy: current) did not find any beans (OnBeanCondition)

   JpaBaseConfiguration#entityManagerFactory matched:
      - @ConditionalOnMissingBean (types: org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean,jakarta.persistence.EntityManagerFactory; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JpaBaseConfiguration#entityManagerFactoryBuilder matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.orm.jpa.EntityManagerFactoryBuilder; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JpaBaseConfiguration#jpaVendorAdapter matched:
      - @ConditionalOnMissingBean (types: org.springframework.orm.jpa.JpaVendorAdapter; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JpaBaseConfiguration#transactionManager matched:
      - @ConditionalOnMissingBean (types: org.springframework.transaction.TransactionManager; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JpaBaseConfiguration.PersistenceManagedTypesConfiguration matched:
      - @ConditionalOnMissingBean (types: org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean,jakarta.persistence.EntityManagerFactory; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JpaBaseConfiguration.PersistenceManagedTypesConfiguration#persistenceManagedTypes matched:
      - @ConditionalOnMissingBean (types: org.springframework.orm.jpa.persistenceunit.PersistenceManagedTypes; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JpaRepositoriesAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.data.jpa.repository.JpaRepository' (OnClassCondition)
      - @ConditionalOnProperty (spring.data.jpa.repositories.enabled=true) matched (OnPropertyCondition)
      - @ConditionalOnBean (types: javax.sql.DataSource; SearchStrategy: all) found bean 'dataSource'; @ConditionalOnMissingBean (types: org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean,org.springframework.data.jpa.repository.config.JpaRepositoryConfigExtension; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JtaAutoConfiguration matched:
      - @ConditionalOnClass found required class 'jakarta.transaction.Transaction' (OnClassCondition)
      - @ConditionalOnProperty (spring.jta.enabled) matched (OnPropertyCondition)

   LifecycleAutoConfiguration#defaultLifecycleProcessor matched:
      - @ConditionalOnMissingBean (names: lifecycleProcessor; SearchStrategy: current) did not find any beans (OnBeanCondition)

   MultipartAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'jakarta.servlet.Servlet', 'org.springframework.web.multipart.support.StandardServletMultipartResolver', 'jakarta.servlet.MultipartConfigElement' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)
      - @ConditionalOnProperty (spring.servlet.multipart.enabled) matched (OnPropertyCondition)

   MultipartAutoConfiguration#multipartConfigElement matched:
      - @ConditionalOnMissingBean (types: jakarta.servlet.MultipartConfigElement; SearchStrategy: all) did not find any beans (OnBeanCondition)

   MultipartAutoConfiguration#multipartResolver matched:
      - @ConditionalOnMissingBean (types: org.springframework.web.multipart.MultipartResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)

   NamedParameterJdbcTemplateConfiguration matched:
      - @ConditionalOnSingleCandidate (types: org.springframework.jdbc.core.JdbcTemplate; SearchStrategy: all) found a single bean 'jdbcTemplate'; @ConditionalOnMissingBean (types: org.springframework.jdbc.core.namedparam.NamedParameterJdbcOperations; SearchStrategy: all) did not find any beans (OnBeanCondition)

   NoOpCacheConfiguration matched:
      - Cache org.springframework.boot.autoconfigure.cache.NoOpCacheConfiguration automatic cache type (CacheCondition)

   PersistenceExceptionTranslationAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.dao.annotation.PersistenceExceptionTranslationPostProcessor' (OnClassCondition)

   PersistenceExceptionTranslationAutoConfiguration#persistenceExceptionTranslationPostProcessor matched:
      - @ConditionalOnProperty (spring.dao.exceptiontranslation.enabled) matched (OnPropertyCondition)
      - @ConditionalOnMissingBean (types: org.springframework.dao.annotation.PersistenceExceptionTranslationPostProcessor; SearchStrategy: all) did not find any beans (OnBeanCondition)

   PropertyPlaceholderAutoConfiguration#propertySourcesPlaceholderConfigurer matched:
      - @ConditionalOnMissingBean (types: org.springframework.context.support.PropertySourcesPlaceholderConfigurer; SearchStrategy: current) did not find any beans (OnBeanCondition)

   RestClientAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.web.client.RestClient' (OnClassCondition)
      - NoneNestedConditions 0 matched 1 did not; NestedCondition on NotReactiveWebApplicationCondition.ReactiveWebApplication did not find reactive web application classes (NotReactiveWebApplicationCondition)

   RestClientAutoConfiguration#httpMessageConvertersRestClientCustomizer matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.autoconfigure.web.client.HttpMessageConvertersRestClientCustomizer; SearchStrategy: all) did not find any beans (OnBeanCondition)

   RestClientAutoConfiguration#restClientBuilder matched:
      - @ConditionalOnMissingBean (types: org.springframework.web.client.RestClient$Builder; SearchStrategy: all) did not find any beans (OnBeanCondition)

   RestClientAutoConfiguration#restClientBuilderConfigurer matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.autoconfigure.web.client.RestClientBuilderConfigurer; SearchStrategy: all) did not find any beans (OnBeanCondition)

   RestClientAutoConfiguration#restClientSsl matched:
      - @ConditionalOnBean (types: org.springframework.boot.ssl.SslBundles; SearchStrategy: all) found bean 'sslBundleRegistry'; @ConditionalOnMissingBean (types: org.springframework.boot.autoconfigure.web.client.RestClientSsl; SearchStrategy: all) did not find any beans (OnBeanCondition)

   RestTemplateAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.web.client.RestTemplate' (OnClassCondition)
      - NoneNestedConditions 0 matched 1 did not; NestedCondition on NotReactiveWebApplicationCondition.ReactiveWebApplication did not find reactive web application classes (NotReactiveWebApplicationCondition)

   RestTemplateAutoConfiguration#restTemplateBuilder matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.web.client.RestTemplateBuilder; SearchStrategy: all) did not find any beans (OnBeanCondition)

   ServletWebServerFactoryAutoConfiguration matched:
      - @ConditionalOnClass found required class 'jakarta.servlet.ServletRequest' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)

   ServletWebServerFactoryAutoConfiguration#tomcatServletWebServerFactoryCustomizer matched:
      - @ConditionalOnClass found required class 'org.apache.catalina.startup.Tomcat' (OnClassCondition)

   ServletWebServerFactoryConfiguration.EmbeddedTomcat matched:
      - @ConditionalOnClass found required classes 'jakarta.servlet.Servlet', 'org.apache.catalina.startup.Tomcat', 'org.apache.coyote.UpgradeProtocol' (OnClassCondition)
      - @ConditionalOnMissingBean (types: org.springframework.boot.web.servlet.server.ServletWebServerFactory; SearchStrategy: current) did not find any beans (OnBeanCondition)

   SimpleCacheConfiguration matched:
      - Cache org.springframework.boot.autoconfigure.cache.SimpleCacheConfiguration automatic cache type (CacheCondition)

   SpringApplicationAdminJmxAutoConfiguration matched:
      - @ConditionalOnProperty (spring.application.admin.enabled=true) matched (OnPropertyCondition)

   SpringApplicationAdminJmxAutoConfiguration#springApplicationAdminRegistrar matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.admin.SpringApplicationAdminMXBeanRegistrar; SearchStrategy: all) did not find any beans (OnBeanCondition)

   SpringDataWebAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'org.springframework.data.web.PageableHandlerMethodArgumentResolver', 'org.springframework.web.servlet.config.annotation.WebMvcConfigurer' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)
      - @ConditionalOnMissingBean (types: org.springframework.data.web.PageableHandlerMethodArgumentResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)

   SpringDataWebAutoConfiguration#pageableCustomizer matched:
      - @ConditionalOnMissingBean (types: org.springframework.data.web.config.PageableHandlerMethodArgumentResolverCustomizer; SearchStrategy: all) did not find any beans (OnBeanCondition)

   SpringDataWebAutoConfiguration#sortCustomizer matched:
      - @ConditionalOnMissingBean (types: org.springframework.data.web.config.SortHandlerMethodArgumentResolverCustomizer; SearchStrategy: all) did not find any beans (OnBeanCondition)

   SpringDataWebAutoConfiguration#springDataWebSettings matched:
      - @ConditionalOnMissingBean (types: org.springframework.data.web.config.SpringDataWebSettings; SearchStrategy: all) did not find any beans (OnBeanCondition)

   SqlInitializationAutoConfiguration matched:
      - @ConditionalOnProperty (spring.sql.init.enabled) matched (OnPropertyCondition)
      - NoneNestedConditions 0 matched 1 did not; NestedCondition on SqlInitializationAutoConfiguration.SqlInitializationModeCondition.ModeIsNever @ConditionalOnProperty (spring.sql.init.mode=never) did not find property 'mode' (SqlInitializationAutoConfiguration.SqlInitializationModeCondition)

   SslAutoConfiguration#sslBundleRegistry matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.ssl.SslBundleRegistry,org.springframework.boot.ssl.SslBundles; SearchStrategy: all) did not find any beans (OnBeanCondition)

   TaskExecutionAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor' (OnClassCondition)

   TaskExecutorConfigurations.SimpleAsyncTaskExecutorBuilderConfiguration#simpleAsyncTaskExecutorBuilder matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.task.SimpleAsyncTaskExecutorBuilder; SearchStrategy: all) did not find any beans (OnBeanCondition)
      - @ConditionalOnThreading found PLATFORM (OnThreadingCondition)

   TaskExecutorConfigurations.TaskExecutorConfiguration matched:
      - @ConditionalOnMissingBean (types: java.util.concurrent.Executor; SearchStrategy: all) did not find any beans (OnBeanCondition)

   TaskExecutorConfigurations.TaskExecutorConfiguration#applicationTaskExecutor matched:
      - @ConditionalOnThreading found PLATFORM (OnThreadingCondition)

   TaskExecutorConfigurations.ThreadPoolTaskExecutorBuilderConfiguration#threadPoolTaskExecutorBuilder matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.task.ThreadPoolTaskExecutorBuilder; SearchStrategy: all) did not find any beans (OnBeanCondition)

   TaskSchedulingAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.scheduling.concurrent.ThreadPoolTaskScheduler' (OnClassCondition)

   TaskSchedulingConfigurations.SimpleAsyncTaskSchedulerBuilderConfiguration#simpleAsyncTaskSchedulerBuilder matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.task.SimpleAsyncTaskSchedulerBuilder; SearchStrategy: all) did not find any beans (OnBeanCondition)
      - @ConditionalOnThreading found PLATFORM (OnThreadingCondition)

   TaskSchedulingConfigurations.ThreadPoolTaskSchedulerBuilderConfiguration#threadPoolTaskSchedulerBuilder matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.task.ThreadPoolTaskSchedulerBuilder; SearchStrategy: all) did not find any beans (OnBeanCondition)

   TransactionAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.transaction.PlatformTransactionManager' (OnClassCondition)

   TransactionAutoConfiguration.EnableTransactionManagementConfiguration matched:
      - @ConditionalOnBean (types: org.springframework.transaction.TransactionManager; SearchStrategy: all) found bean 'transactionManager'; @ConditionalOnMissingBean (types: org.springframework.transaction.annotation.AbstractTransactionManagementConfiguration; SearchStrategy: all) did not find any beans (OnBeanCondition)

   TransactionAutoConfiguration.EnableTransactionManagementConfiguration.CglibAutoProxyConfiguration matched:
      - @ConditionalOnProperty (spring.aop.proxy-target-class=true) matched (OnPropertyCondition)

   TransactionAutoConfiguration.TransactionTemplateConfiguration matched:
      - @ConditionalOnSingleCandidate (types: org.springframework.transaction.PlatformTransactionManager; SearchStrategy: all) found a single bean 'transactionManager' (OnBeanCondition)

   TransactionAutoConfiguration.TransactionTemplateConfiguration#transactionTemplate matched:
      - @ConditionalOnMissingBean (types: org.springframework.transaction.support.TransactionOperations; SearchStrategy: all) did not find any beans (OnBeanCondition)

   TransactionManagerCustomizationAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.transaction.PlatformTransactionManager' (OnClassCondition)

   TransactionManagerCustomizationAutoConfiguration#platformTransactionManagerCustomizers matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.autoconfigure.transaction.TransactionManagerCustomizers; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebMvcAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'jakarta.servlet.Servlet', 'org.springframework.web.servlet.DispatcherServlet', 'org.springframework.web.servlet.config.annotation.WebMvcConfigurer' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)
      - @ConditionalOnMissingBean (types: org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebMvcAutoConfiguration#formContentFilter matched:
      - @ConditionalOnProperty (spring.mvc.formcontent.filter.enabled) matched (OnPropertyCondition)
      - @ConditionalOnMissingBean (types: org.springframework.web.filter.FormContentFilter; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebMvcAutoConfiguration.EnableWebMvcConfiguration#flashMapManager matched:
      - @ConditionalOnMissingBean (names: flashMapManager; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebMvcAutoConfiguration.EnableWebMvcConfiguration#localeResolver matched:
      - @ConditionalOnMissingBean (names: localeResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebMvcAutoConfiguration.EnableWebMvcConfiguration#themeResolver matched:
      - @ConditionalOnMissingBean (names: themeResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebMvcAutoConfiguration.EnableWebMvcConfiguration#viewNameTranslator matched:
      - @ConditionalOnMissingBean (names: viewNameTranslator; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebMvcAutoConfiguration.WebMvcAutoConfigurationAdapter#defaultViewResolver matched:
      - @ConditionalOnMissingBean (types: org.springframework.web.servlet.view.InternalResourceViewResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebMvcAutoConfiguration.WebMvcAutoConfigurationAdapter#requestContextFilter matched:
      - @ConditionalOnMissingBean (types: org.springframework.web.context.request.RequestContextListener,org.springframework.web.filter.RequestContextFilter; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebMvcAutoConfiguration.WebMvcAutoConfigurationAdapter#viewResolver matched:
      - @ConditionalOnBean (types: org.springframework.web.servlet.ViewResolver; SearchStrategy: all) found beans 'defaultViewResolver', 'beanNameViewResolver', 'mvcViewResolver'; @ConditionalOnMissingBean (names: viewResolver types: org.springframework.web.servlet.view.ContentNegotiatingViewResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebSocketServletAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'jakarta.servlet.Servlet', 'jakarta.websocket.server.ServerContainer' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)

   WebSocketServletAutoConfiguration.TomcatWebSocketConfiguration matched:
      - @ConditionalOnClass found required classes 'org.apache.catalina.startup.Tomcat', 'org.apache.tomcat.websocket.server.WsSci' (OnClassCondition)

   WebSocketServletAutoConfiguration.TomcatWebSocketConfiguration#websocketServletWebServerCustomizer matched:
      - @ConditionalOnMissingBean (names: websocketServletWebServerCustomizer; SearchStrategy: all) did not find any beans (OnBeanCondition)


Negative matches:
-----------------

   ActiveMQAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'jakarta.jms.ConnectionFactory' (OnClassCondition)

   AopAutoConfiguration.AspectJAutoProxyingConfiguration.JdkDynamicAutoProxyConfiguration:
      Did not match:
         - @ConditionalOnProperty (spring.aop.proxy-target-class=false) did not find property 'proxy-target-class' (OnPropertyCondition)

   AopAutoConfiguration.ClassProxyingConfiguration:
      Did not match:
         - @ConditionalOnMissingClass found unwanted class 'org.aspectj.weaver.Advice' (OnClassCondition)

   ArtemisAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'jakarta.jms.ConnectionFactory' (OnClassCondition)

   BatchAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.batch.core.launch.JobLauncher' (OnClassCondition)

   Cache2kCacheConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.cache2k.Cache2kBuilder' (OnClassCondition)

   CacheAutoConfiguration:
      Did not match:
         - @ConditionalOnBean (types: org.springframework.cache.interceptor.CacheAspectSupport; SearchStrategy: all) did not find any beans of type org.springframework.cache.interceptor.CacheAspectSupport (OnBeanCondition)
      Matched:
         - @ConditionalOnClass found required class 'org.springframework.cache.CacheManager' (OnClassCondition)

   CacheAutoConfiguration.CacheManagerEntityManagerFactoryDependsOnPostProcessor:
      Did not match:
         - Ancestor org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration did not match (ConditionEvaluationReport.AncestorsMatchedCondition)
      Matched:
         - @ConditionalOnClass found required class 'org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean' (OnClassCondition)

   CaffeineCacheConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.github.benmanes.caffeine.cache.Caffeine' (OnClassCondition)

   CassandraAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.datastax.oss.driver.api.core.CqlSession' (OnClassCondition)

   CassandraDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.datastax.oss.driver.api.core.CqlSession' (OnClassCondition)

   CassandraReactiveDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.datastax.oss.driver.api.core.CqlSession' (OnClassCondition)

   CassandraReactiveRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.cassandra.ReactiveSession' (OnClassCondition)

   CassandraRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.datastax.oss.driver.api.core.CqlSession' (OnClassCondition)

   ClientHttpConnectorAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.reactive.function.client.WebClient' (OnClassCondition)

   CodecsAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.reactive.function.client.WebClient' (OnClassCondition)

   CouchbaseAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.couchbase.client.java.Cluster' (OnClassCondition)

   CouchbaseCacheConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.couchbase.client.java.Cluster' (OnClassCondition)

   CouchbaseDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.couchbase.client.java.Bucket' (OnClassCondition)

   CouchbaseReactiveDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.couchbase.client.java.Cluster' (OnClassCondition)

   CouchbaseReactiveRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.couchbase.client.java.Cluster' (OnClassCondition)

   CouchbaseRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.couchbase.client.java.Bucket' (OnClassCondition)

   DataSourceAutoConfiguration.EmbeddedDatabaseConfiguration:
      Did not match:
         - EmbeddedDataSource spring.datasource.url is set (DataSourceAutoConfiguration.EmbeddedDatabaseCondition)

   DataSourceCheckpointRestoreConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.crac.Resource' (OnClassCondition)

   DataSourceConfiguration.Dbcp2:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.apache.commons.dbcp2.BasicDataSource' (OnClassCondition)

   DataSourceConfiguration.Generic:
      Did not match:
         - @ConditionalOnProperty (spring.datasource.type) did not find property 'spring.datasource.type' (OnPropertyCondition)

   DataSourceConfiguration.OracleUcp:
      Did not match:
         - @ConditionalOnClass did not find required classes 'oracle.ucp.jdbc.PoolDataSourceImpl', 'oracle.jdbc.OracleConnection' (OnClassCondition)

   DataSourceConfiguration.Tomcat:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.apache.tomcat.jdbc.pool.DataSource' (OnClassCondition)

   DataSourceJmxConfiguration.TomcatDataSourceJmxConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.apache.tomcat.jdbc.pool.DataSourceProxy' (OnClassCondition)

   DataSourcePoolMetadataProvidersConfiguration.CommonsDbcp2PoolDataSourceMetadataProviderConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.apache.commons.dbcp2.BasicDataSource' (OnClassCondition)

   DataSourcePoolMetadataProvidersConfiguration.OracleUcpPoolDataSourceMetadataProviderConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required classes 'oracle.ucp.jdbc.PoolDataSource', 'oracle.jdbc.OracleConnection' (OnClassCondition)

   DataSourcePoolMetadataProvidersConfiguration.TomcatDataSourcePoolMetadataProviderConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.apache.tomcat.jdbc.pool.DataSource' (OnClassCondition)

   DataSourceTransactionManagerAutoConfiguration.JdbcTransactionManagerConfiguration#transactionManager:
      Did not match:
         - @ConditionalOnMissingBean (types: org.springframework.transaction.TransactionManager; SearchStrategy: all) found beans of type 'org.springframework.transaction.TransactionManager' transactionManager (OnBeanCondition)

   DispatcherServletAutoConfiguration.DispatcherServletConfiguration#multipartResolver:
      Did not match:
         - @ConditionalOnBean (types: org.springframework.web.multipart.MultipartResolver; SearchStrategy: all) did not find any beans of type org.springframework.web.multipart.MultipartResolver (OnBeanCondition)

   ElasticsearchClientAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'co.elastic.clients.elasticsearch.ElasticsearchClient' (OnClassCondition)

   ElasticsearchDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.elasticsearch.client.elc.ElasticsearchTemplate' (OnClassCondition)

   ElasticsearchRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.elasticsearch.repository.ElasticsearchRepository' (OnClassCondition)

   ElasticsearchRestClientAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.elasticsearch.client.RestClientBuilder' (OnClassCondition)

   EmbeddedLdapAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.unboundid.ldap.listener.InMemoryDirectoryServer' (OnClassCondition)

   EmbeddedWebServerFactoryCustomizerAutoConfiguration.JettyWebServerFactoryCustomizerConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required classes 'org.eclipse.jetty.server.Server', 'org.eclipse.jetty.util.Loader', 'org.eclipse.jetty.ee10.webapp.WebAppContext' (OnClassCondition)

   EmbeddedWebServerFactoryCustomizerAutoConfiguration.NettyWebServerFactoryCustomizerConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'reactor.netty.http.server.HttpServer' (OnClassCondition)

   EmbeddedWebServerFactoryCustomizerAutoConfiguration.TomcatWebServerFactoryCustomizerConfiguration#tomcatVirtualThreadsProtocolHandlerCustomizer:
      Did not match:
         - @ConditionalOnThreading did not find VIRTUAL (OnThreadingCondition)

   EmbeddedWebServerFactoryCustomizerAutoConfiguration.UndertowWebServerFactoryCustomizerConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required classes 'io.undertow.Undertow', 'org.xnio.SslClientAuthMode' (OnClassCondition)

   ErrorWebFluxAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.reactive.config.WebFluxConfigurer' (OnClassCondition)

   FlywayAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.flywaydb.core.Flyway' (OnClassCondition)

   FreeMarkerAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'freemarker.template.Configuration' (OnClassCondition)

   GraphQlAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'graphql.GraphQL' (OnClassCondition)

   GraphQlQueryByExampleAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'graphql.GraphQL' (OnClassCondition)

   GraphQlQuerydslAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.querydsl.core.Query' (OnClassCondition)

   GraphQlRSocketAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'graphql.GraphQL' (OnClassCondition)

   GraphQlReactiveQueryByExampleAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'graphql.GraphQL' (OnClassCondition)

   GraphQlReactiveQuerydslAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.querydsl.core.Query' (OnClassCondition)

   GraphQlWebFluxAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'graphql.GraphQL' (OnClassCondition)

   GraphQlWebFluxSecurityAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'graphql.GraphQL' (OnClassCondition)

   GraphQlWebMvcAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'graphql.GraphQL' (OnClassCondition)

   GraphQlWebMvcSecurityAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'graphql.GraphQL' (OnClassCondition)

   GroovyTemplateAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'groovy.text.markup.MarkupTemplateEngine' (OnClassCondition)

   GsonAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.google.gson.Gson' (OnClassCondition)

   GsonHttpMessageConvertersConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.google.gson.Gson' (OnClassCondition)

   H2ConsoleAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.h2.server.web.JakartaWebServlet' (OnClassCondition)

   HazelcastAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.hazelcast.core.HazelcastInstance' (OnClassCondition)

   HazelcastCacheConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.hazelcast.core.HazelcastInstance' (OnClassCondition)

   HazelcastJpaDependencyAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.hazelcast.core.HazelcastInstance' (OnClassCondition)

   HttpHandlerAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.reactive.DispatcherHandler' (OnClassCondition)

   HypermediaAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.hateoas.EntityModel' (OnClassCondition)

   InfinispanCacheConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.infinispan.spring.embedded.provider.SpringEmbeddedCacheManager' (OnClassCondition)

   IntegrationAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.integration.config.EnableIntegration' (OnClassCondition)

   JCacheCacheConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'javax.cache.Caching' (OnClassCondition)

   JacksonHttpMessageConvertersConfiguration.MappingJackson2XmlHttpMessageConverterConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.fasterxml.jackson.dataformat.xml.XmlMapper' (OnClassCondition)

   JdbcRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.jdbc.repository.config.AbstractJdbcConfiguration' (OnClassCondition)

   JerseyAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.glassfish.jersey.server.spring.SpringComponentProvider' (OnClassCondition)

   JmsAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'jakarta.jms.Message' (OnClassCondition)

   JndiConnectionFactoryAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.jms.core.JmsTemplate' (OnClassCondition)

   JndiDataSourceAutoConfiguration:
      Did not match:
         - @ConditionalOnProperty (spring.datasource.jndi-name) did not find property 'jndi-name' (OnPropertyCondition)
      Matched:
         - @ConditionalOnClass found required classes 'javax.sql.DataSource', 'org.springframework.jdbc.datasource.embedded.EmbeddedDatabaseType' (OnClassCondition)

   JndiJtaConfiguration:
      Did not match:
         - @ConditionalOnJndi JNDI environment is not available (OnJndiCondition)
      Matched:
         - @ConditionalOnClass found required class 'org.springframework.transaction.jta.JtaTransactionManager' (OnClassCondition)

   JooqAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.jooq.DSLContext' (OnClassCondition)

   JpaBaseConfiguration.JpaWebConfiguration:
      Did not match:
         - @ConditionalOnProperty (spring.jpa.open-in-view=true) found different value in property 'open-in-view' (OnPropertyCondition)
      Matched:
         - @ConditionalOnClass found required class 'org.springframework.web.servlet.config.annotation.WebMvcConfigurer' (OnClassCondition)
         - found 'session' scope (OnWebApplicationCondition)

   JpaRepositoriesAutoConfiguration#entityManagerFactoryBootstrapExecutorCustomizer:
      Did not match:
         - AnyNestedCondition 0 matched 2 did not; NestedCondition on JpaRepositoriesAutoConfiguration.BootstrapExecutorCondition.LazyBootstrapMode @ConditionalOnProperty (spring.data.jpa.repositories.bootstrap-mode=lazy) did not find property 'bootstrap-mode'; NestedCondition on JpaRepositoriesAutoConfiguration.BootstrapExecutorCondition.DeferredBootstrapMode @ConditionalOnProperty (spring.data.jpa.repositories.bootstrap-mode=deferred) did not find property 'bootstrap-mode' (JpaRepositoriesAutoConfiguration.BootstrapExecutorCondition)

   JsonbAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'jakarta.json.bind.Jsonb' (OnClassCondition)

   JsonbHttpMessageConvertersConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'jakarta.json.bind.Jsonb' (OnClassCondition)

   KafkaAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.kafka.core.KafkaTemplate' (OnClassCondition)

   LdapAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.ldap.core.ContextSource' (OnClassCondition)

   LdapRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.ldap.repository.LdapRepository' (OnClassCondition)

   LiquibaseAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'liquibase.change.DatabaseChange' (OnClassCondition)

   MailSenderAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'jakarta.mail.internet.MimeMessage' (OnClassCondition)

   MailSenderValidatorAutoConfiguration:
      Did not match:
         - @ConditionalOnSingleCandidate did not find required type 'org.springframework.mail.javamail.JavaMailSenderImpl' (OnBeanCondition)

   MessageSourceAutoConfiguration:
      Did not match:
         - ResourceBundle did not find bundle with basename messages (MessageSourceAutoConfiguration.ResourceBundleCondition)

   MongoAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.mongodb.client.MongoClient' (OnClassCondition)

   MongoDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.mongodb.client.MongoClient' (OnClassCondition)

   MongoReactiveAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.mongodb.reactivestreams.client.MongoClient' (OnClassCondition)

   MongoReactiveDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.mongodb.reactivestreams.client.MongoClient' (OnClassCondition)

   MongoReactiveRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.mongodb.reactivestreams.client.MongoClient' (OnClassCondition)

   MongoRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.mongodb.client.MongoClient' (OnClassCondition)

   MustacheAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.samskivert.mustache.Mustache' (OnClassCondition)

   Neo4jAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.neo4j.driver.Driver' (OnClassCondition)

   Neo4jDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.neo4j.driver.Driver' (OnClassCondition)

   Neo4jReactiveDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.neo4j.driver.Driver' (OnClassCondition)

   Neo4jReactiveRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.neo4j.driver.Driver' (OnClassCondition)

   Neo4jRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.neo4j.driver.Driver' (OnClassCondition)

   NettyAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.netty.util.NettyRuntime' (OnClassCondition)

   OAuth2AuthorizationServerAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.oauth2.server.authorization.OAuth2Authorization' (OnClassCondition)

   OAuth2AuthorizationServerJwtAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.oauth2.server.authorization.OAuth2Authorization' (OnClassCondition)

   OAuth2ClientAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.config.annotation.web.configuration.EnableWebSecurity' (OnClassCondition)

   OAuth2ResourceServerAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.oauth2.server.resource.authentication.BearerTokenAuthenticationToken' (OnClassCondition)

   ProjectInfoAutoConfiguration#buildProperties:
      Did not match:
         - @ConditionalOnResource did not find resource '${spring.info.build.location:classpath:META-INF/build-info.properties}' (OnResourceCondition)

   ProjectInfoAutoConfiguration#gitProperties:
      Did not match:
         - GitResource did not find git info at classpath:git.properties (ProjectInfoAutoConfiguration.GitResourceAvailableCondition)

   PulsarAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.apache.pulsar.client.api.PulsarClient' (OnClassCondition)

   PulsarReactiveAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.apache.pulsar.client.api.PulsarClient' (OnClassCondition)

   QuartzAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.quartz.Scheduler' (OnClassCondition)

   R2dbcAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.r2dbc.spi.ConnectionFactory' (OnClassCondition)

   R2dbcDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.r2dbc.core.R2dbcEntityTemplate' (OnClassCondition)

   R2dbcInitializationConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required classes 'io.r2dbc.spi.ConnectionFactory', 'org.springframework.r2dbc.connection.init.DatabasePopulator' (OnClassCondition)

   R2dbcProxyAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.r2dbc.proxy.ProxyConnectionFactory' (OnClassCondition)

   R2dbcRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.r2dbc.spi.ConnectionFactory' (OnClassCondition)

   R2dbcTransactionManagerAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.r2dbc.connection.R2dbcTransactionManager' (OnClassCondition)

   RSocketGraphQlClientAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'graphql.GraphQL' (OnClassCondition)

   RSocketMessagingAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.rsocket.RSocket' (OnClassCondition)

   RSocketRequesterAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.rsocket.RSocket' (OnClassCondition)

   RSocketSecurityAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.rsocket.core.SecuritySocketAcceptorInterceptor' (OnClassCondition)

   RSocketServerAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.rsocket.core.RSocketServer' (OnClassCondition)

   RSocketStrategiesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.netty.buffer.PooledByteBufAllocator' (OnClassCondition)

   RabbitAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.rabbitmq.client.Channel' (OnClassCondition)

   ReactiveElasticsearchClientAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'co.elastic.clients.transport.ElasticsearchTransport' (OnClassCondition)

   ReactiveElasticsearchRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'reactor.core.publisher.Mono' (OnClassCondition)

   ReactiveMultipartAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.reactive.config.WebFluxConfigurer' (OnClassCondition)

   ReactiveOAuth2ClientAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'reactor.core.publisher.Flux' (OnClassCondition)

   ReactiveOAuth2ResourceServerAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.config.annotation.web.reactive.EnableWebFluxSecurity' (OnClassCondition)

   ReactiveSecurityAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'reactor.core.publisher.Flux' (OnClassCondition)

   ReactiveUserDetailsServiceAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.authentication.ReactiveAuthenticationManager' (OnClassCondition)

   ReactiveWebServerFactoryAutoConfiguration:
      Did not match:
         - @ConditionalOnWebApplication did not find reactive web application classes (OnWebApplicationCondition)

   ReactorAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'reactor.core.publisher.Hooks' (OnClassCondition)

   RedisAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.redis.core.RedisOperations' (OnClassCondition)

   RedisCacheConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.redis.connection.RedisConnectionFactory' (OnClassCondition)

   RedisReactiveAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'reactor.core.publisher.Flux' (OnClassCondition)

   RedisRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.redis.repository.configuration.EnableRedisRepositories' (OnClassCondition)

   RepositoryRestMvcAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.rest.webmvc.config.RepositoryRestMvcConfiguration' (OnClassCondition)

   Saml2RelyingPartyAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.saml2.provider.service.registration.RelyingPartyRegistrationRepository' (OnClassCondition)

   SecurityAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.authentication.DefaultAuthenticationEventPublisher' (OnClassCondition)

   SecurityFilterAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.config.http.SessionCreationPolicy' (OnClassCondition)

   SendGridAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.sendgrid.SendGrid' (OnClassCondition)

   ServletWebServerFactoryAutoConfiguration.ForwardedHeaderFilterConfiguration:
      Did not match:
         - @ConditionalOnProperty (server.forward-headers-strategy=framework) did not find property 'server.forward-headers-strategy' (OnPropertyCondition)

   ServletWebServerFactoryConfiguration.EmbeddedJetty:
      Did not match:
         - @ConditionalOnClass did not find required classes 'org.eclipse.jetty.server.Server', 'org.eclipse.jetty.util.Loader', 'org.eclipse.jetty.ee10.webapp.WebAppContext' (OnClassCondition)

   ServletWebServerFactoryConfiguration.EmbeddedUndertow:
      Did not match:
         - @ConditionalOnClass did not find required classes 'io.undertow.Undertow', 'org.xnio.SslClientAuthMode' (OnClassCondition)

   SessionAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.session.Session' (OnClassCondition)

   TaskExecutorConfigurations.SimpleAsyncTaskExecutorBuilderConfiguration#simpleAsyncTaskExecutorBuilderVirtualThreads:
      Did not match:
         - @ConditionalOnMissingBean (types: org.springframework.boot.task.SimpleAsyncTaskExecutorBuilder; SearchStrategy: all) found beans of type 'org.springframework.boot.task.SimpleAsyncTaskExecutorBuilder' simpleAsyncTaskExecutorBuilder (OnBeanCondition)

   TaskExecutorConfigurations.TaskExecutorConfiguration#applicationTaskExecutorVirtualThreads:
      Did not match:
         - @ConditionalOnThreading did not find VIRTUAL (OnThreadingCondition)

   TaskSchedulingAutoConfiguration#scheduledBeanLazyInitializationExcludeFilter:
      Did not match:
         - @ConditionalOnBean (names: org.springframework.context.annotation.internalScheduledAnnotationProcessor; SearchStrategy: all) did not find any beans named org.springframework.context.annotation.internalScheduledAnnotationProcessor (OnBeanCondition)

   TaskSchedulingConfigurations.SimpleAsyncTaskSchedulerBuilderConfiguration#simpleAsyncTaskSchedulerBuilderVirtualThreads:
      Did not match:
         - @ConditionalOnMissingBean (types: org.springframework.boot.task.SimpleAsyncTaskSchedulerBuilder; SearchStrategy: all) found beans of type 'org.springframework.boot.task.SimpleAsyncTaskSchedulerBuilder' simpleAsyncTaskSchedulerBuilder (OnBeanCondition)

   TaskSchedulingConfigurations.TaskSchedulerConfiguration:
      Did not match:
         - @ConditionalOnBean (names: org.springframework.context.annotation.internalScheduledAnnotationProcessor; SearchStrategy: all) did not find any beans named org.springframework.context.annotation.internalScheduledAnnotationProcessor (OnBeanCondition)

   ThymeleafAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.thymeleaf.spring6.SpringTemplateEngine' (OnClassCondition)

   TransactionAutoConfiguration#transactionalOperator:
      Did not match:
         - @ConditionalOnSingleCandidate (types: org.springframework.transaction.ReactiveTransactionManager; SearchStrategy: all) did not find any beans (OnBeanCondition)

   TransactionAutoConfiguration.AspectJTransactionManagementConfiguration:
      Did not match:
         - @ConditionalOnBean (types: org.springframework.transaction.aspectj.AbstractTransactionAspect; SearchStrategy: all) did not find any beans of type org.springframework.transaction.aspectj.AbstractTransactionAspect (OnBeanCondition)

   TransactionAutoConfiguration.EnableTransactionManagementConfiguration.JdkDynamicAutoProxyConfiguration:
      Did not match:
         - @ConditionalOnProperty (spring.aop.proxy-target-class=false) did not find property 'proxy-target-class' (OnPropertyCondition)

   UserDetailsServiceAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.authentication.AuthenticationManager' (OnClassCondition)

   ValidationAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'jakarta.validation.executable.ExecutableValidator' (OnClassCondition)

   WebClientAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.reactive.function.client.WebClient' (OnClassCondition)

   WebFluxAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.reactive.config.WebFluxConfigurer' (OnClassCondition)

   WebMvcAutoConfiguration#hiddenHttpMethodFilter:
      Did not match:
         - @ConditionalOnProperty (spring.mvc.hiddenmethod.filter.enabled) did not find property 'enabled' (OnPropertyCondition)

   WebMvcAutoConfiguration.ProblemDetailsErrorHandlingConfiguration:
      Did not match:
         - @ConditionalOnProperty (spring.mvc.problemdetails.enabled=true) did not find property 'enabled' (OnPropertyCondition)

   WebMvcAutoConfiguration.ResourceChainCustomizerConfiguration:
      Did not match:
         - @ConditionalOnEnabledResourceChain did not find class org.webjars.WebJarVersionLocator (OnEnabledResourceChainCondition)

   WebMvcAutoConfiguration.WebMvcAutoConfigurationAdapter#beanNameViewResolver:
      Did not match:
         - @ConditionalOnMissingBean (types: org.springframework.web.servlet.view.BeanNameViewResolver; SearchStrategy: all) found beans of type 'org.springframework.web.servlet.view.BeanNameViewResolver' beanNameViewResolver (OnBeanCondition)

   WebServiceTemplateAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.oxm.Marshaller' (OnClassCondition)

   WebServicesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.ws.transport.http.MessageDispatcherServlet' (OnClassCondition)

   WebSessionIdResolverAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'reactor.core.publisher.Mono' (OnClassCondition)

   WebSocketMessagingAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.socket.config.annotation.WebSocketMessageBrokerConfigurer' (OnClassCondition)

   WebSocketReactiveAutoConfiguration:
      Did not match:
         - @ConditionalOnWebApplication did not find reactive web application classes (OnWebApplicationCondition)

   WebSocketServletAutoConfiguration.JettyWebSocketConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.eclipse.jetty.ee10.websocket.jakarta.server.config.JakartaWebSocketServletContainerInitializer' (OnClassCondition)

   WebSocketServletAutoConfiguration.UndertowWebSocketConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.undertow.websockets.jsr.Bootstrap' (OnClassCondition)

   XADataSourceAutoConfiguration:
      Did not match:
         - @ConditionalOnBean (types: org.springframework.boot.jdbc.XADataSourceWrapper; SearchStrategy: all) did not find any beans of type org.springframework.boot.jdbc.XADataSourceWrapper (OnBeanCondition)
      Matched:
         - @ConditionalOnClass found required classes 'javax.sql.DataSource', 'jakarta.transaction.TransactionManager', 'org.springframework.jdbc.datasource.embedded.EmbeddedDatabaseType' (OnClassCondition)


Exclusions:
-----------

    None


Unconditional classes:
----------------------

    org.springframework.boot.autoconfigure.context.ConfigurationPropertiesAutoConfiguration

    org.springframework.boot.autoconfigure.ssl.SslAutoConfiguration

    org.springframework.boot.autoconfigure.context.LifecycleAutoConfiguration

    org.springframework.boot.autoconfigure.context.PropertyPlaceholderAutoConfiguration

    org.springframework.boot.autoconfigure.availability.ApplicationAvailabilityAutoConfiguration

    org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration



16:14:00 INFO  - Started ApiGestionAlmacenApplication in 5.346 seconds (process running for 5.861)
16:14:00 DEBUG - Application availability state LivenessState changed to CORRECT
16:14:00 DEBUG - Application availability state ReadinessState changed to ACCEPTING_TRAFFIC
16:14:03 INFO  - Initializing Servlet 'dispatcherServlet'
16:14:03 DEBUG - Detected StandardServletMultipartResolver
16:14:03 DEBUG - Detected AcceptHeaderLocaleResolver
16:14:03 DEBUG - Detected FixedThemeResolver
16:14:03 DEBUG - Detected org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator@40ed4674
16:14:03 DEBUG - Detected org.springframework.web.servlet.support.SessionFlashMapManager@73a88711
16:14:03 DEBUG - enableLoggingRequestDetails='false': request parameters and headers will be masked to prevent unsafe logging of potentially sensitive data
16:14:03 INFO  - Completed initialization in 2 ms
16:14:03 DEBUG - GET "/api/usuarios", parameters={}
16:14:03 DEBUG - Mapped to com.example.api_gestion_almacen.controladores.UsuarioControlador#obtenerTodosLosUsuarios()
16:14:03 INFO  - Obteniendo lista de todos los usuarios
16:14:03 DEBUG - 
    select
        ue1_0.id,
        ue1_0.contrasena,
        ue1_0.correo_confirmado,
        ue1_0.correo_electronico,
        ue1_0.fecha_creacion,
        ue1_0.foto,
        ue1_0.google,
        ue1_0.movil,
        ue1_0.nombre_completo,
        ue1_0.rol_id 
    from
        usuarios ue1_0
16:14:07 DEBUG - 
    select
        re1_0.id,
        re1_0.nombre 
    from
        roles re1_0 
    where
        re1_0.id=?
16:14:07 DEBUG - 
    select
        re1_0.id,
        re1_0.nombre 
    from
        roles re1_0 
    where
        re1_0.id=?
16:14:07 DEBUG - 
    select
        re1_0.id,
        re1_0.nombre 
    from
        roles re1_0 
    where
        re1_0.id=?
16:14:07 DEBUG - 
    select
        re1_0.id,
        re1_0.nombre 
    from
        roles re1_0 
    where
        re1_0.id=?
16:14:07 INFO  - Total de usuarios encontrados: 31
16:14:07 DEBUG - Using 'application/json', given [application/json] and supported [application/json]
16:14:07 DEBUG - Writing [[com.example.api_gestion_almacen.dtos.UsuarioDto@1ecbad02, com.example.api_gestion_almacen.dtos.Usua (truncated)...]
16:14:08 DEBUG - Completed 200 OK
16:14:08 DEBUG - GET "/api/usuarios", parameters={}
16:14:08 DEBUG - Mapped to com.example.api_gestion_almacen.controladores.UsuarioControlador#obtenerTodosLosUsuarios()
16:14:08 INFO  - Obteniendo lista de todos los usuarios
16:14:08 DEBUG - 
    select
        ue1_0.id,
        ue1_0.contrasena,
        ue1_0.correo_confirmado,
        ue1_0.correo_electronico,
        ue1_0.fecha_creacion,
        ue1_0.foto,
        ue1_0.google,
        ue1_0.movil,
        ue1_0.nombre_completo,
        ue1_0.rol_id 
    from
        usuarios ue1_0
16:14:12 DEBUG - 
    select
        re1_0.id,
        re1_0.nombre 
    from
        roles re1_0 
    where
        re1_0.id=?
16:14:12 DEBUG - 
    select
        re1_0.id,
        re1_0.nombre 
    from
        roles re1_0 
    where
        re1_0.id=?
16:14:13 DEBUG - 
    select
        re1_0.id,
        re1_0.nombre 
    from
        roles re1_0 
    where
        re1_0.id=?
16:14:13 DEBUG - 
    select
        re1_0.id,
        re1_0.nombre 
    from
        roles re1_0 
    where
        re1_0.id=?
16:14:13 INFO  - Total de usuarios encontrados: 31
16:14:13 DEBUG - Using 'application/json', given [application/json] and supported [application/json]
16:14:13 DEBUG - Writing [[com.example.api_gestion_almacen.dtos.UsuarioDto@c2f3d77, com.example.api_gestion_almacen.dtos.Usuar (truncated)...]
16:14:13 DEBUG - Completed 200 OK
16:14:50 DEBUG - POST "/api/usuarios", parameters={}
16:14:50 DEBUG - Mapped to com.example.api_gestion_almacen.controladores.UsuarioControlador#crearUsuario(CrearUsuDto)
16:14:50 DEBUG - Read "application/json;charset=UTF-8" to [CrearUsuDto{nombreCompleto='zdvg<dsg', movil='612345678', correoElectronico='11111111111173@gmail.co (truncated)...]
16:14:50 INFO  - Iniciando creación de usuario: 11111111111173@gmail.com
16:14:50 DEBUG - Datos recibidos: CrearUsuDto{nombreCompleto='zdvg<dsg', movil='612345678', correoElectronico='11111111111173@gmail.com', rolId=2, contrasena='[PROTECTED]', foto=presente}
16:14:50 DEBUG - 
    select
        ue1_0.id,
        ue1_0.contrasena,
        ue1_0.correo_confirmado,
        ue1_0.correo_electronico,
        ue1_0.fecha_creacion,
        ue1_0.foto,
        ue1_0.google,
        ue1_0.movil,
        ue1_0.nombre_completo,
        ue1_0.rol_id 
    from
        usuarios ue1_0 
    where
        ue1_0.correo_electronico=?
16:14:51 DEBUG - 
    select
        re1_0.id,
        re1_0.nombre 
    from
        roles re1_0 
    where
        re1_0.id=?
16:14:51 DEBUG - 
    insert 
    into
        usuarios
        (contrasena, correo_confirmado, correo_electronico, foto, google, movil, nombre_completo, rol_id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?)
16:14:51 INFO  - Usuario creado exitosamente: 11111111111173@gmail.com
16:14:51 DEBUG - Using 'application/json', given [*/*] and supported [application/json]
16:14:51 DEBUG - Writing [CrearUsuDto{nombreCompleto='zdvg<dsg', movil='612345678', correoElectronico='11111111111173@gmail.co (truncated)...]
16:14:51 DEBUG - Completed 201 CREATED
16:14:51 DEBUG - GET "/api/usuarios", parameters={}
16:14:51 DEBUG - Mapped to com.example.api_gestion_almacen.controladores.UsuarioControlador#obtenerTodosLosUsuarios()
16:14:51 INFO  - Obteniendo lista de todos los usuarios
16:14:52 DEBUG - 
    select
        ue1_0.id,
        ue1_0.contrasena,
        ue1_0.correo_confirmado,
        ue1_0.correo_electronico,
        ue1_0.fecha_creacion,
        ue1_0.foto,
        ue1_0.google,
        ue1_0.movil,
        ue1_0.nombre_completo,
        ue1_0.rol_id 
    from
        usuarios ue1_0
16:14:57 DEBUG - 
    select
        re1_0.id,
        re1_0.nombre 
    from
        roles re1_0 
    where
        re1_0.id=?
16:14:58 DEBUG - 
    select
        re1_0.id,
        re1_0.nombre 
    from
        roles re1_0 
    where
        re1_0.id=?
16:14:58 DEBUG - 
    select
        re1_0.id,
        re1_0.nombre 
    from
        roles re1_0 
    where
        re1_0.id=?
16:14:58 DEBUG - 
    select
        re1_0.id,
        re1_0.nombre 
    from
        roles re1_0 
    where
        re1_0.id=?
16:14:58 INFO  - Total de usuarios encontrados: 32
16:14:58 DEBUG - Using 'application/json', given [application/json] and supported [application/json]
16:14:58 DEBUG - Writing [[com.example.api_gestion_almacen.dtos.UsuarioDto@673c730b, com.example.api_gestion_almacen.dtos.Usua (truncated)...]
16:14:58 DEBUG - Completed 200 OK
16:14:59 DEBUG - GET "/api/usuarios", parameters={}
16:14:59 DEBUG - Mapped to com.example.api_gestion_almacen.controladores.UsuarioControlador#obtenerTodosLosUsuarios()
16:14:59 INFO  - Obteniendo lista de todos los usuarios
16:14:59 DEBUG - 
    select
        ue1_0.id,
        ue1_0.contrasena,
        ue1_0.correo_confirmado,
        ue1_0.correo_electronico,
        ue1_0.fecha_creacion,
        ue1_0.foto,
        ue1_0.google,
        ue1_0.movil,
        ue1_0.nombre_completo,
        ue1_0.rol_id 
    from
        usuarios ue1_0
16:15:03 DEBUG - 
    select
        re1_0.id,
        re1_0.nombre 
    from
        roles re1_0 
    where
        re1_0.id=?
16:15:03 DEBUG - 
    select
        re1_0.id,
        re1_0.nombre 
    from
        roles re1_0 
    where
        re1_0.id=?
16:15:03 DEBUG - 
    select
        re1_0.id,
        re1_0.nombre 
    from
        roles re1_0 
    where
        re1_0.id=?
16:15:04 DEBUG - 
    select
        re1_0.id,
        re1_0.nombre 
    from
        roles re1_0 
    where
        re1_0.id=?
16:15:04 INFO  - Total de usuarios encontrados: 32
16:15:04 DEBUG - Using 'application/json', given [application/json] and supported [application/json]
16:15:04 DEBUG - Writing [[com.example.api_gestion_almacen.dtos.UsuarioDto@184f4d33, com.example.api_gestion_almacen.dtos.Usua (truncated)...]
16:15:04 DEBUG - Completed 200 OK
16:15:16 DEBUG - PUT "/api/usuarios/29", parameters={}
16:15:16 DEBUG - Mapped to com.example.api_gestion_almacen.controladores.UsuarioControlador#actualizarUsuario(Long, CrearUsuDto)
16:15:16 DEBUG - Read "application/json;charset=UTF-8" to [CrearUsuDto{nombreCompleto='swqfe', movil='123456789', correoElectronico='1234@gmail.com', rolId=1,  (truncated)...]
16:15:16 INFO  - Iniciando actualización de usuario con ID: 29
16:15:16 DEBUG - Datos de actualización: CrearUsuDto{nombreCompleto='swqfe', movil='123456789', correoElectronico='1234@gmail.com', rolId=1, contrasena='[PROTECTED]', foto=null}
16:15:16 DEBUG - 
    select
        ue1_0.id,
        ue1_0.contrasena,
        ue1_0.correo_confirmado,
        ue1_0.correo_electronico,
        ue1_0.fecha_creacion,
        ue1_0.foto,
        ue1_0.google,
        ue1_0.movil,
        ue1_0.nombre_completo,
        r1_0.id,
        r1_0.nombre 
    from
        usuarios ue1_0 
    left join
        roles r1_0 
            on r1_0.id=ue1_0.rol_id 
    where
        ue1_0.id=?
16:15:17 DEBUG - 
    select
        re1_0.id,
        re1_0.nombre 
    from
        roles re1_0 
    where
        re1_0.id=?
16:15:17 DEBUG - 
    select
        ue1_0.id,
        ue1_0.contrasena,
        ue1_0.correo_confirmado,
        ue1_0.correo_electronico,
        ue1_0.fecha_creacion,
        ue1_0.foto,
        ue1_0.google,
        ue1_0.movil,
        ue1_0.nombre_completo,
        r1_0.id,
        r1_0.nombre 
    from
        usuarios ue1_0 
    left join
        roles r1_0 
            on r1_0.id=ue1_0.rol_id 
    where
        ue1_0.id=?
16:15:17 DEBUG - 
    select
        re1_0.id,
        re1_0.nombre 
    from
        roles re1_0 
    where
        re1_0.id=?
16:15:18 DEBUG - 
    update
        usuarios 
    set
        contrasena=?,
        correo_confirmado=?,
        correo_electronico=?,
        foto=?,
        google=?,
        movil=?,
        nombre_completo=?,
        rol_id=? 
    where
        id=?
16:15:18 INFO  - Usuario actualizado exitosamente. ID: 29
16:15:18 DEBUG - Using 'application/json', given [*/*] and supported [application/json]
16:15:18 DEBUG - Writing [CrearUsuDto{nombreCompleto='swqfe', movil='123456789', correoElectronico='1234@gmail.com', rolId=1,  (truncated)...]
16:15:18 DEBUG - Completed 200 OK
16:15:18 DEBUG - GET "/api/usuarios", parameters={}
16:15:18 DEBUG - Mapped to com.example.api_gestion_almacen.controladores.UsuarioControlador#obtenerTodosLosUsuarios()
16:15:18 INFO  - Obteniendo lista de todos los usuarios
16:15:18 DEBUG - 
    select
        ue1_0.id,
        ue1_0.contrasena,
        ue1_0.correo_confirmado,
        ue1_0.correo_electronico,
        ue1_0.fecha_creacion,
        ue1_0.foto,
        ue1_0.google,
        ue1_0.movil,
        ue1_0.nombre_completo,
        ue1_0.rol_id 
    from
        usuarios ue1_0
16:15:22 DEBUG - 
    select
        re1_0.id,
        re1_0.nombre 
    from
        roles re1_0 
    where
        re1_0.id=?
16:15:22 DEBUG - 
    select
        re1_0.id,
        re1_0.nombre 
    from
        roles re1_0 
    where
        re1_0.id=?
16:15:22 DEBUG - 
    select
        re1_0.id,
        re1_0.nombre 
    from
        roles re1_0 
    where
        re1_0.id=?
16:15:22 DEBUG - 
    select
        re1_0.id,
        re1_0.nombre 
    from
        roles re1_0 
    where
        re1_0.id=?
16:15:23 INFO  - Total de usuarios encontrados: 32
16:15:23 DEBUG - Using 'application/json', given [application/json] and supported [application/json]
16:15:23 DEBUG - Writing [[com.example.api_gestion_almacen.dtos.UsuarioDto@4613e2d6, com.example.api_gestion_almacen.dtos.Usua (truncated)...]
16:15:23 DEBUG - Completed 200 OK
16:15:23 DEBUG - GET "/api/usuarios", parameters={}
16:15:23 DEBUG - Mapped to com.example.api_gestion_almacen.controladores.UsuarioControlador#obtenerTodosLosUsuarios()
16:15:23 INFO  - Obteniendo lista de todos los usuarios
16:15:23 DEBUG - 
    select
        ue1_0.id,
        ue1_0.contrasena,
        ue1_0.correo_confirmado,
        ue1_0.correo_electronico,
        ue1_0.fecha_creacion,
        ue1_0.foto,
        ue1_0.google,
        ue1_0.movil,
        ue1_0.nombre_completo,
        ue1_0.rol_id 
    from
        usuarios ue1_0
16:15:27 DEBUG - 
    select
        re1_0.id,
        re1_0.nombre 
    from
        roles re1_0 
    where
        re1_0.id=?
16:15:27 DEBUG - 
    select
        re1_0.id,
        re1_0.nombre 
    from
        roles re1_0 
    where
        re1_0.id=?
16:15:27 DEBUG - 
    select
        re1_0.id,
        re1_0.nombre 
    from
        roles re1_0 
    where
        re1_0.id=?
16:15:27 DEBUG - 
    select
        re1_0.id,
        re1_0.nombre 
    from
        roles re1_0 
    where
        re1_0.id=?
16:15:28 INFO  - Total de usuarios encontrados: 32
16:15:28 DEBUG - Using 'application/json', given [application/json] and supported [application/json]
16:15:28 DEBUG - Writing [[com.example.api_gestion_almacen.dtos.UsuarioDto@58def721, com.example.api_gestion_almacen.dtos.Usua (truncated)...]
16:15:28 DEBUG - Completed 200 OK
16:20:06 DEBUG - GET "/api/usuarios/correo/palomitasverdes73@gmail.com", parameters={}
16:20:06 DEBUG - Mapped to com.example.api_gestion_almacen.controladores.UsuarioControlador#buscarPorCorreo(String)
16:20:06 INFO  - Buscando usuario por correo: palomitasverdes73@gmail.com
16:20:06 DEBUG - 
    select
        ue1_0.id,
        ue1_0.contrasena,
        ue1_0.correo_confirmado,
        ue1_0.correo_electronico,
        ue1_0.fecha_creacion,
        ue1_0.foto,
        ue1_0.google,
        ue1_0.movil,
        ue1_0.nombre_completo,
        ue1_0.rol_id 
    from
        usuarios ue1_0 
    where
        ue1_0.correo_electronico=?
16:20:06 DEBUG - 
    select
        re1_0.id,
        re1_0.nombre 
    from
        roles re1_0 
    where
        re1_0.id=?
16:20:06 INFO  - Usuario encontrado: palomitasverdes73@gmail.com
16:20:06 DEBUG - Using 'application/json', given [application/json] and supported [application/json]
16:20:06 DEBUG - Writing [com.example.api_gestion_almacen.dtos.UsuarioDto@74a71ce8]
16:20:06 DEBUG - Completed 200 OK
16:20:07 DEBUG - POST "/api/usuarios/autenticar", parameters={}
16:20:07 DEBUG - Mapped to com.example.api_gestion_almacen.controladores.UsuarioControlador#autenticarUsuario(Map)
16:20:07 DEBUG - Read "application/json;charset=UTF-8" to [{contrasena=3cc890a93fa2160c551414745f084c101a9a4be2d32d6b1b1c622d1a217dbbaa, correoElectronico=palo (truncated)...]
16:20:07 INFO  - Intento de autenticación para usuario: palomitasverdes73@gmail.com
16:20:07 DEBUG - 
    select
        ue1_0.id,
        ue1_0.contrasena,
        ue1_0.correo_confirmado,
        ue1_0.correo_electronico,
        ue1_0.fecha_creacion,
        ue1_0.foto,
        ue1_0.google,
        ue1_0.movil,
        ue1_0.nombre_completo,
        ue1_0.rol_id 
    from
        usuarios ue1_0 
    where
        ue1_0.correo_electronico=?
16:20:07 DEBUG - 
    select
        re1_0.id,
        re1_0.nombre 
    from
        roles re1_0 
    where
        re1_0.id=?
16:20:07 INFO  - Autenticación exitosa para: palomitasverdes73@gmail.com
16:20:07 DEBUG - Using 'application/json', given [*/*] and supported [application/json]
16:20:07 DEBUG - Writing [com.example.api_gestion_almacen.dtos.UsuarioDto@3b258873]
16:20:07 DEBUG - Completed 200 OK
16:20:09 DEBUG - GET "/api/usuarios", parameters={}
16:20:09 DEBUG - Mapped to com.example.api_gestion_almacen.controladores.UsuarioControlador#obtenerTodosLosUsuarios()
16:20:09 INFO  - Obteniendo lista de todos los usuarios
16:20:09 DEBUG - 
    select
        ue1_0.id,
        ue1_0.contrasena,
        ue1_0.correo_confirmado,
        ue1_0.correo_electronico,
        ue1_0.fecha_creacion,
        ue1_0.foto,
        ue1_0.google,
        ue1_0.movil,
        ue1_0.nombre_completo,
        ue1_0.rol_id 
    from
        usuarios ue1_0
16:20:13 DEBUG - 
    select
        re1_0.id,
        re1_0.nombre 
    from
        roles re1_0 
    where
        re1_0.id=?
16:20:13 DEBUG - 
    select
        re1_0.id,
        re1_0.nombre 
    from
        roles re1_0 
    where
        re1_0.id=?
16:20:13 DEBUG - 
    select
        re1_0.id,
        re1_0.nombre 
    from
        roles re1_0 
    where
        re1_0.id=?
16:20:13 DEBUG - 
    select
        re1_0.id,
        re1_0.nombre 
    from
        roles re1_0 
    where
        re1_0.id=?
16:20:13 INFO  - Total de usuarios encontrados: 32
16:20:13 DEBUG - Using 'application/json', given [application/json] and supported [application/json]
16:20:13 DEBUG - Writing [[com.example.api_gestion_almacen.dtos.UsuarioDto@3f31e855, com.example.api_gestion_almacen.dtos.Usua (truncated)...]
16:20:13 DEBUG - Completed 200 OK
16:20:14 DEBUG - GET "/api/usuarios", parameters={}
16:20:14 DEBUG - Mapped to com.example.api_gestion_almacen.controladores.UsuarioControlador#obtenerTodosLosUsuarios()
16:20:14 INFO  - Obteniendo lista de todos los usuarios
16:20:14 DEBUG - 
    select
        ue1_0.id,
        ue1_0.contrasena,
        ue1_0.correo_confirmado,
        ue1_0.correo_electronico,
        ue1_0.fecha_creacion,
        ue1_0.foto,
        ue1_0.google,
        ue1_0.movil,
        ue1_0.nombre_completo,
        ue1_0.rol_id 
    from
        usuarios ue1_0
16:20:17 DEBUG - 
    select
        re1_0.id,
        re1_0.nombre 
    from
        roles re1_0 
    where
        re1_0.id=?
16:20:17 DEBUG - 
    select
        re1_0.id,
        re1_0.nombre 
    from
        roles re1_0 
    where
        re1_0.id=?
16:20:18 DEBUG - 
    select
        re1_0.id,
        re1_0.nombre 
    from
        roles re1_0 
    where
        re1_0.id=?
16:20:18 DEBUG - 
    select
        re1_0.id,
        re1_0.nombre 
    from
        roles re1_0 
    where
        re1_0.id=?
16:20:18 INFO  - Total de usuarios encontrados: 32
16:20:18 DEBUG - Using 'application/json', given [application/json] and supported [application/json]
16:20:18 DEBUG - Writing [[com.example.api_gestion_almacen.dtos.UsuarioDto@14a87fe4, com.example.api_gestion_almacen.dtos.Usua (truncated)...]
16:20:18 DEBUG - Completed 200 OK
16:20:24 DEBUG - DELETE "/api/usuarios/33", parameters={}
16:20:24 DEBUG - Mapped to com.example.api_gestion_almacen.controladores.UsuarioControlador#eliminarUsuario(Long)
16:20:24 INFO  - Iniciando eliminación de usuario con ID: 33
16:20:24 DEBUG - 
    select
        ue1_0.id,
        ue1_0.contrasena,
        ue1_0.correo_confirmado,
        ue1_0.correo_electronico,
        ue1_0.fecha_creacion,
        ue1_0.foto,
        ue1_0.google,
        ue1_0.movil,
        ue1_0.nombre_completo,
        r1_0.id,
        r1_0.nombre 
    from
        usuarios ue1_0 
    left join
        roles r1_0 
            on r1_0.id=ue1_0.rol_id 
    where
        ue1_0.id=?
16:20:24 DEBUG - 
    delete 
    from
        usuarios 
    where
        id=?
16:20:24 INFO  - Usuario eliminado exitosamente. ID: 33
16:20:24 DEBUG - Using 'application/json', given [application/json] and supported [*/*]
16:20:24 DEBUG - Completed 200 OK
16:20:24 DEBUG - GET "/api/usuarios", parameters={}
16:20:24 DEBUG - Mapped to com.example.api_gestion_almacen.controladores.UsuarioControlador#obtenerTodosLosUsuarios()
16:20:24 INFO  - Obteniendo lista de todos los usuarios
16:20:24 DEBUG - 
    select
        ue1_0.id,
        ue1_0.contrasena,
        ue1_0.correo_confirmado,
        ue1_0.correo_electronico,
        ue1_0.fecha_creacion,
        ue1_0.foto,
        ue1_0.google,
        ue1_0.movil,
        ue1_0.nombre_completo,
        ue1_0.rol_id 
    from
        usuarios ue1_0
16:20:28 DEBUG - 
    select
        re1_0.id,
        re1_0.nombre 
    from
        roles re1_0 
    where
        re1_0.id=?
16:20:28 DEBUG - 
    select
        re1_0.id,
        re1_0.nombre 
    from
        roles re1_0 
    where
        re1_0.id=?
16:20:28 DEBUG - 
    select
        re1_0.id,
        re1_0.nombre 
    from
        roles re1_0 
    where
        re1_0.id=?
16:20:28 DEBUG - 
    select
        re1_0.id,
        re1_0.nombre 
    from
        roles re1_0 
    where
        re1_0.id=?
16:20:29 INFO  - Total de usuarios encontrados: 31
16:20:29 DEBUG - Using 'application/json', given [application/json] and supported [application/json]
16:20:29 DEBUG - Writing [[com.example.api_gestion_almacen.dtos.UsuarioDto@38d57d70, com.example.api_gestion_almacen.dtos.Usua (truncated)...]
16:20:29 DEBUG - Completed 200 OK
16:20:29 DEBUG - GET "/api/usuarios", parameters={}
16:20:29 DEBUG - Mapped to com.example.api_gestion_almacen.controladores.UsuarioControlador#obtenerTodosLosUsuarios()
16:20:29 INFO  - Obteniendo lista de todos los usuarios
16:20:29 DEBUG - 
    select
        ue1_0.id,
        ue1_0.contrasena,
        ue1_0.correo_confirmado,
        ue1_0.correo_electronico,
        ue1_0.fecha_creacion,
        ue1_0.foto,
        ue1_0.google,
        ue1_0.movil,
        ue1_0.nombre_completo,
        ue1_0.rol_id 
    from
        usuarios ue1_0
16:20:33 DEBUG - 
    select
        re1_0.id,
        re1_0.nombre 
    from
        roles re1_0 
    where
        re1_0.id=?
16:20:33 DEBUG - 
    select
        re1_0.id,
        re1_0.nombre 
    from
        roles re1_0 
    where
        re1_0.id=?
16:20:33 DEBUG - 
    select
        re1_0.id,
        re1_0.nombre 
    from
        roles re1_0 
    where
        re1_0.id=?
16:20:33 DEBUG - 
    select
        re1_0.id,
        re1_0.nombre 
    from
        roles re1_0 
    where
        re1_0.id=?
16:20:34 INFO  - Total de usuarios encontrados: 31
16:20:34 DEBUG - Using 'application/json', given [application/json] and supported [application/json]
16:20:34 DEBUG - Writing [[com.example.api_gestion_almacen.dtos.UsuarioDto@19d2fc73, com.example.api_gestion_almacen.dtos.Usua (truncated)...]
16:20:34 DEBUG - Completed 200 OK
16:20:55 DEBUG - GET "/api/usuarios/correo/palomitasverdes73@gmail.com", parameters={}
16:20:55 DEBUG - Mapped to com.example.api_gestion_almacen.controladores.UsuarioControlador#buscarPorCorreo(String)
16:20:55 INFO  - Buscando usuario por correo: palomitasverdes73@gmail.com
16:20:55 DEBUG - 
    select
        ue1_0.id,
        ue1_0.contrasena,
        ue1_0.correo_confirmado,
        ue1_0.correo_electronico,
        ue1_0.fecha_creacion,
        ue1_0.foto,
        ue1_0.google,
        ue1_0.movil,
        ue1_0.nombre_completo,
        ue1_0.rol_id 
    from
        usuarios ue1_0 
    where
        ue1_0.correo_electronico=?
16:20:55 DEBUG - 
    select
        re1_0.id,
        re1_0.nombre 
    from
        roles re1_0 
    where
        re1_0.id=?
16:20:55 INFO  - Usuario encontrado: palomitasverdes73@gmail.com
16:20:55 DEBUG - Using 'application/json', given [application/json] and supported [application/json]
16:20:55 DEBUG - Writing [com.example.api_gestion_almacen.dtos.UsuarioDto@2d8dd054]
16:20:55 DEBUG - Completed 200 OK
16:20:55 DEBUG - POST "/api/usuarios/autenticar", parameters={}
16:20:55 DEBUG - Mapped to com.example.api_gestion_almacen.controladores.UsuarioControlador#autenticarUsuario(Map)
16:20:55 DEBUG - Read "application/json;charset=UTF-8" to [{contrasena=a5530596dc6adf770738de4db46747570f43777840e055a51fd34a2dca43dd40, correoElectronico=palo (truncated)...]
16:20:55 INFO  - Intento de autenticación para usuario: palomitasverdes73@gmail.com
16:20:55 DEBUG - 
    select
        ue1_0.id,
        ue1_0.contrasena,
        ue1_0.correo_confirmado,
        ue1_0.correo_electronico,
        ue1_0.fecha_creacion,
        ue1_0.foto,
        ue1_0.google,
        ue1_0.movil,
        ue1_0.nombre_completo,
        ue1_0.rol_id 
    from
        usuarios ue1_0 
    where
        ue1_0.correo_electronico=?
16:20:55 DEBUG - 
    select
        re1_0.id,
        re1_0.nombre 
    from
        roles re1_0 
    where
        re1_0.id=?
16:20:56 ERROR - Error de autenticación: Contraseña incorrecta
16:20:56 DEBUG - Using 'application/json', given [*/*] and supported [application/json]
16:20:56 DEBUG - Writing [{error=Contraseña incorrecta}]
16:20:56 DEBUG - Completed 401 UNAUTHORIZED
16:21:21 DEBUG - GET "/api/usuarios/correo/sdafsaff@gmail.com", parameters={}
16:21:21 DEBUG - Mapped to com.example.api_gestion_almacen.controladores.UsuarioControlador#buscarPorCorreo(String)
16:21:21 INFO  - Buscando usuario por correo: sdafsaff@gmail.com
16:21:21 DEBUG - 
    select
        ue1_0.id,
        ue1_0.contrasena,
        ue1_0.correo_confirmado,
        ue1_0.correo_electronico,
        ue1_0.fecha_creacion,
        ue1_0.foto,
        ue1_0.google,
        ue1_0.movil,
        ue1_0.nombre_completo,
        ue1_0.rol_id 
    from
        usuarios ue1_0 
    where
        ue1_0.correo_electronico=?
16:21:21 INFO  - Usuario no encontrado para correo: sdafsaff@gmail.com
16:21:21 DEBUG - Using 'application/json', given [application/json] and supported [application/json]
16:21:21 DEBUG - Writing [{error=Usuario no encontrado}]
16:21:21 DEBUG - Completed 404 NOT_FOUND
16:22:59 DEBUG - GET "/api/usuarios/correo/andresxiaomd12@gmail.com", parameters={}
16:22:59 DEBUG - Mapped to com.example.api_gestion_almacen.controladores.UsuarioControlador#buscarPorCorreo(String)
16:22:59 INFO  - Buscando usuario por correo: andresxiaomd12@gmail.com
16:22:59 DEBUG - 
    select
        ue1_0.id,
        ue1_0.contrasena,
        ue1_0.correo_confirmado,
        ue1_0.correo_electronico,
        ue1_0.fecha_creacion,
        ue1_0.foto,
        ue1_0.google,
        ue1_0.movil,
        ue1_0.nombre_completo,
        ue1_0.rol_id 
    from
        usuarios ue1_0 
    where
        ue1_0.correo_electronico=?
16:22:59 INFO  - Usuario no encontrado para correo: andresxiaomd12@gmail.com
16:22:59 DEBUG - Using 'application/json', given [application/json] and supported [application/json]
16:22:59 DEBUG - Writing [{error=Usuario no encontrado}]
16:22:59 DEBUG - Completed 404 NOT_FOUND
16:25:42 DEBUG - GET "/api/usuarios/correo/gfdsgfg@hsf.com", parameters={}
16:25:42 DEBUG - Mapped to com.example.api_gestion_almacen.controladores.UsuarioControlador#buscarPorCorreo(String)
16:25:42 INFO  - Buscando usuario por correo: gfdsgfg@hsf.com
16:25:42 DEBUG - 
    select
        ue1_0.id,
        ue1_0.contrasena,
        ue1_0.correo_confirmado,
        ue1_0.correo_electronico,
        ue1_0.fecha_creacion,
        ue1_0.foto,
        ue1_0.google,
        ue1_0.movil,
        ue1_0.nombre_completo,
        ue1_0.rol_id 
    from
        usuarios ue1_0 
    where
        ue1_0.correo_electronico=?
16:25:42 INFO  - Usuario no encontrado para correo: gfdsgfg@hsf.com
16:25:42 DEBUG - Using 'application/json', given [application/json] and supported [application/json]
16:25:42 DEBUG - Writing [{error=Usuario no encontrado}]
16:25:42 DEBUG - Completed 404 NOT_FOUND
16:31:47 DEBUG - GET "/api/usuarios/correo/javiy45124@oziere.com", parameters={}
16:31:47 DEBUG - Mapped to com.example.api_gestion_almacen.controladores.UsuarioControlador#buscarPorCorreo(String)
16:31:47 INFO  - Buscando usuario por correo: javiy45124@oziere.com
16:31:47 DEBUG - 
    select
        ue1_0.id,
        ue1_0.contrasena,
        ue1_0.correo_confirmado,
        ue1_0.correo_electronico,
        ue1_0.fecha_creacion,
        ue1_0.foto,
        ue1_0.google,
        ue1_0.movil,
        ue1_0.nombre_completo,
        ue1_0.rol_id 
    from
        usuarios ue1_0 
    where
        ue1_0.correo_electronico=?
16:31:47 INFO  - Usuario no encontrado para correo: javiy45124@oziere.com
16:31:47 DEBUG - Using 'application/json', given [application/json] and supported [application/json]
16:31:47 DEBUG - Writing [{error=Usuario no encontrado}]
16:31:47 DEBUG - Completed 404 NOT_FOUND
16:40:06 DEBUG - GET "/api/usuarios/correo/javiy45124@oziere.com", parameters={}
16:40:06 DEBUG - Mapped to com.example.api_gestion_almacen.controladores.UsuarioControlador#buscarPorCorreo(String)
16:40:06 INFO  - Buscando usuario por correo: javiy45124@oziere.com
16:40:06 DEBUG - 
    select
        ue1_0.id,
        ue1_0.contrasena,
        ue1_0.correo_confirmado,
        ue1_0.correo_electronico,
        ue1_0.fecha_creacion,
        ue1_0.foto,
        ue1_0.google,
        ue1_0.movil,
        ue1_0.nombre_completo,
        ue1_0.rol_id 
    from
        usuarios ue1_0 
    where
        ue1_0.correo_electronico=?
16:40:06 INFO  - Usuario no encontrado para correo: javiy45124@oziere.com
16:40:06 DEBUG - Using 'application/json', given [application/json] and supported [application/json]
16:40:06 DEBUG - Writing [{error=Usuario no encontrado}]
16:40:06 DEBUG - Completed 404 NOT_FOUND
16:42:34 DEBUG - GET "/api/usuarios/correo/javiy45124@oziere.com", parameters={}
16:42:34 DEBUG - Mapped to com.example.api_gestion_almacen.controladores.UsuarioControlador#buscarPorCorreo(String)
16:42:34 INFO  - Buscando usuario por correo: javiy45124@oziere.com
16:42:34 DEBUG - 
    select
        ue1_0.id,
        ue1_0.contrasena,
        ue1_0.correo_confirmado,
        ue1_0.correo_electronico,
        ue1_0.fecha_creacion,
        ue1_0.foto,
        ue1_0.google,
        ue1_0.movil,
        ue1_0.nombre_completo,
        ue1_0.rol_id 
    from
        usuarios ue1_0 
    where
        ue1_0.correo_electronico=?
16:42:35 INFO  - Usuario no encontrado para correo: javiy45124@oziere.com
16:42:35 DEBUG - Using 'application/json', given [application/json] and supported [application/json]
16:42:35 DEBUG - Writing [{error=Usuario no encontrado}]
16:42:35 DEBUG - Completed 404 NOT_FOUND
16:45:31 DEBUG - GET "/api/usuarios/correo/javiy45124@oziere.com", parameters={}
16:45:31 DEBUG - Mapped to com.example.api_gestion_almacen.controladores.UsuarioControlador#buscarPorCorreo(String)
16:45:31 INFO  - Buscando usuario por correo: javiy45124@oziere.com
16:45:31 DEBUG - 
    select
        ue1_0.id,
        ue1_0.contrasena,
        ue1_0.correo_confirmado,
        ue1_0.correo_electronico,
        ue1_0.fecha_creacion,
        ue1_0.foto,
        ue1_0.google,
        ue1_0.movil,
        ue1_0.nombre_completo,
        ue1_0.rol_id 
    from
        usuarios ue1_0 
    where
        ue1_0.correo_electronico=?
16:45:32 INFO  - Usuario no encontrado para correo: javiy45124@oziere.com
16:45:32 DEBUG - Using 'application/json', given [application/json] and supported [application/json]
16:45:32 DEBUG - Writing [{error=Usuario no encontrado}]
16:45:32 DEBUG - Completed 404 NOT_FOUND
16:45:32 DEBUG - POST "/api/usuarios", parameters={}
16:45:32 DEBUG - Mapped to com.example.api_gestion_almacen.controladores.UsuarioControlador#crearUsuario(CrearUsuDto)
16:45:32 DEBUG - Read "application/json;charset=UTF-8" to [CrearUsuDto{nombreCompleto='trhjstrj', movil='612345678', correoElectronico='javiy45124@oziere.com', (truncated)...]
16:45:32 INFO  - Iniciando creación de usuario: javiy45124@oziere.com
16:45:32 DEBUG - Datos recibidos: CrearUsuDto{nombreCompleto='trhjstrj', movil='612345678', correoElectronico='javiy45124@oziere.com', rolId=4, contrasena='[PROTECTED]', foto=null}
16:45:32 DEBUG - 
    select
        ue1_0.id,
        ue1_0.contrasena,
        ue1_0.correo_confirmado,
        ue1_0.correo_electronico,
        ue1_0.fecha_creacion,
        ue1_0.foto,
        ue1_0.google,
        ue1_0.movil,
        ue1_0.nombre_completo,
        ue1_0.rol_id 
    from
        usuarios ue1_0 
    where
        ue1_0.correo_electronico=?
16:45:32 DEBUG - 
    select
        re1_0.id,
        re1_0.nombre 
    from
        roles re1_0 
    where
        re1_0.id=?
16:45:32 DEBUG - 
    insert 
    into
        usuarios
        (contrasena, correo_confirmado, correo_electronico, foto, google, movil, nombre_completo, rol_id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?)
16:45:32 INFO  - Usuario creado exitosamente: javiy45124@oziere.com
16:45:32 DEBUG - Using 'application/json', given [*/*] and supported [application/json]
16:45:32 DEBUG - Writing [CrearUsuDto{nombreCompleto='trhjstrj', movil='612345678', correoElectronico='javiy45124@oziere.com', (truncated)...]
16:45:32 DEBUG - Completed 201 CREATED
17:12:45 DEBUG - GET "/api/usuarios/correo/lawawof280@payposs.com", parameters={}
17:12:45 DEBUG - Mapped to com.example.api_gestion_almacen.controladores.UsuarioControlador#buscarPorCorreo(String)
17:12:45 INFO  - Buscando usuario por correo: lawawof280@payposs.com
17:12:45 DEBUG - 
    select
        ue1_0.id,
        ue1_0.contrasena,
        ue1_0.correo_confirmado,
        ue1_0.correo_electronico,
        ue1_0.fecha_creacion,
        ue1_0.foto,
        ue1_0.google,
        ue1_0.movil,
        ue1_0.nombre_completo,
        ue1_0.rol_id 
    from
        usuarios ue1_0 
    where
        ue1_0.correo_electronico=?
17:12:45 INFO  - Usuario no encontrado para correo: lawawof280@payposs.com
17:12:45 DEBUG - Using 'application/json', given [application/json] and supported [application/json]
17:12:45 DEBUG - Writing [{error=Usuario no encontrado}]
17:12:45 DEBUG - Completed 404 NOT_FOUND
17:12:45 DEBUG - POST "/api/usuarios", parameters={}
17:12:45 DEBUG - Mapped to com.example.api_gestion_almacen.controladores.UsuarioControlador#crearUsuario(CrearUsuDto)
17:12:45 DEBUG - Read "application/json;charset=UTF-8" to [CrearUsuDto{nombreCompleto='xfgbhf', movil='133444555', correoElectronico='lawawof280@payposs.com',  (truncated)...]
17:12:45 INFO  - Iniciando creación de usuario: lawawof280@payposs.com
17:12:45 DEBUG - Datos recibidos: CrearUsuDto{nombreCompleto='xfgbhf', movil='133444555', correoElectronico='lawawof280@payposs.com', rolId=4, contrasena='[PROTECTED]', foto=null}
17:12:45 DEBUG - 
    select
        ue1_0.id,
        ue1_0.contrasena,
        ue1_0.correo_confirmado,
        ue1_0.correo_electronico,
        ue1_0.fecha_creacion,
        ue1_0.foto,
        ue1_0.google,
        ue1_0.movil,
        ue1_0.nombre_completo,
        ue1_0.rol_id 
    from
        usuarios ue1_0 
    where
        ue1_0.correo_electronico=?
17:12:45 DEBUG - 
    select
        re1_0.id,
        re1_0.nombre 
    from
        roles re1_0 
    where
        re1_0.id=?
17:12:46 DEBUG - 
    insert 
    into
        usuarios
        (contrasena, correo_confirmado, correo_electronico, foto, google, movil, nombre_completo, rol_id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?)
17:12:46 INFO  - Usuario creado exitosamente: lawawof280@payposs.com
17:12:46 DEBUG - Using 'application/json', given [*/*] and supported [application/json]
17:12:46 DEBUG - Writing [CrearUsuDto{nombreCompleto='xfgbhf', movil='133444555', correoElectronico='lawawof280@payposs.com',  (truncated)...]
17:12:46 DEBUG - Completed 201 CREATED
17:20:53 DEBUG - GET "/api/usuarios/correo/yipipi5741@payposs.com", parameters={}
17:20:53 DEBUG - Mapped to com.example.api_gestion_almacen.controladores.UsuarioControlador#buscarPorCorreo(String)
17:20:53 INFO  - Buscando usuario por correo: yipipi5741@payposs.com
17:20:53 DEBUG - 
    select
        ue1_0.id,
        ue1_0.contrasena,
        ue1_0.correo_confirmado,
        ue1_0.correo_electronico,
        ue1_0.fecha_creacion,
        ue1_0.foto,
        ue1_0.google,
        ue1_0.movil,
        ue1_0.nombre_completo,
        ue1_0.rol_id 
    from
        usuarios ue1_0 
    where
        ue1_0.correo_electronico=?
17:20:53 INFO  - Usuario no encontrado para correo: yipipi5741@payposs.com
17:20:53 DEBUG - Using 'application/json', given [application/json] and supported [application/json]
17:20:53 DEBUG - Writing [{error=Usuario no encontrado}]
17:20:53 DEBUG - Completed 404 NOT_FOUND
17:20:53 DEBUG - POST "/api/usuarios", parameters={}
17:20:53 DEBUG - Mapped to com.example.api_gestion_almacen.controladores.UsuarioControlador#crearUsuario(CrearUsuDto)
17:20:53 DEBUG - Read "application/json;charset=UTF-8" to [CrearUsuDto{nombreCompleto='sdfsdf', movil='123456789', correoElectronico='yipipi5741@payposs.com',  (truncated)...]
17:20:53 INFO  - Iniciando creación de usuario: yipipi5741@payposs.com
17:20:53 DEBUG - Datos recibidos: CrearUsuDto{nombreCompleto='sdfsdf', movil='123456789', correoElectronico='yipipi5741@payposs.com', rolId=4, contrasena='[PROTECTED]', foto=null}
17:20:53 DEBUG - 
    select
        ue1_0.id,
        ue1_0.contrasena,
        ue1_0.correo_confirmado,
        ue1_0.correo_electronico,
        ue1_0.fecha_creacion,
        ue1_0.foto,
        ue1_0.google,
        ue1_0.movil,
        ue1_0.nombre_completo,
        ue1_0.rol_id 
    from
        usuarios ue1_0 
    where
        ue1_0.correo_electronico=?
17:20:53 DEBUG - 
    select
        re1_0.id,
        re1_0.nombre 
    from
        roles re1_0 
    where
        re1_0.id=?
17:20:54 DEBUG - 
    insert 
    into
        usuarios
        (contrasena, correo_confirmado, correo_electronico, foto, google, movil, nombre_completo, rol_id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?)
17:20:54 INFO  - Usuario creado exitosamente: yipipi5741@payposs.com
17:20:54 DEBUG - Using 'application/json', given [*/*] and supported [application/json]
17:20:54 DEBUG - Writing [CrearUsuDto{nombreCompleto='sdfsdf', movil='123456789', correoElectronico='yipipi5741@payposs.com',  (truncated)...]
17:20:54 DEBUG - Completed 201 CREATED
17:38:00 DEBUG - GET "/api/usuarios/correo/bafago2423@oziere.com", parameters={}
17:38:00 DEBUG - Mapped to com.example.api_gestion_almacen.controladores.UsuarioControlador#buscarPorCorreo(String)
17:38:00 INFO  - Buscando usuario por correo: bafago2423@oziere.com
17:38:00 DEBUG - 
    select
        ue1_0.id,
        ue1_0.contrasena,
        ue1_0.correo_confirmado,
        ue1_0.correo_electronico,
        ue1_0.fecha_creacion,
        ue1_0.foto,
        ue1_0.google,
        ue1_0.movil,
        ue1_0.nombre_completo,
        ue1_0.rol_id 
    from
        usuarios ue1_0 
    where
        ue1_0.correo_electronico=?
17:38:00 INFO  - Usuario no encontrado para correo: bafago2423@oziere.com
17:38:00 DEBUG - Using 'application/json', given [application/json] and supported [application/json]
17:38:00 DEBUG - Writing [{error=Usuario no encontrado}]
17:38:00 DEBUG - Completed 404 NOT_FOUND
17:38:00 DEBUG - POST "/api/usuarios", parameters={}
17:38:00 DEBUG - Mapped to com.example.api_gestion_almacen.controladores.UsuarioControlador#crearUsuario(CrearUsuDto)
17:38:00 DEBUG - Read "application/json;charset=UTF-8" to [CrearUsuDto{nombreCompleto='sdgdg', movil='123456789', correoElectronico='bafago2423@oziere.com', ro (truncated)...]
17:38:00 INFO  - Iniciando creación de usuario: bafago2423@oziere.com
17:38:00 DEBUG - Datos recibidos: CrearUsuDto{nombreCompleto='sdgdg', movil='123456789', correoElectronico='bafago2423@oziere.com', rolId=4, contrasena='[PROTECTED]', foto=null}
17:38:00 DEBUG - 
    select
        ue1_0.id,
        ue1_0.contrasena,
        ue1_0.correo_confirmado,
        ue1_0.correo_electronico,
        ue1_0.fecha_creacion,
        ue1_0.foto,
        ue1_0.google,
        ue1_0.movil,
        ue1_0.nombre_completo,
        ue1_0.rol_id 
    from
        usuarios ue1_0 
    where
        ue1_0.correo_electronico=?
17:38:01 DEBUG - 
    select
        re1_0.id,
        re1_0.nombre 
    from
        roles re1_0 
    where
        re1_0.id=?
17:38:01 DEBUG - 
    insert 
    into
        usuarios
        (contrasena, correo_confirmado, correo_electronico, foto, google, movil, nombre_completo, rol_id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?)
17:38:01 INFO  - Usuario creado exitosamente: bafago2423@oziere.com
17:38:01 DEBUG - Using 'application/json', given [*/*] and supported [application/json]
17:38:01 DEBUG - Writing [CrearUsuDto{nombreCompleto='sdgdg', movil='123456789', correoElectronico='bafago2423@oziere.com', ro (truncated)...]
17:38:01 DEBUG - Completed 201 CREATED
17:44:10 DEBUG - GET "/api/usuarios/correo/bafago2423@oziere.com", parameters={}
17:44:10 DEBUG - Mapped to com.example.api_gestion_almacen.controladores.UsuarioControlador#buscarPorCorreo(String)
17:44:10 INFO  - Buscando usuario por correo: bafago2423@oziere.com
17:44:10 DEBUG - 
    select
        ue1_0.id,
        ue1_0.contrasena,
        ue1_0.correo_confirmado,
        ue1_0.correo_electronico,
        ue1_0.fecha_creacion,
        ue1_0.foto,
        ue1_0.google,
        ue1_0.movil,
        ue1_0.nombre_completo,
        ue1_0.rol_id 
    from
        usuarios ue1_0 
    where
        ue1_0.correo_electronico=?
17:44:10 DEBUG - 
    select
        re1_0.id,
        re1_0.nombre 
    from
        roles re1_0 
    where
        re1_0.id=?
17:44:10 INFO  - Usuario encontrado: bafago2423@oziere.com
17:44:10 DEBUG - Using 'application/json', given [application/json] and supported [application/json]
17:44:10 DEBUG - Writing [com.example.api_gestion_almacen.dtos.UsuarioDto@5c4c323c]
17:44:10 DEBUG - Completed 200 OK
18:03:02 DEBUG - GET "/api/usuarios/correo/bafago2423@oziere.com", parameters={}
18:03:02 DEBUG - Mapped to com.example.api_gestion_almacen.controladores.UsuarioControlador#buscarPorCorreo(String)
18:03:02 INFO  - Buscando usuario por correo: bafago2423@oziere.com
18:03:02 DEBUG - 
    select
        ue1_0.id,
        ue1_0.contrasena,
        ue1_0.correo_confirmado,
        ue1_0.correo_electronico,
        ue1_0.fecha_creacion,
        ue1_0.foto,
        ue1_0.google,
        ue1_0.movil,
        ue1_0.nombre_completo,
        ue1_0.rol_id 
    from
        usuarios ue1_0 
    where
        ue1_0.correo_electronico=?
18:03:02 DEBUG - 
    select
        re1_0.id,
        re1_0.nombre 
    from
        roles re1_0 
    where
        re1_0.id=?
18:03:02 INFO  - Usuario encontrado: bafago2423@oziere.com
18:03:02 DEBUG - Using 'application/json', given [application/json] and supported [application/json]
18:03:02 DEBUG - Writing [com.example.api_gestion_almacen.dtos.UsuarioDto@578d8e40]
18:03:02 DEBUG - Completed 200 OK
18:29:53 DEBUG - GET "/api/usuarios/correo/bafago2423@oziere.com", parameters={}
18:29:53 DEBUG - Mapped to com.example.api_gestion_almacen.controladores.UsuarioControlador#buscarPorCorreo(String)
18:29:53 INFO  - Buscando usuario por correo: bafago2423@oziere.com
18:29:53 DEBUG - 
    select
        ue1_0.id,
        ue1_0.contrasena,
        ue1_0.correo_confirmado,
        ue1_0.correo_electronico,
        ue1_0.fecha_creacion,
        ue1_0.foto,
        ue1_0.google,
        ue1_0.movil,
        ue1_0.nombre_completo,
        ue1_0.rol_id 
    from
        usuarios ue1_0 
    where
        ue1_0.correo_electronico=?
18:29:53 DEBUG - 
    select
        re1_0.id,
        re1_0.nombre 
    from
        roles re1_0 
    where
        re1_0.id=?
18:29:53 INFO  - Usuario encontrado: bafago2423@oziere.com
18:29:53 DEBUG - Using 'application/json', given [application/json] and supported [application/json]
18:29:53 DEBUG - Writing [com.example.api_gestion_almacen.dtos.UsuarioDto@c17892c]
18:29:53 DEBUG - Completed 200 OK
18:43:39 DEBUG - GET "/api/usuarios/correo/gikoco9143@payposs.com", parameters={}
18:43:39 DEBUG - Mapped to com.example.api_gestion_almacen.controladores.UsuarioControlador#buscarPorCorreo(String)
18:43:39 INFO  - Buscando usuario por correo: gikoco9143@payposs.com
18:43:39 DEBUG - 
    select
        ue1_0.id,
        ue1_0.contrasena,
        ue1_0.correo_confirmado,
        ue1_0.correo_electronico,
        ue1_0.fecha_creacion,
        ue1_0.foto,
        ue1_0.google,
        ue1_0.movil,
        ue1_0.nombre_completo,
        ue1_0.rol_id 
    from
        usuarios ue1_0 
    where
        ue1_0.correo_electronico=?
18:43:39 INFO  - Usuario no encontrado para correo: gikoco9143@payposs.com
18:43:39 DEBUG - Using 'application/json', given [application/json] and supported [application/json]
18:43:39 DEBUG - Writing [{error=Usuario no encontrado}]
18:43:39 DEBUG - Completed 404 NOT_FOUND
18:43:39 DEBUG - POST "/api/usuarios", parameters={}
18:43:39 DEBUG - Mapped to com.example.api_gestion_almacen.controladores.UsuarioControlador#crearUsuario(CrearUsuDto)
18:43:39 DEBUG - Read "application/json;charset=UTF-8" to [CrearUsuDto{nombreCompleto='fsdfsdfdsf', movil='123456789', correoElectronico='gikoco9143@payposs.co (truncated)...]
18:43:39 INFO  - Iniciando creación de usuario: gikoco9143@payposs.com
18:43:39 DEBUG - Datos recibidos: CrearUsuDto{nombreCompleto='fsdfsdfdsf', movil='123456789', correoElectronico='gikoco9143@payposs.com', rolId=4, contrasena='[PROTECTED]', foto=null}
18:43:39 DEBUG - 
    select
        ue1_0.id,
        ue1_0.contrasena,
        ue1_0.correo_confirmado,
        ue1_0.correo_electronico,
        ue1_0.fecha_creacion,
        ue1_0.foto,
        ue1_0.google,
        ue1_0.movil,
        ue1_0.nombre_completo,
        ue1_0.rol_id 
    from
        usuarios ue1_0 
    where
        ue1_0.correo_electronico=?
18:43:40 DEBUG - 
    select
        re1_0.id,
        re1_0.nombre 
    from
        roles re1_0 
    where
        re1_0.id=?
18:43:40 DEBUG - 
    insert 
    into
        usuarios
        (contrasena, correo_confirmado, correo_electronico, foto, google, movil, nombre_completo, rol_id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?)
18:43:40 INFO  - Usuario creado exitosamente: gikoco9143@payposs.com
18:43:40 DEBUG - Using 'application/json', given [*/*] and supported [application/json]
18:43:40 DEBUG - Writing [CrearUsuDto{nombreCompleto='fsdfsdfdsf', movil='123456789', correoElectronico='gikoco9143@payposs.co (truncated)...]
18:43:40 DEBUG - Completed 201 CREATED
18:44:25 DEBUG - POST "/api/usuarios/confirmarCorreo/gikoco9143@payposs.com", parameters={}
18:44:25 DEBUG - Mapped to com.example.api_gestion_almacen.controladores.UsuarioControlador#confirmarCorreo(String)
18:44:25 INFO  - Iniciando confirmación de correo para: gikoco9143@payposs.com
18:44:25 DEBUG - 
    select
        ue1_0.id,
        ue1_0.contrasena,
        ue1_0.correo_confirmado,
        ue1_0.correo_electronico,
        ue1_0.fecha_creacion,
        ue1_0.foto,
        ue1_0.google,
        ue1_0.movil,
        ue1_0.nombre_completo,
        ue1_0.rol_id 
    from
        usuarios ue1_0 
    where
        ue1_0.correo_electronico=?
18:44:25 DEBUG - 
    select
        re1_0.id,
        re1_0.nombre 
    from
        roles re1_0 
    where
        re1_0.id=?
18:44:25 DEBUG - 
    select
        ue1_0.id,
        ue1_0.contrasena,
        ue1_0.correo_confirmado,
        ue1_0.correo_electronico,
        ue1_0.fecha_creacion,
        ue1_0.foto,
        ue1_0.google,
        ue1_0.movil,
        ue1_0.nombre_completo,
        r1_0.id,
        r1_0.nombre 
    from
        usuarios ue1_0 
    left join
        roles r1_0 
            on r1_0.id=ue1_0.rol_id 
    where
        ue1_0.id=?
18:44:25 DEBUG - 
    update
        usuarios 
    set
        contrasena=?,
        correo_confirmado=?,
        correo_electronico=?,
        foto=?,
        google=?,
        movil=?,
        nombre_completo=?,
        rol_id=? 
    where
        id=?
18:44:26 INFO  - Correo confirmado exitosamente para: gikoco9143@payposs.com
18:44:26 DEBUG - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
18:44:26 DEBUG - Writing [{mensaje=Correo confirmado exitosamente}]
18:44:26 DEBUG - Completed 200 OK
19:01:45 DEBUG - GET "/api/usuarios/correo/jonagof409@payposs.com", parameters={}
19:01:45 DEBUG - Mapped to com.example.api_gestion_almacen.controladores.UsuarioControlador#buscarPorCorreo(String)
19:01:45 INFO  - Buscando usuario por correo: jonagof409@payposs.com
19:01:45 DEBUG - 
    select
        ue1_0.id,
        ue1_0.contrasena,
        ue1_0.correo_confirmado,
        ue1_0.correo_electronico,
        ue1_0.fecha_creacion,
        ue1_0.foto,
        ue1_0.google,
        ue1_0.movil,
        ue1_0.nombre_completo,
        ue1_0.rol_id 
    from
        usuarios ue1_0 
    where
        ue1_0.correo_electronico=?
19:01:45 INFO  - Usuario no encontrado para correo: jonagof409@payposs.com
19:01:45 DEBUG - Using 'application/json', given [application/json] and supported [application/json]
19:01:45 DEBUG - Writing [{error=Usuario no encontrado}]
19:01:45 DEBUG - Completed 404 NOT_FOUND
19:01:45 DEBUG - POST "/api/usuarios", parameters={}
19:01:45 DEBUG - Mapped to com.example.api_gestion_almacen.controladores.UsuarioControlador#crearUsuario(CrearUsuDto)
19:01:45 DEBUG - Read "application/json;charset=UTF-8" to [CrearUsuDto{nombreCompleto='dfnhbfdghb', movil='123456789', correoElectronico='jonagof409@payposs.co (truncated)...]
19:01:45 INFO  - Iniciando creación de usuario: jonagof409@payposs.com
19:01:45 DEBUG - Datos recibidos: CrearUsuDto{nombreCompleto='dfnhbfdghb', movil='123456789', correoElectronico='jonagof409@payposs.com', rolId=4, contrasena='[PROTECTED]', foto=null}
19:01:45 DEBUG - 
    select
        ue1_0.id,
        ue1_0.contrasena,
        ue1_0.correo_confirmado,
        ue1_0.correo_electronico,
        ue1_0.fecha_creacion,
        ue1_0.foto,
        ue1_0.google,
        ue1_0.movil,
        ue1_0.nombre_completo,
        ue1_0.rol_id 
    from
        usuarios ue1_0 
    where
        ue1_0.correo_electronico=?
19:01:46 DEBUG - 
    select
        re1_0.id,
        re1_0.nombre 
    from
        roles re1_0 
    where
        re1_0.id=?
19:01:46 DEBUG - 
    insert 
    into
        usuarios
        (contrasena, correo_confirmado, correo_electronico, foto, google, movil, nombre_completo, rol_id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?)
19:01:46 INFO  - Usuario creado exitosamente: jonagof409@payposs.com
19:01:46 DEBUG - Using 'application/json', given [*/*] and supported [application/json]
19:01:46 DEBUG - Writing [CrearUsuDto{nombreCompleto='dfnhbfdghb', movil='123456789', correoElectronico='jonagof409@payposs.co (truncated)...]
19:01:46 DEBUG - Completed 201 CREATED
19:15:06 DEBUG - GET "/api/usuarios/correo/jonagof409@payposs.com", parameters={}
19:15:06 DEBUG - Mapped to com.example.api_gestion_almacen.controladores.UsuarioControlador#buscarPorCorreo(String)
19:15:06 INFO  - Buscando usuario por correo: jonagof409@payposs.com
19:15:06 DEBUG - 
    select
        ue1_0.id,
        ue1_0.contrasena,
        ue1_0.correo_confirmado,
        ue1_0.correo_electronico,
        ue1_0.fecha_creacion,
        ue1_0.foto,
        ue1_0.google,
        ue1_0.movil,
        ue1_0.nombre_completo,
        ue1_0.rol_id 
    from
        usuarios ue1_0 
    where
        ue1_0.correo_electronico=?
19:15:06 DEBUG - 
    select
        re1_0.id,
        re1_0.nombre 
    from
        roles re1_0 
    where
        re1_0.id=?
19:15:06 INFO  - Usuario encontrado: jonagof409@payposs.com
19:15:06 DEBUG - Using 'application/json', given [application/json] and supported [application/json]
19:15:06 DEBUG - Writing [com.example.api_gestion_almacen.dtos.UsuarioDto@2a2921fd]
19:15:06 DEBUG - Completed 200 OK
19:15:48 DEBUG - POST "/api/usuarios/confirmarCorreo/jonagof409@payposs.com", parameters={}
19:15:48 DEBUG - Mapped to com.example.api_gestion_almacen.controladores.UsuarioControlador#confirmarCorreo(String)
19:15:48 INFO  - Iniciando confirmación de correo para: jonagof409@payposs.com
19:15:48 DEBUG - 
    select
        ue1_0.id,
        ue1_0.contrasena,
        ue1_0.correo_confirmado,
        ue1_0.correo_electronico,
        ue1_0.fecha_creacion,
        ue1_0.foto,
        ue1_0.google,
        ue1_0.movil,
        ue1_0.nombre_completo,
        ue1_0.rol_id 
    from
        usuarios ue1_0 
    where
        ue1_0.correo_electronico=?
19:15:48 DEBUG - 
    select
        re1_0.id,
        re1_0.nombre 
    from
        roles re1_0 
    where
        re1_0.id=?
19:15:48 DEBUG - 
    select
        ue1_0.id,
        ue1_0.contrasena,
        ue1_0.correo_confirmado,
        ue1_0.correo_electronico,
        ue1_0.fecha_creacion,
        ue1_0.foto,
        ue1_0.google,
        ue1_0.movil,
        ue1_0.nombre_completo,
        r1_0.id,
        r1_0.nombre 
    from
        usuarios ue1_0 
    left join
        roles r1_0 
            on r1_0.id=ue1_0.rol_id 
    where
        ue1_0.id=?
19:15:48 DEBUG - 
    update
        usuarios 
    set
        contrasena=?,
        correo_confirmado=?,
        correo_electronico=?,
        foto=?,
        google=?,
        movil=?,
        nombre_completo=?,
        rol_id=? 
    where
        id=?
19:15:49 INFO  - Correo confirmado exitosamente para: jonagof409@payposs.com
19:15:49 DEBUG - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
19:15:49 DEBUG - Writing [{mensaje=Correo confirmado exitosamente}]
19:15:49 DEBUG - Completed 200 OK
19:17:08 DEBUG - POST "/api/usuarios/confirmarCorreo/jonagof409@payposs.com", parameters={}
19:17:08 DEBUG - Mapped to com.example.api_gestion_almacen.controladores.UsuarioControlador#confirmarCorreo(String)
19:17:08 INFO  - Iniciando confirmación de correo para: jonagof409@payposs.com
19:17:08 DEBUG - 
    select
        ue1_0.id,
        ue1_0.contrasena,
        ue1_0.correo_confirmado,
        ue1_0.correo_electronico,
        ue1_0.fecha_creacion,
        ue1_0.foto,
        ue1_0.google,
        ue1_0.movil,
        ue1_0.nombre_completo,
        ue1_0.rol_id 
    from
        usuarios ue1_0 
    where
        ue1_0.correo_electronico=?
19:17:08 DEBUG - 
    select
        re1_0.id,
        re1_0.nombre 
    from
        roles re1_0 
    where
        re1_0.id=?
19:17:08 DEBUG - 
    select
        ue1_0.id,
        ue1_0.contrasena,
        ue1_0.correo_confirmado,
        ue1_0.correo_electronico,
        ue1_0.fecha_creacion,
        ue1_0.foto,
        ue1_0.google,
        ue1_0.movil,
        ue1_0.nombre_completo,
        r1_0.id,
        r1_0.nombre 
    from
        usuarios ue1_0 
    left join
        roles r1_0 
            on r1_0.id=ue1_0.rol_id 
    where
        ue1_0.id=?
19:17:08 INFO  - Correo confirmado exitosamente para: jonagof409@payposs.com
19:17:08 DEBUG - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
19:17:08 DEBUG - Writing [{mensaje=Correo confirmado exitosamente}]
19:17:08 DEBUG - Completed 200 OK
19:24:47 DEBUG - GET "/api/usuarios/correo/palomitasverdes73@gmail.com", parameters={}
19:24:47 DEBUG - Mapped to com.example.api_gestion_almacen.controladores.UsuarioControlador#buscarPorCorreo(String)
19:24:47 INFO  - Buscando usuario por correo: palomitasverdes73@gmail.com
19:24:47 DEBUG - 
    select
        ue1_0.id,
        ue1_0.contrasena,
        ue1_0.correo_confirmado,
        ue1_0.correo_electronico,
        ue1_0.fecha_creacion,
        ue1_0.foto,
        ue1_0.google,
        ue1_0.movil,
        ue1_0.nombre_completo,
        ue1_0.rol_id 
    from
        usuarios ue1_0 
    where
        ue1_0.correo_electronico=?
19:24:47 DEBUG - 
    select
        re1_0.id,
        re1_0.nombre 
    from
        roles re1_0 
    where
        re1_0.id=?
19:24:47 INFO  - Usuario encontrado: palomitasverdes73@gmail.com
19:24:47 DEBUG - Using 'application/json', given [application/json] and supported [application/json]
19:24:47 DEBUG - Writing [com.example.api_gestion_almacen.dtos.UsuarioDto@71f2d9a0]
19:24:47 DEBUG - Completed 200 OK
19:25:00 DEBUG - GET "/api/usuarios/correo/dobafad996@oziere.com", parameters={}
19:25:00 DEBUG - Mapped to com.example.api_gestion_almacen.controladores.UsuarioControlador#buscarPorCorreo(String)
19:25:00 INFO  - Buscando usuario por correo: dobafad996@oziere.com
19:25:00 DEBUG - 
    select
        ue1_0.id,
        ue1_0.contrasena,
        ue1_0.correo_confirmado,
        ue1_0.correo_electronico,
        ue1_0.fecha_creacion,
        ue1_0.foto,
        ue1_0.google,
        ue1_0.movil,
        ue1_0.nombre_completo,
        ue1_0.rol_id 
    from
        usuarios ue1_0 
    where
        ue1_0.correo_electronico=?
19:25:00 INFO  - Usuario no encontrado para correo: dobafad996@oziere.com
19:25:00 DEBUG - Using 'application/json', given [application/json] and supported [application/json]
19:25:00 DEBUG - Writing [{error=Usuario no encontrado}]
19:25:00 DEBUG - Completed 404 NOT_FOUND
19:25:00 DEBUG - POST "/api/usuarios", parameters={}
19:25:00 DEBUG - Mapped to com.example.api_gestion_almacen.controladores.UsuarioControlador#crearUsuario(CrearUsuDto)
19:25:00 DEBUG - Read "application/json;charset=UTF-8" to [CrearUsuDto{nombreCompleto='dsgsdf', movil='123456789', correoElectronico='dobafad996@oziere.com', r (truncated)...]
19:25:00 INFO  - Iniciando creación de usuario: dobafad996@oziere.com
19:25:00 DEBUG - Datos recibidos: CrearUsuDto{nombreCompleto='dsgsdf', movil='123456789', correoElectronico='dobafad996@oziere.com', rolId=4, contrasena='[PROTECTED]', foto=null}
19:25:00 DEBUG - 
    select
        ue1_0.id,
        ue1_0.contrasena,
        ue1_0.correo_confirmado,
        ue1_0.correo_electronico,
        ue1_0.fecha_creacion,
        ue1_0.foto,
        ue1_0.google,
        ue1_0.movil,
        ue1_0.nombre_completo,
        ue1_0.rol_id 
    from
        usuarios ue1_0 
    where
        ue1_0.correo_electronico=?
19:25:00 DEBUG - 
    select
        re1_0.id,
        re1_0.nombre 
    from
        roles re1_0 
    where
        re1_0.id=?
19:25:00 DEBUG - 
    insert 
    into
        usuarios
        (contrasena, correo_confirmado, correo_electronico, foto, google, movil, nombre_completo, rol_id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?)
19:25:01 INFO  - Usuario creado exitosamente: dobafad996@oziere.com
19:25:01 DEBUG - Using 'application/json', given [*/*] and supported [application/json]
19:25:01 DEBUG - Writing [CrearUsuDto{nombreCompleto='dsgsdf', movil='123456789', correoElectronico='dobafad996@oziere.com', r (truncated)...]
19:25:01 DEBUG - Completed 201 CREATED
19:25:17 DEBUG - POST "/api/usuarios/confirmarCorreo/dobafad996@oziere.com", parameters={}
19:25:17 DEBUG - Mapped to com.example.api_gestion_almacen.controladores.UsuarioControlador#confirmarCorreo(String)
19:25:17 INFO  - Iniciando confirmación de correo para: dobafad996@oziere.com
19:25:17 DEBUG - 
    select
        ue1_0.id,
        ue1_0.contrasena,
        ue1_0.correo_confirmado,
        ue1_0.correo_electronico,
        ue1_0.fecha_creacion,
        ue1_0.foto,
        ue1_0.google,
        ue1_0.movil,
        ue1_0.nombre_completo,
        ue1_0.rol_id 
    from
        usuarios ue1_0 
    where
        ue1_0.correo_electronico=?
19:25:17 DEBUG - 
    select
        re1_0.id,
        re1_0.nombre 
    from
        roles re1_0 
    where
        re1_0.id=?
19:25:17 DEBUG - 
    select
        ue1_0.id,
        ue1_0.contrasena,
        ue1_0.correo_confirmado,
        ue1_0.correo_electronico,
        ue1_0.fecha_creacion,
        ue1_0.foto,
        ue1_0.google,
        ue1_0.movil,
        ue1_0.nombre_completo,
        r1_0.id,
        r1_0.nombre 
    from
        usuarios ue1_0 
    left join
        roles r1_0 
            on r1_0.id=ue1_0.rol_id 
    where
        ue1_0.id=?
19:25:17 DEBUG - 
    update
        usuarios 
    set
        contrasena=?,
        correo_confirmado=?,
        correo_electronico=?,
        foto=?,
        google=?,
        movil=?,
        nombre_completo=?,
        rol_id=? 
    where
        id=?
19:25:18 INFO  - Correo confirmado exitosamente para: dobafad996@oziere.com
19:25:18 DEBUG - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
19:25:18 DEBUG - Writing [{mensaje=Correo confirmado exitosamente}]
19:25:18 DEBUG - Completed 200 OK
19:27:30 DEBUG - GET "/api/usuarios/correo/dobafad996@oziere.com", parameters={}
19:27:30 DEBUG - Mapped to com.example.api_gestion_almacen.controladores.UsuarioControlador#buscarPorCorreo(String)
19:27:30 INFO  - Buscando usuario por correo: dobafad996@oziere.com
19:27:30 DEBUG - 
    select
        ue1_0.id,
        ue1_0.contrasena,
        ue1_0.correo_confirmado,
        ue1_0.correo_electronico,
        ue1_0.fecha_creacion,
        ue1_0.foto,
        ue1_0.google,
        ue1_0.movil,
        ue1_0.nombre_completo,
        ue1_0.rol_id 
    from
        usuarios ue1_0 
    where
        ue1_0.correo_electronico=?
19:27:31 DEBUG - 
    select
        re1_0.id,
        re1_0.nombre 
    from
        roles re1_0 
    where
        re1_0.id=?
19:27:31 INFO  - Usuario encontrado: dobafad996@oziere.com
19:27:31 DEBUG - Using 'application/json', given [application/json] and supported [application/json]
19:27:31 DEBUG - Writing [com.example.api_gestion_almacen.dtos.UsuarioDto@717b73e3]
19:27:31 DEBUG - Completed 200 OK
19:27:31 DEBUG - POST "/api/usuarios/autenticar", parameters={}
19:27:31 DEBUG - Mapped to com.example.api_gestion_almacen.controladores.UsuarioControlador#autenticarUsuario(Map)
19:27:31 DEBUG - Read "application/json;charset=UTF-8" to [{contrasena=3cc890a93fa2160c551414745f084c101a9a4be2d32d6b1b1c622d1a217dbbaa, correoElectronico=doba (truncated)...]
19:27:31 INFO  - Intento de autenticación para usuario: dobafad996@oziere.com
19:27:31 DEBUG - 
    select
        ue1_0.id,
        ue1_0.contrasena,
        ue1_0.correo_confirmado,
        ue1_0.correo_electronico,
        ue1_0.fecha_creacion,
        ue1_0.foto,
        ue1_0.google,
        ue1_0.movil,
        ue1_0.nombre_completo,
        ue1_0.rol_id 
    from
        usuarios ue1_0 
    where
        ue1_0.correo_electronico=?
19:27:31 DEBUG - 
    select
        re1_0.id,
        re1_0.nombre 
    from
        roles re1_0 
    where
        re1_0.id=?
19:27:31 INFO  - Autenticación exitosa para: dobafad996@oziere.com
19:27:31 DEBUG - Using 'application/json', given [*/*] and supported [application/json]
19:27:31 DEBUG - Writing [com.example.api_gestion_almacen.dtos.UsuarioDto@17e85401]
19:27:31 DEBUG - Completed 200 OK
19:28:02 DEBUG - GET "/api/usuarios/correo/dobafad996@oziere.com", parameters={}
19:28:02 DEBUG - Mapped to com.example.api_gestion_almacen.controladores.UsuarioControlador#buscarPorCorreo(String)
19:28:02 INFO  - Buscando usuario por correo: dobafad996@oziere.com
19:28:02 DEBUG - 
    select
        ue1_0.id,
        ue1_0.contrasena,
        ue1_0.correo_confirmado,
        ue1_0.correo_electronico,
        ue1_0.fecha_creacion,
        ue1_0.foto,
        ue1_0.google,
        ue1_0.movil,
        ue1_0.nombre_completo,
        ue1_0.rol_id 
    from
        usuarios ue1_0 
    where
        ue1_0.correo_electronico=?
19:28:02 DEBUG - 
    select
        re1_0.id,
        re1_0.nombre 
    from
        roles re1_0 
    where
        re1_0.id=?
19:28:02 INFO  - Usuario encontrado: dobafad996@oziere.com
19:28:02 DEBUG - Using 'application/json', given [application/json] and supported [application/json]
19:28:02 DEBUG - Writing [com.example.api_gestion_almacen.dtos.UsuarioDto@606e2ad6]
19:28:02 DEBUG - Completed 200 OK
19:28:02 DEBUG - POST "/api/usuarios/autenticar", parameters={}
19:28:02 DEBUG - Mapped to com.example.api_gestion_almacen.controladores.UsuarioControlador#autenticarUsuario(Map)
19:28:02 DEBUG - Read "application/json;charset=UTF-8" to [{contrasena=3cc890a93fa2160c551414745f084c101a9a4be2d32d6b1b1c622d1a217dbbaa, correoElectronico=doba (truncated)...]
19:28:02 INFO  - Intento de autenticación para usuario: dobafad996@oziere.com
19:28:02 DEBUG - 
    select
        ue1_0.id,
        ue1_0.contrasena,
        ue1_0.correo_confirmado,
        ue1_0.correo_electronico,
        ue1_0.fecha_creacion,
        ue1_0.foto,
        ue1_0.google,
        ue1_0.movil,
        ue1_0.nombre_completo,
        ue1_0.rol_id 
    from
        usuarios ue1_0 
    where
        ue1_0.correo_electronico=?
19:28:02 DEBUG - 
    select
        re1_0.id,
        re1_0.nombre 
    from
        roles re1_0 
    where
        re1_0.id=?
19:28:02 INFO  - Autenticación exitosa para: dobafad996@oziere.com
19:28:02 DEBUG - Using 'application/json', given [*/*] and supported [application/json]
19:28:02 DEBUG - Writing [com.example.api_gestion_almacen.dtos.UsuarioDto@1848d197]
19:28:02 DEBUG - Completed 200 OK
19:28:40 DEBUG - GET "/api/usuarios/correo/dobafad996@oziere.com", parameters={}
19:28:40 DEBUG - Mapped to com.example.api_gestion_almacen.controladores.UsuarioControlador#buscarPorCorreo(String)
19:28:40 INFO  - Buscando usuario por correo: dobafad996@oziere.com
19:28:40 DEBUG - 
    select
        ue1_0.id,
        ue1_0.contrasena,
        ue1_0.correo_confirmado,
        ue1_0.correo_electronico,
        ue1_0.fecha_creacion,
        ue1_0.foto,
        ue1_0.google,
        ue1_0.movil,
        ue1_0.nombre_completo,
        ue1_0.rol_id 
    from
        usuarios ue1_0 
    where
        ue1_0.correo_electronico=?
19:28:40 DEBUG - 
    select
        re1_0.id,
        re1_0.nombre 
    from
        roles re1_0 
    where
        re1_0.id=?
19:28:40 INFO  - Usuario encontrado: dobafad996@oziere.com
19:28:40 DEBUG - Using 'application/json', given [application/json] and supported [application/json]
19:28:40 DEBUG - Writing [com.example.api_gestion_almacen.dtos.UsuarioDto@3e1e9bf4]
19:28:40 DEBUG - Completed 200 OK
19:28:40 DEBUG - POST "/api/usuarios/autenticar", parameters={}
19:28:40 DEBUG - Mapped to com.example.api_gestion_almacen.controladores.UsuarioControlador#autenticarUsuario(Map)
19:28:40 DEBUG - Read "application/json;charset=UTF-8" to [{contrasena=3cc890a93fa2160c551414745f084c101a9a4be2d32d6b1b1c622d1a217dbbaa, correoElectronico=doba (truncated)...]
19:28:40 INFO  - Intento de autenticación para usuario: dobafad996@oziere.com
19:28:40 DEBUG - 
    select
        ue1_0.id,
        ue1_0.contrasena,
        ue1_0.correo_confirmado,
        ue1_0.correo_electronico,
        ue1_0.fecha_creacion,
        ue1_0.foto,
        ue1_0.google,
        ue1_0.movil,
        ue1_0.nombre_completo,
        ue1_0.rol_id 
    from
        usuarios ue1_0 
    where
        ue1_0.correo_electronico=?
19:28:40 DEBUG - 
    select
        re1_0.id,
        re1_0.nombre 
    from
        roles re1_0 
    where
        re1_0.id=?
19:28:40 INFO  - Autenticación exitosa para: dobafad996@oziere.com
19:28:40 DEBUG - Using 'application/json', given [*/*] and supported [application/json]
19:28:40 DEBUG - Writing [com.example.api_gestion_almacen.dtos.UsuarioDto@74a7bc3f]
19:28:40 DEBUG - Completed 200 OK
19:29:10 DEBUG - GET "/api/usuarios/correo/dobafad996@oziere.com", parameters={}
19:29:10 DEBUG - Mapped to com.example.api_gestion_almacen.controladores.UsuarioControlador#buscarPorCorreo(String)
19:29:10 INFO  - Buscando usuario por correo: dobafad996@oziere.com
19:29:10 DEBUG - 
    select
        ue1_0.id,
        ue1_0.contrasena,
        ue1_0.correo_confirmado,
        ue1_0.correo_electronico,
        ue1_0.fecha_creacion,
        ue1_0.foto,
        ue1_0.google,
        ue1_0.movil,
        ue1_0.nombre_completo,
        ue1_0.rol_id 
    from
        usuarios ue1_0 
    where
        ue1_0.correo_electronico=?
19:29:11 DEBUG - 
    select
        re1_0.id,
        re1_0.nombre 
    from
        roles re1_0 
    where
        re1_0.id=?
19:29:11 INFO  - Usuario encontrado: dobafad996@oziere.com
19:29:11 DEBUG - Using 'application/json', given [application/json] and supported [application/json]
19:29:11 DEBUG - Writing [com.example.api_gestion_almacen.dtos.UsuarioDto@31e94c27]
19:29:11 DEBUG - Completed 200 OK
19:29:11 DEBUG - POST "/api/usuarios/autenticar", parameters={}
19:29:11 DEBUG - Mapped to com.example.api_gestion_almacen.controladores.UsuarioControlador#autenticarUsuario(Map)
19:29:11 DEBUG - Read "application/json;charset=UTF-8" to [{contrasena=3cc890a93fa2160c551414745f084c101a9a4be2d32d6b1b1c622d1a217dbbaa, correoElectronico=doba (truncated)...]
19:29:11 INFO  - Intento de autenticación para usuario: dobafad996@oziere.com
19:29:11 DEBUG - 
    select
        ue1_0.id,
        ue1_0.contrasena,
        ue1_0.correo_confirmado,
        ue1_0.correo_electronico,
        ue1_0.fecha_creacion,
        ue1_0.foto,
        ue1_0.google,
        ue1_0.movil,
        ue1_0.nombre_completo,
        ue1_0.rol_id 
    from
        usuarios ue1_0 
    where
        ue1_0.correo_electronico=?
19:29:11 DEBUG - 
    select
        re1_0.id,
        re1_0.nombre 
    from
        roles re1_0 
    where
        re1_0.id=?
19:29:11 INFO  - Autenticación exitosa para: dobafad996@oziere.com
19:29:11 DEBUG - Using 'application/json', given [*/*] and supported [application/json]
19:29:11 DEBUG - Writing [com.example.api_gestion_almacen.dtos.UsuarioDto@52bca02f]
19:29:11 DEBUG - Completed 200 OK
19:48:54 DEBUG - GET "/api/usuarios/correo/dobafad996@oziere.com", parameters={}
19:48:54 DEBUG - Mapped to com.example.api_gestion_almacen.controladores.UsuarioControlador#buscarPorCorreo(String)
19:48:54 INFO  - Buscando usuario por correo: dobafad996@oziere.com
19:48:54 DEBUG - 
    select
        ue1_0.id,
        ue1_0.contrasena,
        ue1_0.correo_confirmado,
        ue1_0.correo_electronico,
        ue1_0.fecha_creacion,
        ue1_0.foto,
        ue1_0.google,
        ue1_0.movil,
        ue1_0.nombre_completo,
        ue1_0.rol_id 
    from
        usuarios ue1_0 
    where
        ue1_0.correo_electronico=?
19:48:54 DEBUG - 
    select
        re1_0.id,
        re1_0.nombre 
    from
        roles re1_0 
    where
        re1_0.id=?
19:48:55 INFO  - Usuario encontrado: dobafad996@oziere.com
19:48:55 DEBUG - Using 'application/json', given [application/json] and supported [application/json]
19:48:55 DEBUG - Writing [com.example.api_gestion_almacen.dtos.UsuarioDto@67e63516]
19:48:55 DEBUG - Completed 200 OK
19:48:55 DEBUG - POST "/api/usuarios/autenticar", parameters={}
19:48:55 DEBUG - Mapped to com.example.api_gestion_almacen.controladores.UsuarioControlador#autenticarUsuario(Map)
19:48:55 DEBUG - Read "application/json;charset=UTF-8" to [{contrasena=3cc890a93fa2160c551414745f084c101a9a4be2d32d6b1b1c622d1a217dbbaa, correoElectronico=doba (truncated)...]
19:48:55 INFO  - Intento de autenticación para usuario: dobafad996@oziere.com
19:48:55 DEBUG - 
    select
        ue1_0.id,
        ue1_0.contrasena,
        ue1_0.correo_confirmado,
        ue1_0.correo_electronico,
        ue1_0.fecha_creacion,
        ue1_0.foto,
        ue1_0.google,
        ue1_0.movil,
        ue1_0.nombre_completo,
        ue1_0.rol_id 
    from
        usuarios ue1_0 
    where
        ue1_0.correo_electronico=?
19:48:55 DEBUG - 
    select
        re1_0.id,
        re1_0.nombre 
    from
        roles re1_0 
    where
        re1_0.id=?
19:48:55 INFO  - Autenticación exitosa para: dobafad996@oziere.com
19:48:55 DEBUG - Using 'application/json', given [*/*] and supported [application/json]
19:48:55 DEBUG - Writing [com.example.api_gestion_almacen.dtos.UsuarioDto@34a9c48d]
19:48:55 DEBUG - Completed 200 OK
19:49:17 DEBUG - GET "/api/usuarios/correo/boltaxmd@gmail.com", parameters={}
19:49:17 DEBUG - Mapped to com.example.api_gestion_almacen.controladores.UsuarioControlador#buscarPorCorreo(String)
19:49:17 INFO  - Buscando usuario por correo: boltaxmd@gmail.com
19:49:17 DEBUG - 
    select
        ue1_0.id,
        ue1_0.contrasena,
        ue1_0.correo_confirmado,
        ue1_0.correo_electronico,
        ue1_0.fecha_creacion,
        ue1_0.foto,
        ue1_0.google,
        ue1_0.movil,
        ue1_0.nombre_completo,
        ue1_0.rol_id 
    from
        usuarios ue1_0 
    where
        ue1_0.correo_electronico=?
19:49:17 DEBUG - 
    select
        re1_0.id,
        re1_0.nombre 
    from
        roles re1_0 
    where
        re1_0.id=?
19:49:17 INFO  - Usuario encontrado: boltaxmd@gmail.com
19:49:17 DEBUG - Using 'application/json', given [application/json] and supported [application/json]
19:49:17 DEBUG - Writing [com.example.api_gestion_almacen.dtos.UsuarioDto@38756139]
19:49:17 DEBUG - Completed 200 OK
20:07:31 DEBUG - GET "/api/usuarios/correo/boltaxmd@gmail.com", parameters={}
20:07:31 DEBUG - Mapped to com.example.api_gestion_almacen.controladores.UsuarioControlador#buscarPorCorreo(String)
20:07:31 INFO  - Buscando usuario por correo: boltaxmd@gmail.com
20:07:31 DEBUG - 
    select
        ue1_0.id,
        ue1_0.contrasena,
        ue1_0.correo_confirmado,
        ue1_0.correo_electronico,
        ue1_0.fecha_creacion,
        ue1_0.foto,
        ue1_0.google,
        ue1_0.movil,
        ue1_0.nombre_completo,
        ue1_0.rol_id 
    from
        usuarios ue1_0 
    where
        ue1_0.correo_electronico=?
20:07:31 DEBUG - 
    select
        re1_0.id,
        re1_0.nombre 
    from
        roles re1_0 
    where
        re1_0.id=?
20:07:31 INFO  - Usuario encontrado: boltaxmd@gmail.com
20:07:31 DEBUG - Using 'application/json', given [application/json] and supported [application/json]
20:07:31 DEBUG - Writing [com.example.api_gestion_almacen.dtos.UsuarioDto@2e960f76]
20:07:31 DEBUG - Completed 200 OK
20:22:09 DEBUG - GET "/api/usuarios/correo/dobafad996@oziere.com", parameters={}
20:22:09 DEBUG - Mapped to com.example.api_gestion_almacen.controladores.UsuarioControlador#buscarPorCorreo(String)
20:22:09 INFO  - Buscando usuario por correo: dobafad996@oziere.com
20:22:09 DEBUG - 
    select
        ue1_0.id,
        ue1_0.contrasena,
        ue1_0.correo_confirmado,
        ue1_0.correo_electronico,
        ue1_0.fecha_creacion,
        ue1_0.foto,
        ue1_0.google,
        ue1_0.movil,
        ue1_0.nombre_completo,
        ue1_0.rol_id 
    from
        usuarios ue1_0 
    where
        ue1_0.correo_electronico=?
20:22:09 DEBUG - 
    select
        re1_0.id,
        re1_0.nombre 
    from
        roles re1_0 
    where
        re1_0.id=?
20:22:09 INFO  - Usuario encontrado: dobafad996@oziere.com
20:22:09 DEBUG - Using 'application/json', given [application/json] and supported [application/json]
20:22:09 DEBUG - Writing [com.example.api_gestion_almacen.dtos.UsuarioDto@7aa86cac]
20:22:09 DEBUG - Completed 200 OK
20:22:09 DEBUG - POST "/api/usuarios/autenticar", parameters={}
20:22:09 DEBUG - Mapped to com.example.api_gestion_almacen.controladores.UsuarioControlador#autenticarUsuario(Map)
20:22:09 DEBUG - Read "application/json;charset=UTF-8" to [{contrasena=3cc890a93fa2160c551414745f084c101a9a4be2d32d6b1b1c622d1a217dbbaa, correoElectronico=doba (truncated)...]
20:22:09 INFO  - Intento de autenticación para usuario: dobafad996@oziere.com
20:22:09 DEBUG - 
    select
        ue1_0.id,
        ue1_0.contrasena,
        ue1_0.correo_confirmado,
        ue1_0.correo_electronico,
        ue1_0.fecha_creacion,
        ue1_0.foto,
        ue1_0.google,
        ue1_0.movil,
        ue1_0.nombre_completo,
        ue1_0.rol_id 
    from
        usuarios ue1_0 
    where
        ue1_0.correo_electronico=?
20:22:10 DEBUG - 
    select
        re1_0.id,
        re1_0.nombre 
    from
        roles re1_0 
    where
        re1_0.id=?
20:22:10 INFO  - Autenticación exitosa para: dobafad996@oziere.com
20:22:10 DEBUG - Using 'application/json', given [*/*] and supported [application/json]
20:22:10 DEBUG - Writing [com.example.api_gestion_almacen.dtos.UsuarioDto@322e5c61]
20:22:10 DEBUG - Completed 200 OK
20:26:24 DEBUG - GET "/api/usuarios/correo/dobafad996@oziere.com", parameters={}
20:26:24 DEBUG - Mapped to com.example.api_gestion_almacen.controladores.UsuarioControlador#buscarPorCorreo(String)
20:26:24 INFO  - Buscando usuario por correo: dobafad996@oziere.com
20:26:24 DEBUG - 
    select
        ue1_0.id,
        ue1_0.contrasena,
        ue1_0.correo_confirmado,
        ue1_0.correo_electronico,
        ue1_0.fecha_creacion,
        ue1_0.foto,
        ue1_0.google,
        ue1_0.movil,
        ue1_0.nombre_completo,
        ue1_0.rol_id 
    from
        usuarios ue1_0 
    where
        ue1_0.correo_electronico=?
20:26:25 DEBUG - 
    select
        re1_0.id,
        re1_0.nombre 
    from
        roles re1_0 
    where
        re1_0.id=?
20:26:25 INFO  - Usuario encontrado: dobafad996@oziere.com
20:26:25 DEBUG - Using 'application/json', given [application/json] and supported [application/json]
20:26:25 DEBUG - Writing [com.example.api_gestion_almacen.dtos.UsuarioDto@1117d81e]
20:26:25 DEBUG - Completed 200 OK
20:26:25 DEBUG - POST "/api/usuarios/autenticar", parameters={}
20:26:25 DEBUG - Mapped to com.example.api_gestion_almacen.controladores.UsuarioControlador#autenticarUsuario(Map)
20:26:25 DEBUG - Read "application/json;charset=UTF-8" to [{contrasena=3cc890a93fa2160c551414745f084c101a9a4be2d32d6b1b1c622d1a217dbbaa, correoElectronico=doba (truncated)...]
20:26:25 INFO  - Intento de autenticación para usuario: dobafad996@oziere.com
20:26:25 DEBUG - 
    select
        ue1_0.id,
        ue1_0.contrasena,
        ue1_0.correo_confirmado,
        ue1_0.correo_electronico,
        ue1_0.fecha_creacion,
        ue1_0.foto,
        ue1_0.google,
        ue1_0.movil,
        ue1_0.nombre_completo,
        ue1_0.rol_id 
    from
        usuarios ue1_0 
    where
        ue1_0.correo_electronico=?
20:26:25 DEBUG - 
    select
        re1_0.id,
        re1_0.nombre 
    from
        roles re1_0 
    where
        re1_0.id=?
20:26:25 INFO  - Autenticación exitosa para: dobafad996@oziere.com
20:26:25 DEBUG - Using 'application/json', given [*/*] and supported [application/json]
20:26:25 DEBUG - Writing [com.example.api_gestion_almacen.dtos.UsuarioDto@468acfd9]
20:26:25 DEBUG - Completed 200 OK
20:27:06 DEBUG - GET "/api/usuarios/correo/dobafad996@oziere.com", parameters={}
20:27:06 DEBUG - Mapped to com.example.api_gestion_almacen.controladores.UsuarioControlador#buscarPorCorreo(String)
20:27:06 INFO  - Buscando usuario por correo: dobafad996@oziere.com
20:27:06 DEBUG - 
    select
        ue1_0.id,
        ue1_0.contrasena,
        ue1_0.correo_confirmado,
        ue1_0.correo_electronico,
        ue1_0.fecha_creacion,
        ue1_0.foto,
        ue1_0.google,
        ue1_0.movil,
        ue1_0.nombre_completo,
        ue1_0.rol_id 
    from
        usuarios ue1_0 
    where
        ue1_0.correo_electronico=?
20:27:07 DEBUG - 
    select
        re1_0.id,
        re1_0.nombre 
    from
        roles re1_0 
    where
        re1_0.id=?
20:27:07 INFO  - Usuario encontrado: dobafad996@oziere.com
20:27:07 DEBUG - Using 'application/json', given [application/json] and supported [application/json]
20:27:07 DEBUG - Writing [com.example.api_gestion_almacen.dtos.UsuarioDto@461757c0]
20:27:07 DEBUG - Completed 200 OK
20:27:07 DEBUG - POST "/api/usuarios/autenticar", parameters={}
20:27:07 DEBUG - Mapped to com.example.api_gestion_almacen.controladores.UsuarioControlador#autenticarUsuario(Map)
20:27:07 DEBUG - Read "application/json;charset=UTF-8" to [{contrasena=3cc890a93fa2160c551414745f084c101a9a4be2d32d6b1b1c622d1a217dbbaa, correoElectronico=doba (truncated)...]
20:27:07 INFO  - Intento de autenticación para usuario: dobafad996@oziere.com
20:27:07 DEBUG - 
    select
        ue1_0.id,
        ue1_0.contrasena,
        ue1_0.correo_confirmado,
        ue1_0.correo_electronico,
        ue1_0.fecha_creacion,
        ue1_0.foto,
        ue1_0.google,
        ue1_0.movil,
        ue1_0.nombre_completo,
        ue1_0.rol_id 
    from
        usuarios ue1_0 
    where
        ue1_0.correo_electronico=?
20:27:07 DEBUG - 
    select
        re1_0.id,
        re1_0.nombre 
    from
        roles re1_0 
    where
        re1_0.id=?
20:27:07 INFO  - Autenticación exitosa para: dobafad996@oziere.com
20:27:07 DEBUG - Using 'application/json', given [*/*] and supported [application/json]
20:27:07 DEBUG - Writing [com.example.api_gestion_almacen.dtos.UsuarioDto@74e97e79]
20:27:07 DEBUG - Completed 200 OK
20:31:17 DEBUG - GET "/api/usuarios/correo/dobafad996@oziere.com", parameters={}
20:31:17 DEBUG - Mapped to com.example.api_gestion_almacen.controladores.UsuarioControlador#buscarPorCorreo(String)
20:31:17 INFO  - Buscando usuario por correo: dobafad996@oziere.com
20:31:17 DEBUG - 
    select
        ue1_0.id,
        ue1_0.contrasena,
        ue1_0.correo_confirmado,
        ue1_0.correo_electronico,
        ue1_0.fecha_creacion,
        ue1_0.foto,
        ue1_0.google,
        ue1_0.movil,
        ue1_0.nombre_completo,
        ue1_0.rol_id 
    from
        usuarios ue1_0 
    where
        ue1_0.correo_electronico=?
20:31:17 DEBUG - 
    select
        re1_0.id,
        re1_0.nombre 
    from
        roles re1_0 
    where
        re1_0.id=?
20:31:17 INFO  - Usuario encontrado: dobafad996@oziere.com
20:31:17 DEBUG - Using 'application/json', given [application/json] and supported [application/json]
20:31:17 DEBUG - Writing [com.example.api_gestion_almacen.dtos.UsuarioDto@21a1e7a1]
20:31:17 DEBUG - Completed 200 OK
20:31:17 DEBUG - POST "/api/usuarios/autenticar", parameters={}
20:31:17 DEBUG - Mapped to com.example.api_gestion_almacen.controladores.UsuarioControlador#autenticarUsuario(Map)
20:31:17 DEBUG - Read "application/json;charset=UTF-8" to [{contrasena=3cc890a93fa2160c551414745f084c101a9a4be2d32d6b1b1c622d1a217dbbaa, correoElectronico=doba (truncated)...]
20:31:17 INFO  - Intento de autenticación para usuario: dobafad996@oziere.com
20:31:17 DEBUG - 
    select
        ue1_0.id,
        ue1_0.contrasena,
        ue1_0.correo_confirmado,
        ue1_0.correo_electronico,
        ue1_0.fecha_creacion,
        ue1_0.foto,
        ue1_0.google,
        ue1_0.movil,
        ue1_0.nombre_completo,
        ue1_0.rol_id 
    from
        usuarios ue1_0 
    where
        ue1_0.correo_electronico=?
20:31:17 DEBUG - 
    select
        re1_0.id,
        re1_0.nombre 
    from
        roles re1_0 
    where
        re1_0.id=?
20:31:18 INFO  - Autenticación exitosa para: dobafad996@oziere.com
20:31:18 DEBUG - Using 'application/json', given [*/*] and supported [application/json]
20:31:18 DEBUG - Writing [com.example.api_gestion_almacen.dtos.UsuarioDto@20fdf93f]
20:31:18 DEBUG - Completed 200 OK
20:32:00 DEBUG - GET "/api/usuarios/correo/palomitasverdes73@gmail.com", parameters={}
20:32:00 DEBUG - Mapped to com.example.api_gestion_almacen.controladores.UsuarioControlador#buscarPorCorreo(String)
20:32:00 INFO  - Buscando usuario por correo: palomitasverdes73@gmail.com
20:32:00 DEBUG - 
    select
        ue1_0.id,
        ue1_0.contrasena,
        ue1_0.correo_confirmado,
        ue1_0.correo_electronico,
        ue1_0.fecha_creacion,
        ue1_0.foto,
        ue1_0.google,
        ue1_0.movil,
        ue1_0.nombre_completo,
        ue1_0.rol_id 
    from
        usuarios ue1_0 
    where
        ue1_0.correo_electronico=?
20:32:01 DEBUG - 
    select
        re1_0.id,
        re1_0.nombre 
    from
        roles re1_0 
    where
        re1_0.id=?
20:32:01 INFO  - Usuario encontrado: palomitasverdes73@gmail.com
20:32:01 DEBUG - Using 'application/json', given [application/json] and supported [application/json]
20:32:01 DEBUG - Writing [com.example.api_gestion_almacen.dtos.UsuarioDto@16547c39]
20:32:01 DEBUG - Completed 200 OK
20:32:01 DEBUG - POST "/api/usuarios/autenticar", parameters={}
20:32:01 DEBUG - Mapped to com.example.api_gestion_almacen.controladores.UsuarioControlador#autenticarUsuario(Map)
20:32:01 DEBUG - Read "application/json;charset=UTF-8" to [{contrasena=3cc890a93fa2160c551414745f084c101a9a4be2d32d6b1b1c622d1a217dbbaa, correoElectronico=palo (truncated)...]
20:32:01 INFO  - Intento de autenticación para usuario: palomitasverdes73@gmail.com
20:32:01 DEBUG - 
    select
        ue1_0.id,
        ue1_0.contrasena,
        ue1_0.correo_confirmado,
        ue1_0.correo_electronico,
        ue1_0.fecha_creacion,
        ue1_0.foto,
        ue1_0.google,
        ue1_0.movil,
        ue1_0.nombre_completo,
        ue1_0.rol_id 
    from
        usuarios ue1_0 
    where
        ue1_0.correo_electronico=?
20:32:01 DEBUG - 
    select
        re1_0.id,
        re1_0.nombre 
    from
        roles re1_0 
    where
        re1_0.id=?
20:32:01 INFO  - Autenticación exitosa para: palomitasverdes73@gmail.com
20:32:01 DEBUG - Using 'application/json', given [*/*] and supported [application/json]
20:32:01 DEBUG - Writing [com.example.api_gestion_almacen.dtos.UsuarioDto@58eb3150]
20:32:01 DEBUG - Completed 200 OK
20:33:44 DEBUG - GET "/api/usuarios/correo/palomitasverdes73@gmail.com", parameters={}
20:33:44 DEBUG - Mapped to com.example.api_gestion_almacen.controladores.UsuarioControlador#buscarPorCorreo(String)
20:33:44 INFO  - Buscando usuario por correo: palomitasverdes73@gmail.com
20:33:44 DEBUG - 
    select
        ue1_0.id,
        ue1_0.contrasena,
        ue1_0.correo_confirmado,
        ue1_0.correo_electronico,
        ue1_0.fecha_creacion,
        ue1_0.foto,
        ue1_0.google,
        ue1_0.movil,
        ue1_0.nombre_completo,
        ue1_0.rol_id 
    from
        usuarios ue1_0 
    where
        ue1_0.correo_electronico=?
20:33:44 DEBUG - 
    select
        re1_0.id,
        re1_0.nombre 
    from
        roles re1_0 
    where
        re1_0.id=?
20:33:44 INFO  - Usuario encontrado: palomitasverdes73@gmail.com
20:33:44 DEBUG - Using 'application/json', given [application/json] and supported [application/json]
20:33:44 DEBUG - Writing [com.example.api_gestion_almacen.dtos.UsuarioDto@7241905a]
20:33:44 DEBUG - Completed 200 OK
20:33:44 DEBUG - POST "/api/usuarios/autenticar", parameters={}
20:33:44 DEBUG - Mapped to com.example.api_gestion_almacen.controladores.UsuarioControlador#autenticarUsuario(Map)
20:33:44 DEBUG - Read "application/json;charset=UTF-8" to [{contrasena=3cc890a93fa2160c551414745f084c101a9a4be2d32d6b1b1c622d1a217dbbaa, correoElectronico=palo (truncated)...]
20:33:44 INFO  - Intento de autenticación para usuario: palomitasverdes73@gmail.com
20:33:44 DEBUG - 
    select
        ue1_0.id,
        ue1_0.contrasena,
        ue1_0.correo_confirmado,
        ue1_0.correo_electronico,
        ue1_0.fecha_creacion,
        ue1_0.foto,
        ue1_0.google,
        ue1_0.movil,
        ue1_0.nombre_completo,
        ue1_0.rol_id 
    from
        usuarios ue1_0 
    where
        ue1_0.correo_electronico=?
20:33:44 DEBUG - 
    select
        re1_0.id,
        re1_0.nombre 
    from
        roles re1_0 
    where
        re1_0.id=?
20:33:45 INFO  - Autenticación exitosa para: palomitasverdes73@gmail.com
20:33:45 DEBUG - Using 'application/json', given [*/*] and supported [application/json]
20:33:45 DEBUG - Writing [com.example.api_gestion_almacen.dtos.UsuarioDto@4fd93e64]
20:33:45 DEBUG - Completed 200 OK
20:47:37 DEBUG - GET "/api/usuarios/correo/palomitasverdes73@gmail.com", parameters={}
20:47:37 DEBUG - Mapped to com.example.api_gestion_almacen.controladores.UsuarioControlador#buscarPorCorreo(String)
20:47:37 INFO  - Buscando usuario por correo: palomitasverdes73@gmail.com
20:47:37 DEBUG - 
    select
        ue1_0.id,
        ue1_0.contrasena,
        ue1_0.correo_confirmado,
        ue1_0.correo_electronico,
        ue1_0.fecha_creacion,
        ue1_0.foto,
        ue1_0.google,
        ue1_0.movil,
        ue1_0.nombre_completo,
        ue1_0.rol_id 
    from
        usuarios ue1_0 
    where
        ue1_0.correo_electronico=?
20:47:37 DEBUG - 
    select
        re1_0.id,
        re1_0.nombre 
    from
        roles re1_0 
    where
        re1_0.id=?
20:47:38 INFO  - Usuario encontrado: palomitasverdes73@gmail.com
20:47:38 DEBUG - Using 'application/json', given [application/json] and supported [application/json]
20:47:38 DEBUG - Writing [com.example.api_gestion_almacen.dtos.UsuarioDto@6d7e5899]
20:47:38 DEBUG - Completed 200 OK
20:47:38 DEBUG - POST "/api/usuarios/autenticar", parameters={}
20:47:38 DEBUG - Mapped to com.example.api_gestion_almacen.controladores.UsuarioControlador#autenticarUsuario(Map)
20:47:38 DEBUG - Read "application/json;charset=UTF-8" to [{contrasena=3cc890a93fa2160c551414745f084c101a9a4be2d32d6b1b1c622d1a217dbbaa, correoElectronico=palo (truncated)...]
20:47:38 INFO  - Intento de autenticación para usuario: palomitasverdes73@gmail.com
20:47:38 DEBUG - 
    select
        ue1_0.id,
        ue1_0.contrasena,
        ue1_0.correo_confirmado,
        ue1_0.correo_electronico,
        ue1_0.fecha_creacion,
        ue1_0.foto,
        ue1_0.google,
        ue1_0.movil,
        ue1_0.nombre_completo,
        ue1_0.rol_id 
    from
        usuarios ue1_0 
    where
        ue1_0.correo_electronico=?
20:47:38 DEBUG - 
    select
        re1_0.id,
        re1_0.nombre 
    from
        roles re1_0 
    where
        re1_0.id=?
20:47:38 INFO  - Autenticación exitosa para: palomitasverdes73@gmail.com
20:47:38 DEBUG - Using 'application/json', given [*/*] and supported [application/json]
20:47:38 DEBUG - Writing [com.example.api_gestion_almacen.dtos.UsuarioDto@40dbe3b2]
20:47:38 DEBUG - Completed 200 OK
20:47:47 DEBUG - GET "/api/usuarios/correo/dobafad996@oziere.com", parameters={}
20:47:47 DEBUG - Mapped to com.example.api_gestion_almacen.controladores.UsuarioControlador#buscarPorCorreo(String)
20:47:47 INFO  - Buscando usuario por correo: dobafad996@oziere.com
20:47:47 DEBUG - 
    select
        ue1_0.id,
        ue1_0.contrasena,
        ue1_0.correo_confirmado,
        ue1_0.correo_electronico,
        ue1_0.fecha_creacion,
        ue1_0.foto,
        ue1_0.google,
        ue1_0.movil,
        ue1_0.nombre_completo,
        ue1_0.rol_id 
    from
        usuarios ue1_0 
    where
        ue1_0.correo_electronico=?
20:47:48 DEBUG - 
    select
        re1_0.id,
        re1_0.nombre 
    from
        roles re1_0 
    where
        re1_0.id=?
20:47:48 INFO  - Usuario encontrado: dobafad996@oziere.com
20:47:48 DEBUG - Using 'application/json', given [application/json] and supported [application/json]
20:47:48 DEBUG - Writing [com.example.api_gestion_almacen.dtos.UsuarioDto@7bb6689]
20:47:48 DEBUG - Completed 200 OK
20:47:48 DEBUG - POST "/api/usuarios/autenticar", parameters={}
20:47:48 DEBUG - Mapped to com.example.api_gestion_almacen.controladores.UsuarioControlador#autenticarUsuario(Map)
20:47:48 DEBUG - Read "application/json;charset=UTF-8" to [{contrasena=3cc890a93fa2160c551414745f084c101a9a4be2d32d6b1b1c622d1a217dbbaa, correoElectronico=doba (truncated)...]
20:47:48 INFO  - Intento de autenticación para usuario: dobafad996@oziere.com
20:47:48 DEBUG - 
    select
        ue1_0.id,
        ue1_0.contrasena,
        ue1_0.correo_confirmado,
        ue1_0.correo_electronico,
        ue1_0.fecha_creacion,
        ue1_0.foto,
        ue1_0.google,
        ue1_0.movil,
        ue1_0.nombre_completo,
        ue1_0.rol_id 
    from
        usuarios ue1_0 
    where
        ue1_0.correo_electronico=?
20:47:48 DEBUG - 
    select
        re1_0.id,
        re1_0.nombre 
    from
        roles re1_0 
    where
        re1_0.id=?
20:47:48 INFO  - Autenticación exitosa para: dobafad996@oziere.com
20:47:48 DEBUG - Using 'application/json', given [*/*] and supported [application/json]
20:47:48 DEBUG - Writing [com.example.api_gestion_almacen.dtos.UsuarioDto@3015ce9c]
20:47:48 DEBUG - Completed 200 OK
20:48:05 DEBUG - GET "/api/usuarios/correo/boltaxmd@gmail.com", parameters={}
20:48:05 DEBUG - Mapped to com.example.api_gestion_almacen.controladores.UsuarioControlador#buscarPorCorreo(String)
20:48:05 INFO  - Buscando usuario por correo: boltaxmd@gmail.com
20:48:05 DEBUG - 
    select
        ue1_0.id,
        ue1_0.contrasena,
        ue1_0.correo_confirmado,
        ue1_0.correo_electronico,
        ue1_0.fecha_creacion,
        ue1_0.foto,
        ue1_0.google,
        ue1_0.movil,
        ue1_0.nombre_completo,
        ue1_0.rol_id 
    from
        usuarios ue1_0 
    where
        ue1_0.correo_electronico=?
20:48:05 DEBUG - 
    select
        re1_0.id,
        re1_0.nombre 
    from
        roles re1_0 
    where
        re1_0.id=?
20:48:05 INFO  - Usuario encontrado: boltaxmd@gmail.com
20:48:05 DEBUG - Using 'application/json', given [application/json] and supported [application/json]
20:48:05 DEBUG - Writing [com.example.api_gestion_almacen.dtos.UsuarioDto@3892bb21]
20:48:05 DEBUG - Completed 200 OK
20:48:30 DEBUG - GET "/api/usuarios/correo/dobafad996@oziere.com", parameters={}
20:48:30 DEBUG - Mapped to com.example.api_gestion_almacen.controladores.UsuarioControlador#buscarPorCorreo(String)
20:48:30 INFO  - Buscando usuario por correo: dobafad996@oziere.com
20:48:30 DEBUG - 
    select
        ue1_0.id,
        ue1_0.contrasena,
        ue1_0.correo_confirmado,
        ue1_0.correo_electronico,
        ue1_0.fecha_creacion,
        ue1_0.foto,
        ue1_0.google,
        ue1_0.movil,
        ue1_0.nombre_completo,
        ue1_0.rol_id 
    from
        usuarios ue1_0 
    where
        ue1_0.correo_electronico=?
20:48:30 DEBUG - 
    select
        re1_0.id,
        re1_0.nombre 
    from
        roles re1_0 
    where
        re1_0.id=?
20:48:30 INFO  - Usuario encontrado: dobafad996@oziere.com
20:48:30 DEBUG - Using 'application/json', given [application/json] and supported [application/json]
20:48:30 DEBUG - Writing [com.example.api_gestion_almacen.dtos.UsuarioDto@6ed060ec]
20:48:30 DEBUG - Completed 200 OK
20:49:21 DEBUG - POST "/api/usuarios/actualizarContrasena", parameters={}
20:49:21 DEBUG - Mapped to com.example.api_gestion_almacen.controladores.UsuarioControlador#actualizarContrasena(Map)
20:49:21 DEBUG - Read "application/json;charset=UTF-8" to [{nuevaContrasena=ef797c8118f02dfb649607dd5d3f8c7623048c9c063d532cc95c5ed7a898a64f, email=dobafad996@ (truncated)...]
20:49:21 INFO  - Iniciando actualización de contraseña para usuario: null
20:49:21 WARN  - Intento de actualización de contraseña con datos incompletos
20:49:21 DEBUG - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
20:49:21 DEBUG - Writing [{error=Correo electrónico y nueva contraseña son requeridos}]
20:49:21 DEBUG - Completed 400 BAD_REQUEST
20:50:57 DEBUG - GET "/api/usuarios/correo/dobafad996@oziere.com", parameters={}
20:50:57 DEBUG - Mapped to com.example.api_gestion_almacen.controladores.UsuarioControlador#buscarPorCorreo(String)
20:50:57 INFO  - Buscando usuario por correo: dobafad996@oziere.com
20:50:57 DEBUG - 
    select
        ue1_0.id,
        ue1_0.contrasena,
        ue1_0.correo_confirmado,
        ue1_0.correo_electronico,
        ue1_0.fecha_creacion,
        ue1_0.foto,
        ue1_0.google,
        ue1_0.movil,
        ue1_0.nombre_completo,
        ue1_0.rol_id 
    from
        usuarios ue1_0 
    where
        ue1_0.correo_electronico=?
20:50:57 DEBUG - 
    select
        re1_0.id,
        re1_0.nombre 
    from
        roles re1_0 
    where
        re1_0.id=?
20:50:57 INFO  - Usuario encontrado: dobafad996@oziere.com
20:50:57 DEBUG - Using 'application/json', given [application/json] and supported [application/json]
20:50:57 DEBUG - Writing [com.example.api_gestion_almacen.dtos.UsuarioDto@28aef655]
20:50:57 DEBUG - Completed 200 OK
20:51:41 DEBUG - POST "/api/usuarios/actualizarContrasena", parameters={}
20:51:41 DEBUG - Mapped to com.example.api_gestion_almacen.controladores.UsuarioControlador#actualizarContrasena(Map)
20:51:41 DEBUG - Read "application/json;charset=UTF-8" to [{nuevaContrasena=ef797c8118f02dfb649607dd5d3f8c7623048c9c063d532cc95c5ed7a898a64f, email=dobafad996@ (truncated)...]
20:51:41 INFO  - Iniciando actualización de contraseña para usuario: null
20:51:41 WARN  - Intento de actualización de contraseña con datos incompletos
20:51:41 DEBUG - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
20:51:41 DEBUG - Writing [{error=Correo electrónico y nueva contraseña son requeridos}]
20:51:41 DEBUG - Completed 400 BAD_REQUEST
21:05:24 DEBUG - GET "/api/usuarios/correo/dobafad996@oziere.com", parameters={}
21:05:24 DEBUG - Mapped to com.example.api_gestion_almacen.controladores.UsuarioControlador#buscarPorCorreo(String)
21:05:24 INFO  - Buscando usuario por correo: dobafad996@oziere.com
21:05:24 DEBUG - 
    select
        ue1_0.id,
        ue1_0.contrasena,
        ue1_0.correo_confirmado,
        ue1_0.correo_electronico,
        ue1_0.fecha_creacion,
        ue1_0.foto,
        ue1_0.google,
        ue1_0.movil,
        ue1_0.nombre_completo,
        ue1_0.rol_id 
    from
        usuarios ue1_0 
    where
        ue1_0.correo_electronico=?
21:05:24 DEBUG - 
    select
        re1_0.id,
        re1_0.nombre 
    from
        roles re1_0 
    where
        re1_0.id=?
21:05:24 INFO  - Usuario encontrado: dobafad996@oziere.com
21:05:24 DEBUG - Using 'application/json', given [application/json] and supported [application/json]
21:05:24 DEBUG - Writing [com.example.api_gestion_almacen.dtos.UsuarioDto@92aecb9]
21:05:24 DEBUG - Completed 200 OK
21:05:50 DEBUG - POST "/api/usuarios/actualizarContrasena", parameters={}
21:05:50 DEBUG - Mapped to com.example.api_gestion_almacen.controladores.UsuarioControlador#actualizarContrasena(Map)
21:05:50 DEBUG - Read "application/json;charset=UTF-8" to [{nuevaContrasena=3cc890a93fa2160c551414745f084c101a9a4be2d32d6b1b1c622d1a217dbbaa, correoElectronico (truncated)...]
21:05:50 INFO  - Iniciando actualización de contraseña para usuario: dobafad996@oziere.com
21:05:50 DEBUG - 
    select
        ue1_0.id,
        ue1_0.contrasena,
        ue1_0.correo_confirmado,
        ue1_0.correo_electronico,
        ue1_0.fecha_creacion,
        ue1_0.foto,
        ue1_0.google,
        ue1_0.movil,
        ue1_0.nombre_completo,
        ue1_0.rol_id 
    from
        usuarios ue1_0 
    where
        ue1_0.correo_electronico=?
21:05:50 DEBUG - 
    select
        re1_0.id,
        re1_0.nombre 
    from
        roles re1_0 
    where
        re1_0.id=?
21:05:51 DEBUG - 
    select
        ue1_0.id,
        ue1_0.contrasena,
        ue1_0.correo_confirmado,
        ue1_0.correo_electronico,
        ue1_0.fecha_creacion,
        ue1_0.foto,
        ue1_0.google,
        ue1_0.movil,
        ue1_0.nombre_completo,
        r1_0.id,
        r1_0.nombre 
    from
        usuarios ue1_0 
    left join
        roles r1_0 
            on r1_0.id=ue1_0.rol_id 
    where
        ue1_0.id=?
21:05:51 INFO  - Contraseña actualizada exitosamente para: dobafad996@oziere.com
21:05:51 DEBUG - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
21:05:51 DEBUG - Writing [{mensaje=Contraseña actualizada exitosamente}]
21:05:51 DEBUG - Completed 200 OK
21:06:08 DEBUG - GET "/api/usuarios/correo/dobafad996@oziere.com", parameters={}
21:06:08 DEBUG - Mapped to com.example.api_gestion_almacen.controladores.UsuarioControlador#buscarPorCorreo(String)
21:06:08 INFO  - Buscando usuario por correo: dobafad996@oziere.com
21:06:08 DEBUG - 
    select
        ue1_0.id,
        ue1_0.contrasena,
        ue1_0.correo_confirmado,
        ue1_0.correo_electronico,
        ue1_0.fecha_creacion,
        ue1_0.foto,
        ue1_0.google,
        ue1_0.movil,
        ue1_0.nombre_completo,
        ue1_0.rol_id 
    from
        usuarios ue1_0 
    where
        ue1_0.correo_electronico=?
21:06:08 DEBUG - 
    select
        re1_0.id,
        re1_0.nombre 
    from
        roles re1_0 
    where
        re1_0.id=?
21:06:08 INFO  - Usuario encontrado: dobafad996@oziere.com
21:06:08 DEBUG - Using 'application/json', given [application/json] and supported [application/json]
21:06:08 DEBUG - Writing [com.example.api_gestion_almacen.dtos.UsuarioDto@3cf2a531]
21:06:08 DEBUG - Completed 200 OK
21:06:08 DEBUG - POST "/api/usuarios/autenticar", parameters={}
21:06:08 DEBUG - Mapped to com.example.api_gestion_almacen.controladores.UsuarioControlador#autenticarUsuario(Map)
21:06:08 DEBUG - Read "application/json;charset=UTF-8" to [{contrasena=3cc890a93fa2160c551414745f084c101a9a4be2d32d6b1b1c622d1a217dbbaa, correoElectronico=doba (truncated)...]
21:06:08 INFO  - Intento de autenticación para usuario: dobafad996@oziere.com
21:06:08 DEBUG - 
    select
        ue1_0.id,
        ue1_0.contrasena,
        ue1_0.correo_confirmado,
        ue1_0.correo_electronico,
        ue1_0.fecha_creacion,
        ue1_0.foto,
        ue1_0.google,
        ue1_0.movil,
        ue1_0.nombre_completo,
        ue1_0.rol_id 
    from
        usuarios ue1_0 
    where
        ue1_0.correo_electronico=?
21:06:08 DEBUG - 
    select
        re1_0.id,
        re1_0.nombre 
    from
        roles re1_0 
    where
        re1_0.id=?
21:06:08 INFO  - Autenticación exitosa para: dobafad996@oziere.com
21:06:08 DEBUG - Using 'application/json', given [*/*] and supported [application/json]
21:06:08 DEBUG - Writing [com.example.api_gestion_almacen.dtos.UsuarioDto@195429db]
21:06:08 DEBUG - Completed 200 OK
21:06:27 DEBUG - GET "/api/usuarios/correo/boltaxmd@gmail.com", parameters={}
21:06:27 DEBUG - Mapped to com.example.api_gestion_almacen.controladores.UsuarioControlador#buscarPorCorreo(String)
21:06:27 INFO  - Buscando usuario por correo: boltaxmd@gmail.com
21:06:27 DEBUG - 
    select
        ue1_0.id,
        ue1_0.contrasena,
        ue1_0.correo_confirmado,
        ue1_0.correo_electronico,
        ue1_0.fecha_creacion,
        ue1_0.foto,
        ue1_0.google,
        ue1_0.movil,
        ue1_0.nombre_completo,
        ue1_0.rol_id 
    from
        usuarios ue1_0 
    where
        ue1_0.correo_electronico=?
21:06:27 DEBUG - 
    select
        re1_0.id,
        re1_0.nombre 
    from
        roles re1_0 
    where
        re1_0.id=?
21:06:27 INFO  - Usuario encontrado: boltaxmd@gmail.com
21:06:27 DEBUG - Using 'application/json', given [application/json] and supported [application/json]
21:06:27 DEBUG - Writing [com.example.api_gestion_almacen.dtos.UsuarioDto@27c8a7f2]
21:06:27 DEBUG - Completed 200 OK
21:06:32 DEBUG - GET "/api/usuarios/correo/palomitasverdes73@gmail.com", parameters={}
21:06:32 DEBUG - Mapped to com.example.api_gestion_almacen.controladores.UsuarioControlador#buscarPorCorreo(String)
21:06:32 INFO  - Buscando usuario por correo: palomitasverdes73@gmail.com
21:06:32 DEBUG - 
    select
        ue1_0.id,
        ue1_0.contrasena,
        ue1_0.correo_confirmado,
        ue1_0.correo_electronico,
        ue1_0.fecha_creacion,
        ue1_0.foto,
        ue1_0.google,
        ue1_0.movil,
        ue1_0.nombre_completo,
        ue1_0.rol_id 
    from
        usuarios ue1_0 
    where
        ue1_0.correo_electronico=?
21:06:32 DEBUG - 
    select
        re1_0.id,
        re1_0.nombre 
    from
        roles re1_0 
    where
        re1_0.id=?
21:06:32 INFO  - Usuario encontrado: palomitasverdes73@gmail.com
21:06:32 DEBUG - Using 'application/json', given [application/json] and supported [application/json]
21:06:32 DEBUG - Writing [com.example.api_gestion_almacen.dtos.UsuarioDto@8bc130f]
21:06:32 DEBUG - Completed 200 OK
21:06:32 DEBUG - POST "/api/usuarios/autenticar", parameters={}
21:06:32 DEBUG - Mapped to com.example.api_gestion_almacen.controladores.UsuarioControlador#autenticarUsuario(Map)
21:06:32 DEBUG - Read "application/json;charset=UTF-8" to [{contrasena=3cc890a93fa2160c551414745f084c101a9a4be2d32d6b1b1c622d1a217dbbaa, correoElectronico=palo (truncated)...]
21:06:32 INFO  - Intento de autenticación para usuario: palomitasverdes73@gmail.com
21:06:32 DEBUG - 
    select
        ue1_0.id,
        ue1_0.contrasena,
        ue1_0.correo_confirmado,
        ue1_0.correo_electronico,
        ue1_0.fecha_creacion,
        ue1_0.foto,
        ue1_0.google,
        ue1_0.movil,
        ue1_0.nombre_completo,
        ue1_0.rol_id 
    from
        usuarios ue1_0 
    where
        ue1_0.correo_electronico=?
21:06:32 DEBUG - 
    select
        re1_0.id,
        re1_0.nombre 
    from
        roles re1_0 
    where
        re1_0.id=?
21:06:32 INFO  - Autenticación exitosa para: palomitasverdes73@gmail.com
21:06:32 DEBUG - Using 'application/json', given [*/*] and supported [application/json]
21:06:32 DEBUG - Writing [com.example.api_gestion_almacen.dtos.UsuarioDto@27bef98d]
21:06:32 DEBUG - Completed 200 OK
21:06:34 DEBUG - GET "/api/usuarios", parameters={}
21:06:34 DEBUG - Mapped to com.example.api_gestion_almacen.controladores.UsuarioControlador#obtenerTodosLosUsuarios()
21:06:34 INFO  - Obteniendo lista de todos los usuarios
21:06:34 DEBUG - 
    select
        ue1_0.id,
        ue1_0.contrasena,
        ue1_0.correo_confirmado,
        ue1_0.correo_electronico,
        ue1_0.fecha_creacion,
        ue1_0.foto,
        ue1_0.google,
        ue1_0.movil,
        ue1_0.nombre_completo,
        ue1_0.rol_id 
    from
        usuarios ue1_0
21:06:38 DEBUG - 
    select
        re1_0.id,
        re1_0.nombre 
    from
        roles re1_0 
    where
        re1_0.id=?
21:06:38 DEBUG - 
    select
        re1_0.id,
        re1_0.nombre 
    from
        roles re1_0 
    where
        re1_0.id=?
21:06:38 DEBUG - 
    select
        re1_0.id,
        re1_0.nombre 
    from
        roles re1_0 
    where
        re1_0.id=?
21:06:39 DEBUG - 
    select
        re1_0.id,
        re1_0.nombre 
    from
        roles re1_0 
    where
        re1_0.id=?
21:06:39 INFO  - Total de usuarios encontrados: 38
21:06:39 DEBUG - Using 'application/json', given [application/json] and supported [application/json]
21:06:39 DEBUG - Writing [[com.example.api_gestion_almacen.dtos.UsuarioDto@bd97599, com.example.api_gestion_almacen.dtos.Usuar (truncated)...]
21:06:39 DEBUG - Completed 200 OK
21:06:40 DEBUG - GET "/api/usuarios", parameters={}
21:06:40 DEBUG - Mapped to com.example.api_gestion_almacen.controladores.UsuarioControlador#obtenerTodosLosUsuarios()
21:06:40 INFO  - Obteniendo lista de todos los usuarios
21:06:40 DEBUG - 
    select
        ue1_0.id,
        ue1_0.contrasena,
        ue1_0.correo_confirmado,
        ue1_0.correo_electronico,
        ue1_0.fecha_creacion,
        ue1_0.foto,
        ue1_0.google,
        ue1_0.movil,
        ue1_0.nombre_completo,
        ue1_0.rol_id 
    from
        usuarios ue1_0
21:06:44 DEBUG - 
    select
        re1_0.id,
        re1_0.nombre 
    from
        roles re1_0 
    where
        re1_0.id=?
21:06:44 DEBUG - 
    select
        re1_0.id,
        re1_0.nombre 
    from
        roles re1_0 
    where
        re1_0.id=?
21:06:44 DEBUG - 
    select
        re1_0.id,
        re1_0.nombre 
    from
        roles re1_0 
    where
        re1_0.id=?
21:06:44 DEBUG - 
    select
        re1_0.id,
        re1_0.nombre 
    from
        roles re1_0 
    where
        re1_0.id=?
21:06:44 INFO  - Total de usuarios encontrados: 38
21:06:44 DEBUG - Using 'application/json', given [application/json] and supported [application/json]
21:06:44 DEBUG - Writing [[com.example.api_gestion_almacen.dtos.UsuarioDto@33e3e46a, com.example.api_gestion_almacen.dtos.Usua (truncated)...]
21:06:44 DEBUG - Completed 200 OK
21:06:59 DEBUG - PUT "/api/usuarios/18", parameters={}
21:06:59 DEBUG - Mapped to com.example.api_gestion_almacen.controladores.UsuarioControlador#actualizarUsuario(Long, CrearUsuDto)
21:06:59 DEBUG - Read "application/json;charset=UTF-8" to [CrearUsuDto{nombreCompleto='ggg', movil='612345678', correoElectronico='ggggggggggA@gmail.com', rolI (truncated)...]
21:06:59 INFO  - Iniciando actualización de usuario con ID: 18
21:06:59 DEBUG - Datos de actualización: CrearUsuDto{nombreCompleto='ggg', movil='612345678', correoElectronico='ggggggggggA@gmail.com', rolId=1, contrasena='[PROTECTED]', foto=null}
21:06:59 DEBUG - 
    select
        ue1_0.id,
        ue1_0.contrasena,
        ue1_0.correo_confirmado,
        ue1_0.correo_electronico,
        ue1_0.fecha_creacion,
        ue1_0.foto,
        ue1_0.google,
        ue1_0.movil,
        ue1_0.nombre_completo,
        r1_0.id,
        r1_0.nombre 
    from
        usuarios ue1_0 
    left join
        roles r1_0 
            on r1_0.id=ue1_0.rol_id 
    where
        ue1_0.id=?
21:07:00 DEBUG - 
    select
        ue1_0.id,
        ue1_0.contrasena,
        ue1_0.correo_confirmado,
        ue1_0.correo_electronico,
        ue1_0.fecha_creacion,
        ue1_0.foto,
        ue1_0.google,
        ue1_0.movil,
        ue1_0.nombre_completo,
        ue1_0.rol_id 
    from
        usuarios ue1_0 
    where
        ue1_0.correo_electronico=?
21:07:00 DEBUG - 
    select
        re1_0.id,
        re1_0.nombre 
    from
        roles re1_0 
    where
        re1_0.id=?
21:07:01 DEBUG - 
    select
        ue1_0.id,
        ue1_0.contrasena,
        ue1_0.correo_confirmado,
        ue1_0.correo_electronico,
        ue1_0.fecha_creacion,
        ue1_0.foto,
        ue1_0.google,
        ue1_0.movil,
        ue1_0.nombre_completo,
        r1_0.id,
        r1_0.nombre 
    from
        usuarios ue1_0 
    left join
        roles r1_0 
            on r1_0.id=ue1_0.rol_id 
    where
        ue1_0.id=?
21:07:01 DEBUG - 
    update
        usuarios 
    set
        contrasena=?,
        correo_confirmado=?,
        correo_electronico=?,
        foto=?,
        google=?,
        movil=?,
        nombre_completo=?,
        rol_id=? 
    where
        id=?
21:07:02 INFO  - Usuario actualizado exitosamente. ID: 18
21:07:02 DEBUG - Using 'application/json', given [*/*] and supported [application/json]
21:07:02 DEBUG - Writing [CrearUsuDto{nombreCompleto='ggg', movil='612345678', correoElectronico='ggggggggggA@gmail.com', rolI (truncated)...]
21:07:02 DEBUG - Completed 200 OK
21:07:02 DEBUG - GET "/api/usuarios", parameters={}
21:07:02 DEBUG - Mapped to com.example.api_gestion_almacen.controladores.UsuarioControlador#obtenerTodosLosUsuarios()
21:07:02 INFO  - Obteniendo lista de todos los usuarios
21:07:02 DEBUG - 
    select
        ue1_0.id,
        ue1_0.contrasena,
        ue1_0.correo_confirmado,
        ue1_0.correo_electronico,
        ue1_0.fecha_creacion,
        ue1_0.foto,
        ue1_0.google,
        ue1_0.movil,
        ue1_0.nombre_completo,
        ue1_0.rol_id 
    from
        usuarios ue1_0
21:07:05 DEBUG - 
    select
        re1_0.id,
        re1_0.nombre 
    from
        roles re1_0 
    where
        re1_0.id=?
21:07:05 DEBUG - 
    select
        re1_0.id,
        re1_0.nombre 
    from
        roles re1_0 
    where
        re1_0.id=?
21:07:05 DEBUG - 
    select
        re1_0.id,
        re1_0.nombre 
    from
        roles re1_0 
    where
        re1_0.id=?
21:07:05 DEBUG - 
    select
        re1_0.id,
        re1_0.nombre 
    from
        roles re1_0 
    where
        re1_0.id=?
21:07:06 INFO  - Total de usuarios encontrados: 38
21:07:06 DEBUG - Using 'application/json', given [application/json] and supported [application/json]
21:07:06 DEBUG - Writing [[com.example.api_gestion_almacen.dtos.UsuarioDto@632caf90, com.example.api_gestion_almacen.dtos.Usua (truncated)...]
21:07:06 DEBUG - Completed 200 OK
21:07:06 DEBUG - GET "/api/usuarios", parameters={}
21:07:06 DEBUG - Mapped to com.example.api_gestion_almacen.controladores.UsuarioControlador#obtenerTodosLosUsuarios()
21:07:06 INFO  - Obteniendo lista de todos los usuarios
21:07:06 DEBUG - 
    select
        ue1_0.id,
        ue1_0.contrasena,
        ue1_0.correo_confirmado,
        ue1_0.correo_electronico,
        ue1_0.fecha_creacion,
        ue1_0.foto,
        ue1_0.google,
        ue1_0.movil,
        ue1_0.nombre_completo,
        ue1_0.rol_id 
    from
        usuarios ue1_0
21:07:10 DEBUG - 
    select
        re1_0.id,
        re1_0.nombre 
    from
        roles re1_0 
    where
        re1_0.id=?
21:07:10 DEBUG - 
    select
        re1_0.id,
        re1_0.nombre 
    from
        roles re1_0 
    where
        re1_0.id=?
21:07:10 DEBUG - 
    select
        re1_0.id,
        re1_0.nombre 
    from
        roles re1_0 
    where
        re1_0.id=?
21:07:10 DEBUG - 
    select
        re1_0.id,
        re1_0.nombre 
    from
        roles re1_0 
    where
        re1_0.id=?
21:07:10 INFO  - Total de usuarios encontrados: 38
21:07:10 DEBUG - Using 'application/json', given [application/json] and supported [application/json]
21:07:10 DEBUG - Writing [[com.example.api_gestion_almacen.dtos.UsuarioDto@36895b30, com.example.api_gestion_almacen.dtos.Usua (truncated)...]
21:07:10 DEBUG - Completed 200 OK
21:07:18 DEBUG - DELETE "/api/usuarios/58", parameters={}
21:07:18 DEBUG - Mapped to com.example.api_gestion_almacen.controladores.UsuarioControlador#eliminarUsuario(Long)
21:07:18 INFO  - Iniciando eliminación de usuario con ID: 58
21:07:18 DEBUG - 
    select
        ue1_0.id,
        ue1_0.contrasena,
        ue1_0.correo_confirmado,
        ue1_0.correo_electronico,
        ue1_0.fecha_creacion,
        ue1_0.foto,
        ue1_0.google,
        ue1_0.movil,
        ue1_0.nombre_completo,
        r1_0.id,
        r1_0.nombre 
    from
        usuarios ue1_0 
    left join
        roles r1_0 
            on r1_0.id=ue1_0.rol_id 
    where
        ue1_0.id=?
21:07:18 DEBUG - 
    delete 
    from
        usuarios 
    where
        id=?
21:07:19 INFO  - Usuario eliminado exitosamente. ID: 58
21:07:19 DEBUG - Using 'application/json', given [application/json] and supported [*/*]
21:07:19 DEBUG - Completed 200 OK
21:07:19 DEBUG - GET "/api/usuarios", parameters={}
21:07:19 DEBUG - Mapped to com.example.api_gestion_almacen.controladores.UsuarioControlador#obtenerTodosLosUsuarios()
21:07:19 INFO  - Obteniendo lista de todos los usuarios
21:07:19 DEBUG - 
    select
        ue1_0.id,
        ue1_0.contrasena,
        ue1_0.correo_confirmado,
        ue1_0.correo_electronico,
        ue1_0.fecha_creacion,
        ue1_0.foto,
        ue1_0.google,
        ue1_0.movil,
        ue1_0.nombre_completo,
        ue1_0.rol_id 
    from
        usuarios ue1_0
21:07:22 DEBUG - 
    select
        re1_0.id,
        re1_0.nombre 
    from
        roles re1_0 
    where
        re1_0.id=?
21:07:22 DEBUG - 
    select
        re1_0.id,
        re1_0.nombre 
    from
        roles re1_0 
    where
        re1_0.id=?
21:07:23 DEBUG - 
    select
        re1_0.id,
        re1_0.nombre 
    from
        roles re1_0 
    where
        re1_0.id=?
21:07:23 DEBUG - 
    select
        re1_0.id,
        re1_0.nombre 
    from
        roles re1_0 
    where
        re1_0.id=?
21:07:23 INFO  - Total de usuarios encontrados: 37
21:07:23 DEBUG - Using 'application/json', given [application/json] and supported [application/json]
21:07:23 DEBUG - Writing [[com.example.api_gestion_almacen.dtos.UsuarioDto@81e3ba9, com.example.api_gestion_almacen.dtos.Usuar (truncated)...]
21:07:23 DEBUG - Completed 200 OK
21:07:23 DEBUG - GET "/api/usuarios", parameters={}
21:07:23 DEBUG - Mapped to com.example.api_gestion_almacen.controladores.UsuarioControlador#obtenerTodosLosUsuarios()
21:07:23 INFO  - Obteniendo lista de todos los usuarios
21:07:24 DEBUG - 
    select
        ue1_0.id,
        ue1_0.contrasena,
        ue1_0.correo_confirmado,
        ue1_0.correo_electronico,
        ue1_0.fecha_creacion,
        ue1_0.foto,
        ue1_0.google,
        ue1_0.movil,
        ue1_0.nombre_completo,
        ue1_0.rol_id 
    from
        usuarios ue1_0
21:07:28 DEBUG - 
    select
        re1_0.id,
        re1_0.nombre 
    from
        roles re1_0 
    where
        re1_0.id=?
21:07:28 DEBUG - 
    select
        re1_0.id,
        re1_0.nombre 
    from
        roles re1_0 
    where
        re1_0.id=?
21:07:28 DEBUG - 
    select
        re1_0.id,
        re1_0.nombre 
    from
        roles re1_0 
    where
        re1_0.id=?
21:07:28 DEBUG - 
    select
        re1_0.id,
        re1_0.nombre 
    from
        roles re1_0 
    where
        re1_0.id=?
21:07:29 INFO  - Total de usuarios encontrados: 37
21:07:29 DEBUG - Using 'application/json', given [application/json] and supported [application/json]
21:07:29 DEBUG - Writing [[com.example.api_gestion_almacen.dtos.UsuarioDto@628c13ae, com.example.api_gestion_almacen.dtos.Usua (truncated)...]
21:07:29 DEBUG - Completed 200 OK
21:07:43 DEBUG - POST "/api/usuarios", parameters={}
21:07:43 DEBUG - Mapped to com.example.api_gestion_almacen.controladores.UsuarioControlador#crearUsuario(CrearUsuDto)
21:07:43 DEBUG - Read "application/json;charset=UTF-8" to [CrearUsuDto{nombreCompleto='rghdrg', movil='612345678', correoElectronico='6666673@gmail.com', rolId (truncated)...]
21:07:43 INFO  - Iniciando creación de usuario: 6666673@gmail.com
21:07:43 DEBUG - Datos recibidos: CrearUsuDto{nombreCompleto='rghdrg', movil='612345678', correoElectronico='6666673@gmail.com', rolId=2, contrasena='[PROTECTED]', foto=null}
21:07:43 DEBUG - 
    select
        ue1_0.id,
        ue1_0.contrasena,
        ue1_0.correo_confirmado,
        ue1_0.correo_electronico,
        ue1_0.fecha_creacion,
        ue1_0.foto,
        ue1_0.google,
        ue1_0.movil,
        ue1_0.nombre_completo,
        ue1_0.rol_id 
    from
        usuarios ue1_0 
    where
        ue1_0.correo_electronico=?
21:07:43 DEBUG - 
    select
        re1_0.id,
        re1_0.nombre 
    from
        roles re1_0 
    where
        re1_0.id=?
21:07:44 DEBUG - 
    insert 
    into
        usuarios
        (contrasena, correo_confirmado, correo_electronico, foto, google, movil, nombre_completo, rol_id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?)
21:07:44 INFO  - Usuario creado exitosamente: 6666673@gmail.com
21:07:44 DEBUG - Using 'application/json', given [*/*] and supported [application/json]
21:07:44 DEBUG - Writing [CrearUsuDto{nombreCompleto='rghdrg', movil='612345678', correoElectronico='6666673@gmail.com', rolId (truncated)...]
21:07:44 DEBUG - Completed 201 CREATED
21:07:44 DEBUG - GET "/api/usuarios", parameters={}
21:07:44 DEBUG - Mapped to com.example.api_gestion_almacen.controladores.UsuarioControlador#obtenerTodosLosUsuarios()
21:07:44 INFO  - Obteniendo lista de todos los usuarios
21:07:44 DEBUG - 
    select
        ue1_0.id,
        ue1_0.contrasena,
        ue1_0.correo_confirmado,
        ue1_0.correo_electronico,
        ue1_0.fecha_creacion,
        ue1_0.foto,
        ue1_0.google,
        ue1_0.movil,
        ue1_0.nombre_completo,
        ue1_0.rol_id 
    from
        usuarios ue1_0
21:07:49 DEBUG - 
    select
        re1_0.id,
        re1_0.nombre 
    from
        roles re1_0 
    where
        re1_0.id=?
21:07:49 DEBUG - 
    select
        re1_0.id,
        re1_0.nombre 
    from
        roles re1_0 
    where
        re1_0.id=?
21:07:50 DEBUG - 
    select
        re1_0.id,
        re1_0.nombre 
    from
        roles re1_0 
    where
        re1_0.id=?
21:07:50 DEBUG - 
    select
        re1_0.id,
        re1_0.nombre 
    from
        roles re1_0 
    where
        re1_0.id=?
21:07:50 INFO  - Total de usuarios encontrados: 38
21:07:50 DEBUG - Using 'application/json', given [application/json] and supported [application/json]
21:07:50 DEBUG - Writing [[com.example.api_gestion_almacen.dtos.UsuarioDto@37e4d4d5, com.example.api_gestion_almacen.dtos.Usua (truncated)...]
21:07:50 DEBUG - Completed 200 OK
21:07:50 DEBUG - GET "/api/usuarios", parameters={}
21:07:50 DEBUG - Mapped to com.example.api_gestion_almacen.controladores.UsuarioControlador#obtenerTodosLosUsuarios()
21:07:50 INFO  - Obteniendo lista de todos los usuarios
21:07:50 DEBUG - 
    select
        ue1_0.id,
        ue1_0.contrasena,
        ue1_0.correo_confirmado,
        ue1_0.correo_electronico,
        ue1_0.fecha_creacion,
        ue1_0.foto,
        ue1_0.google,
        ue1_0.movil,
        ue1_0.nombre_completo,
        ue1_0.rol_id 
    from
        usuarios ue1_0
21:07:55 DEBUG - 
    select
        re1_0.id,
        re1_0.nombre 
    from
        roles re1_0 
    where
        re1_0.id=?
21:07:56 DEBUG - 
    select
        re1_0.id,
        re1_0.nombre 
    from
        roles re1_0 
    where
        re1_0.id=?
21:07:56 DEBUG - 
    select
        re1_0.id,
        re1_0.nombre 
    from
        roles re1_0 
    where
        re1_0.id=?
21:07:56 DEBUG - 
    select
        re1_0.id,
        re1_0.nombre 
    from
        roles re1_0 
    where
        re1_0.id=?
21:07:56 INFO  - Total de usuarios encontrados: 38
21:07:56 DEBUG - Using 'application/json', given [application/json] and supported [application/json]
21:07:56 DEBUG - Writing [[com.example.api_gestion_almacen.dtos.UsuarioDto@3270e816, com.example.api_gestion_almacen.dtos.Usua (truncated)...]
21:07:56 DEBUG - Completed 200 OK
21:09:03 DEBUG - GET "/api/usuarios/correo/dobafad996@oziere.com", parameters={}
21:09:03 DEBUG - Mapped to com.example.api_gestion_almacen.controladores.UsuarioControlador#buscarPorCorreo(String)
21:09:03 INFO  - Buscando usuario por correo: dobafad996@oziere.com
21:09:03 DEBUG - 
    select
        ue1_0.id,
        ue1_0.contrasena,
        ue1_0.correo_confirmado,
        ue1_0.correo_electronico,
        ue1_0.fecha_creacion,
        ue1_0.foto,
        ue1_0.google,
        ue1_0.movil,
        ue1_0.nombre_completo,
        ue1_0.rol_id 
    from
        usuarios ue1_0 
    where
        ue1_0.correo_electronico=?
21:09:03 DEBUG - 
    select
        re1_0.id,
        re1_0.nombre 
    from
        roles re1_0 
    where
        re1_0.id=?
21:09:03 INFO  - Usuario encontrado: dobafad996@oziere.com
21:09:03 DEBUG - Using 'application/json', given [application/json] and supported [application/json]
21:09:03 DEBUG - Writing [com.example.api_gestion_almacen.dtos.UsuarioDto@58150214]
21:09:03 DEBUG - Completed 200 OK
21:09:03 DEBUG - POST "/api/usuarios/autenticar", parameters={}
21:09:03 DEBUG - Mapped to com.example.api_gestion_almacen.controladores.UsuarioControlador#autenticarUsuario(Map)
21:09:03 DEBUG - Read "application/json;charset=UTF-8" to [{contrasena=3cc890a93fa2160c551414745f084c101a9a4be2d32d6b1b1c622d1a217dbbaa, correoElectronico=doba (truncated)...]
21:09:03 INFO  - Intento de autenticación para usuario: dobafad996@oziere.com
21:09:03 DEBUG - 
    select
        ue1_0.id,
        ue1_0.contrasena,
        ue1_0.correo_confirmado,
        ue1_0.correo_electronico,
        ue1_0.fecha_creacion,
        ue1_0.foto,
        ue1_0.google,
        ue1_0.movil,
        ue1_0.nombre_completo,
        ue1_0.rol_id 
    from
        usuarios ue1_0 
    where
        ue1_0.correo_electronico=?
21:09:03 DEBUG - 
    select
        re1_0.id,
        re1_0.nombre 
    from
        roles re1_0 
    where
        re1_0.id=?
21:09:03 INFO  - Autenticación exitosa para: dobafad996@oziere.com
21:09:03 DEBUG - Using 'application/json', given [*/*] and supported [application/json]
21:09:03 DEBUG - Writing [com.example.api_gestion_almacen.dtos.UsuarioDto@6ee6ac9e]
21:09:03 DEBUG - Completed 200 OK
21:09:11 DEBUG - GET "/api/usuarios/correo/boltaxmd@gmail.com", parameters={}
21:09:11 DEBUG - Mapped to com.example.api_gestion_almacen.controladores.UsuarioControlador#buscarPorCorreo(String)
21:09:11 INFO  - Buscando usuario por correo: boltaxmd@gmail.com
21:09:11 DEBUG - 
    select
        ue1_0.id,
        ue1_0.contrasena,
        ue1_0.correo_confirmado,
        ue1_0.correo_electronico,
        ue1_0.fecha_creacion,
        ue1_0.foto,
        ue1_0.google,
        ue1_0.movil,
        ue1_0.nombre_completo,
        ue1_0.rol_id 
    from
        usuarios ue1_0 
    where
        ue1_0.correo_electronico=?
21:09:11 DEBUG - 
    select
        re1_0.id,
        re1_0.nombre 
    from
        roles re1_0 
    where
        re1_0.id=?
21:09:12 INFO  - Usuario encontrado: boltaxmd@gmail.com
21:09:12 DEBUG - Using 'application/json', given [application/json] and supported [application/json]
21:09:12 DEBUG - Writing [com.example.api_gestion_almacen.dtos.UsuarioDto@6778e1e6]
21:09:12 DEBUG - Completed 200 OK
21:09:21 DEBUG - GET "/api/usuarios/correo/dobafad996@oziere.com", parameters={}
21:09:21 DEBUG - Mapped to com.example.api_gestion_almacen.controladores.UsuarioControlador#buscarPorCorreo(String)
21:09:21 INFO  - Buscando usuario por correo: dobafad996@oziere.com
21:09:21 DEBUG - 
    select
        ue1_0.id,
        ue1_0.contrasena,
        ue1_0.correo_confirmado,
        ue1_0.correo_electronico,
        ue1_0.fecha_creacion,
        ue1_0.foto,
        ue1_0.google,
        ue1_0.movil,
        ue1_0.nombre_completo,
        ue1_0.rol_id 
    from
        usuarios ue1_0 
    where
        ue1_0.correo_electronico=?
21:09:21 DEBUG - 
    select
        re1_0.id,
        re1_0.nombre 
    from
        roles re1_0 
    where
        re1_0.id=?
21:09:21 INFO  - Usuario encontrado: dobafad996@oziere.com
21:09:21 DEBUG - Using 'application/json', given [application/json] and supported [application/json]
21:09:21 DEBUG - Writing [com.example.api_gestion_almacen.dtos.UsuarioDto@70e953e3]
21:09:21 DEBUG - Completed 200 OK
21:09:57 DEBUG - POST "/api/usuarios/actualizarContrasena", parameters={}
21:09:57 DEBUG - Mapped to com.example.api_gestion_almacen.controladores.UsuarioControlador#actualizarContrasena(Map)
21:09:57 DEBUG - Read "application/json;charset=UTF-8" to [{nuevaContrasena=ef797c8118f02dfb649607dd5d3f8c7623048c9c063d532cc95c5ed7a898a64f, correoElectronico (truncated)...]
21:09:57 INFO  - Iniciando actualización de contraseña para usuario: dobafad996@oziere.com
21:09:57 DEBUG - 
    select
        ue1_0.id,
        ue1_0.contrasena,
        ue1_0.correo_confirmado,
        ue1_0.correo_electronico,
        ue1_0.fecha_creacion,
        ue1_0.foto,
        ue1_0.google,
        ue1_0.movil,
        ue1_0.nombre_completo,
        ue1_0.rol_id 
    from
        usuarios ue1_0 
    where
        ue1_0.correo_electronico=?
21:09:57 DEBUG - 
    select
        re1_0.id,
        re1_0.nombre 
    from
        roles re1_0 
    where
        re1_0.id=?
21:09:57 DEBUG - 
    select
        ue1_0.id,
        ue1_0.contrasena,
        ue1_0.correo_confirmado,
        ue1_0.correo_electronico,
        ue1_0.fecha_creacion,
        ue1_0.foto,
        ue1_0.google,
        ue1_0.movil,
        ue1_0.nombre_completo,
        r1_0.id,
        r1_0.nombre 
    from
        usuarios ue1_0 
    left join
        roles r1_0 
            on r1_0.id=ue1_0.rol_id 
    where
        ue1_0.id=?
21:09:58 DEBUG - 
    update
        usuarios 
    set
        contrasena=?,
        correo_confirmado=?,
        correo_electronico=?,
        foto=?,
        google=?,
        movil=?,
        nombre_completo=?,
        rol_id=? 
    where
        id=?
21:09:58 INFO  - Contraseña actualizada exitosamente para: dobafad996@oziere.com
21:09:58 DEBUG - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
21:09:58 DEBUG - Writing [{mensaje=Contraseña actualizada exitosamente}]
21:09:58 DEBUG - Completed 200 OK
21:10:06 DEBUG - GET "/api/usuarios/correo/dobafad996@oziere.com", parameters={}
21:10:06 DEBUG - Mapped to com.example.api_gestion_almacen.controladores.UsuarioControlador#buscarPorCorreo(String)
21:10:06 INFO  - Buscando usuario por correo: dobafad996@oziere.com
21:10:06 DEBUG - 
    select
        ue1_0.id,
        ue1_0.contrasena,
        ue1_0.correo_confirmado,
        ue1_0.correo_electronico,
        ue1_0.fecha_creacion,
        ue1_0.foto,
        ue1_0.google,
        ue1_0.movil,
        ue1_0.nombre_completo,
        ue1_0.rol_id 
    from
        usuarios ue1_0 
    where
        ue1_0.correo_electronico=?
21:10:06 DEBUG - 
    select
        re1_0.id,
        re1_0.nombre 
    from
        roles re1_0 
    where
        re1_0.id=?
21:10:06 INFO  - Usuario encontrado: dobafad996@oziere.com
21:10:06 DEBUG - Using 'application/json', given [application/json] and supported [application/json]
21:10:06 DEBUG - Writing [com.example.api_gestion_almacen.dtos.UsuarioDto@aac0a1c]
21:10:06 DEBUG - Completed 200 OK
21:10:06 DEBUG - POST "/api/usuarios/autenticar", parameters={}
21:10:06 DEBUG - Mapped to com.example.api_gestion_almacen.controladores.UsuarioControlador#autenticarUsuario(Map)
21:10:06 DEBUG - Read "application/json;charset=UTF-8" to [{contrasena=ef797c8118f02dfb649607dd5d3f8c7623048c9c063d532cc95c5ed7a898a64f, correoElectronico=doba (truncated)...]
21:10:06 INFO  - Intento de autenticación para usuario: dobafad996@oziere.com
21:10:06 DEBUG - 
    select
        ue1_0.id,
        ue1_0.contrasena,
        ue1_0.correo_confirmado,
        ue1_0.correo_electronico,
        ue1_0.fecha_creacion,
        ue1_0.foto,
        ue1_0.google,
        ue1_0.movil,
        ue1_0.nombre_completo,
        ue1_0.rol_id 
    from
        usuarios ue1_0 
    where
        ue1_0.correo_electronico=?
21:10:06 DEBUG - 
    select
        re1_0.id,
        re1_0.nombre 
    from
        roles re1_0 
    where
        re1_0.id=?
21:10:06 INFO  - Autenticación exitosa para: dobafad996@oziere.com
21:10:06 DEBUG - Using 'application/json', given [*/*] and supported [application/json]
21:10:06 DEBUG - Writing [com.example.api_gestion_almacen.dtos.UsuarioDto@78568f85]
21:10:06 DEBUG - Completed 200 OK
21:10:13 DEBUG - GET "/api/usuarios/correo/palomitasverdes73@gmail.com", parameters={}
21:10:13 DEBUG - Mapped to com.example.api_gestion_almacen.controladores.UsuarioControlador#buscarPorCorreo(String)
21:10:13 INFO  - Buscando usuario por correo: palomitasverdes73@gmail.com
21:10:13 DEBUG - 
    select
        ue1_0.id,
        ue1_0.contrasena,
        ue1_0.correo_confirmado,
        ue1_0.correo_electronico,
        ue1_0.fecha_creacion,
        ue1_0.foto,
        ue1_0.google,
        ue1_0.movil,
        ue1_0.nombre_completo,
        ue1_0.rol_id 
    from
        usuarios ue1_0 
    where
        ue1_0.correo_electronico=?
21:10:13 DEBUG - 
    select
        re1_0.id,
        re1_0.nombre 
    from
        roles re1_0 
    where
        re1_0.id=?
21:10:13 INFO  - Usuario encontrado: palomitasverdes73@gmail.com
21:10:13 DEBUG - Using 'application/json', given [application/json] and supported [application/json]
21:10:13 DEBUG - Writing [com.example.api_gestion_almacen.dtos.UsuarioDto@2127564d]
21:10:13 DEBUG - Completed 200 OK
21:10:13 DEBUG - POST "/api/usuarios/autenticar", parameters={}
21:10:13 DEBUG - Mapped to com.example.api_gestion_almacen.controladores.UsuarioControlador#autenticarUsuario(Map)
21:10:13 DEBUG - Read "application/json;charset=UTF-8" to [{contrasena=936edb38a20cfa474d414e9f1f09e436248e14b6f17466bd27d5dcbebbeae0a5, correoElectronico=palo (truncated)...]
21:10:13 INFO  - Intento de autenticación para usuario: palomitasverdes73@gmail.com
21:10:13 DEBUG - 
    select
        ue1_0.id,
        ue1_0.contrasena,
        ue1_0.correo_confirmado,
        ue1_0.correo_electronico,
        ue1_0.fecha_creacion,
        ue1_0.foto,
        ue1_0.google,
        ue1_0.movil,
        ue1_0.nombre_completo,
        ue1_0.rol_id 
    from
        usuarios ue1_0 
    where
        ue1_0.correo_electronico=?
21:10:14 DEBUG - 
    select
        re1_0.id,
        re1_0.nombre 
    from
        roles re1_0 
    where
        re1_0.id=?
21:10:14 ERROR - Error de autenticación: Contraseña incorrecta
21:10:14 DEBUG - Using 'application/json', given [*/*] and supported [application/json]
21:10:14 DEBUG - Writing [{error=Contraseña incorrecta}]
21:10:14 DEBUG - Completed 401 UNAUTHORIZED
21:11:13 DEBUG - GET "/api/usuarios/correo/himoti7539@payposs.com", parameters={}
21:11:13 DEBUG - Mapped to com.example.api_gestion_almacen.controladores.UsuarioControlador#buscarPorCorreo(String)
21:11:13 INFO  - Buscando usuario por correo: himoti7539@payposs.com
21:11:13 DEBUG - 
    select
        ue1_0.id,
        ue1_0.contrasena,
        ue1_0.correo_confirmado,
        ue1_0.correo_electronico,
        ue1_0.fecha_creacion,
        ue1_0.foto,
        ue1_0.google,
        ue1_0.movil,
        ue1_0.nombre_completo,
        ue1_0.rol_id 
    from
        usuarios ue1_0 
    where
        ue1_0.correo_electronico=?
21:11:13 INFO  - Usuario no encontrado para correo: himoti7539@payposs.com
21:11:13 DEBUG - Using 'application/json', given [application/json] and supported [application/json]
21:11:13 DEBUG - Writing [{error=Usuario no encontrado}]
21:11:13 DEBUG - Completed 404 NOT_FOUND
21:11:13 DEBUG - POST "/api/usuarios", parameters={}
21:11:13 DEBUG - Mapped to com.example.api_gestion_almacen.controladores.UsuarioControlador#crearUsuario(CrearUsuDto)
21:11:13 DEBUG - Read "application/json;charset=UTF-8" to [CrearUsuDto{nombreCompleto='bfvbxcvfb', movil='123456789', correoElectronico='himoti7539@payposs.com (truncated)...]
21:11:13 INFO  - Iniciando creación de usuario: himoti7539@payposs.com
21:11:13 DEBUG - Datos recibidos: CrearUsuDto{nombreCompleto='bfvbxcvfb', movil='123456789', correoElectronico='himoti7539@payposs.com', rolId=4, contrasena='[PROTECTED]', foto=null}
21:11:13 DEBUG - 
    select
        ue1_0.id,
        ue1_0.contrasena,
        ue1_0.correo_confirmado,
        ue1_0.correo_electronico,
        ue1_0.fecha_creacion,
        ue1_0.foto,
        ue1_0.google,
        ue1_0.movil,
        ue1_0.nombre_completo,
        ue1_0.rol_id 
    from
        usuarios ue1_0 
    where
        ue1_0.correo_electronico=?
21:11:13 DEBUG - 
    select
        re1_0.id,
        re1_0.nombre 
    from
        roles re1_0 
    where
        re1_0.id=?
21:11:14 DEBUG - 
    insert 
    into
        usuarios
        (contrasena, correo_confirmado, correo_electronico, foto, google, movil, nombre_completo, rol_id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?)
21:11:14 INFO  - Usuario creado exitosamente: himoti7539@payposs.com
21:11:14 DEBUG - Using 'application/json', given [*/*] and supported [application/json]
21:11:14 DEBUG - Writing [CrearUsuDto{nombreCompleto='bfvbxcvfb', movil='123456789', correoElectronico='himoti7539@payposs.com (truncated)...]
21:11:14 DEBUG - Completed 201 CREATED
21:11:35 DEBUG - POST "/api/usuarios/confirmarCorreo/himoti7539@payposs.com", parameters={}
21:11:35 DEBUG - Mapped to com.example.api_gestion_almacen.controladores.UsuarioControlador#confirmarCorreo(String)
21:11:35 INFO  - Iniciando confirmación de correo para: himoti7539@payposs.com
21:11:35 DEBUG - 
    select
        ue1_0.id,
        ue1_0.contrasena,
        ue1_0.correo_confirmado,
        ue1_0.correo_electronico,
        ue1_0.fecha_creacion,
        ue1_0.foto,
        ue1_0.google,
        ue1_0.movil,
        ue1_0.nombre_completo,
        ue1_0.rol_id 
    from
        usuarios ue1_0 
    where
        ue1_0.correo_electronico=?
21:11:36 DEBUG - 
    select
        re1_0.id,
        re1_0.nombre 
    from
        roles re1_0 
    where
        re1_0.id=?
21:11:36 DEBUG - 
    select
        ue1_0.id,
        ue1_0.contrasena,
        ue1_0.correo_confirmado,
        ue1_0.correo_electronico,
        ue1_0.fecha_creacion,
        ue1_0.foto,
        ue1_0.google,
        ue1_0.movil,
        ue1_0.nombre_completo,
        r1_0.id,
        r1_0.nombre 
    from
        usuarios ue1_0 
    left join
        roles r1_0 
            on r1_0.id=ue1_0.rol_id 
    where
        ue1_0.id=?
21:11:36 DEBUG - 
    update
        usuarios 
    set
        contrasena=?,
        correo_confirmado=?,
        correo_electronico=?,
        foto=?,
        google=?,
        movil=?,
        nombre_completo=?,
        rol_id=? 
    where
        id=?
21:11:36 INFO  - Correo confirmado exitosamente para: himoti7539@payposs.com
21:11:36 DEBUG - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
21:11:36 DEBUG - Writing [{mensaje=Correo confirmado exitosamente}]
21:11:36 DEBUG - Completed 200 OK
21:12:06 DEBUG - GET "/api/usuarios/correo/palomitasverdes73@gmail.com", parameters={}
21:12:06 DEBUG - Mapped to com.example.api_gestion_almacen.controladores.UsuarioControlador#buscarPorCorreo(String)
21:12:06 INFO  - Buscando usuario por correo: palomitasverdes73@gmail.com
21:12:06 DEBUG - 
    select
        ue1_0.id,
        ue1_0.contrasena,
        ue1_0.correo_confirmado,
        ue1_0.correo_electronico,
        ue1_0.fecha_creacion,
        ue1_0.foto,
        ue1_0.google,
        ue1_0.movil,
        ue1_0.nombre_completo,
        ue1_0.rol_id 
    from
        usuarios ue1_0 
    where
        ue1_0.correo_electronico=?
21:12:06 DEBUG - 
    select
        re1_0.id,
        re1_0.nombre 
    from
        roles re1_0 
    where
        re1_0.id=?
21:12:06 INFO  - Usuario encontrado: palomitasverdes73@gmail.com
21:12:06 DEBUG - Using 'application/json', given [application/json] and supported [application/json]
21:12:06 DEBUG - Writing [com.example.api_gestion_almacen.dtos.UsuarioDto@6df5746b]
21:12:06 DEBUG - Completed 200 OK
21:12:06 DEBUG - POST "/api/usuarios/autenticar", parameters={}
21:12:06 DEBUG - Mapped to com.example.api_gestion_almacen.controladores.UsuarioControlador#autenticarUsuario(Map)
21:12:06 DEBUG - Read "application/json;charset=UTF-8" to [{contrasena=3cc890a93fa2160c551414745f084c101a9a4be2d32d6b1b1c622d1a217dbbaa, correoElectronico=palo (truncated)...]
21:12:06 INFO  - Intento de autenticación para usuario: palomitasverdes73@gmail.com
21:12:06 DEBUG - 
    select
        ue1_0.id,
        ue1_0.contrasena,
        ue1_0.correo_confirmado,
        ue1_0.correo_electronico,
        ue1_0.fecha_creacion,
        ue1_0.foto,
        ue1_0.google,
        ue1_0.movil,
        ue1_0.nombre_completo,
        ue1_0.rol_id 
    from
        usuarios ue1_0 
    where
        ue1_0.correo_electronico=?
21:12:06 DEBUG - 
    select
        re1_0.id,
        re1_0.nombre 
    from
        roles re1_0 
    where
        re1_0.id=?
21:12:07 INFO  - Autenticación exitosa para: palomitasverdes73@gmail.com
21:12:07 DEBUG - Using 'application/json', given [*/*] and supported [application/json]
21:12:07 DEBUG - Writing [com.example.api_gestion_almacen.dtos.UsuarioDto@176f8cf2]
21:12:07 DEBUG - Completed 200 OK
21:12:08 DEBUG - GET "/api/usuarios", parameters={}
21:12:08 DEBUG - Mapped to com.example.api_gestion_almacen.controladores.UsuarioControlador#obtenerTodosLosUsuarios()
21:12:08 INFO  - Obteniendo lista de todos los usuarios
21:12:09 DEBUG - 
    select
        ue1_0.id,
        ue1_0.contrasena,
        ue1_0.correo_confirmado,
        ue1_0.correo_electronico,
        ue1_0.fecha_creacion,
        ue1_0.foto,
        ue1_0.google,
        ue1_0.movil,
        ue1_0.nombre_completo,
        ue1_0.rol_id 
    from
        usuarios ue1_0
21:12:12 DEBUG - 
    select
        re1_0.id,
        re1_0.nombre 
    from
        roles re1_0 
    where
        re1_0.id=?
21:12:13 DEBUG - 
    select
        re1_0.id,
        re1_0.nombre 
    from
        roles re1_0 
    where
        re1_0.id=?
21:12:13 DEBUG - 
    select
        re1_0.id,
        re1_0.nombre 
    from
        roles re1_0 
    where
        re1_0.id=?
21:12:13 DEBUG - 
    select
        re1_0.id,
        re1_0.nombre 
    from
        roles re1_0 
    where
        re1_0.id=?
21:12:13 INFO  - Total de usuarios encontrados: 39
21:12:13 DEBUG - Using 'application/json', given [application/json] and supported [application/json]
21:12:13 DEBUG - Writing [[com.example.api_gestion_almacen.dtos.UsuarioDto@773824f0, com.example.api_gestion_almacen.dtos.Usua (truncated)...]
21:12:13 DEBUG - Completed 200 OK
21:12:13 DEBUG - GET "/api/usuarios", parameters={}
21:12:13 DEBUG - Mapped to com.example.api_gestion_almacen.controladores.UsuarioControlador#obtenerTodosLosUsuarios()
21:12:13 INFO  - Obteniendo lista de todos los usuarios
21:12:14 DEBUG - 
    select
        ue1_0.id,
        ue1_0.contrasena,
        ue1_0.correo_confirmado,
        ue1_0.correo_electronico,
        ue1_0.fecha_creacion,
        ue1_0.foto,
        ue1_0.google,
        ue1_0.movil,
        ue1_0.nombre_completo,
        ue1_0.rol_id 
    from
        usuarios ue1_0
21:12:17 DEBUG - 
    select
        re1_0.id,
        re1_0.nombre 
    from
        roles re1_0 
    where
        re1_0.id=?
21:12:17 DEBUG - 
    select
        re1_0.id,
        re1_0.nombre 
    from
        roles re1_0 
    where
        re1_0.id=?
21:12:17 DEBUG - 
    select
        re1_0.id,
        re1_0.nombre 
    from
        roles re1_0 
    where
        re1_0.id=?
21:12:18 DEBUG - 
    select
        re1_0.id,
        re1_0.nombre 
    from
        roles re1_0 
    where
        re1_0.id=?
21:12:18 INFO  - Total de usuarios encontrados: 39
21:12:18 DEBUG - Using 'application/json', given [application/json] and supported [application/json]
21:12:18 DEBUG - Writing [[com.example.api_gestion_almacen.dtos.UsuarioDto@2aefc8b4, com.example.api_gestion_almacen.dtos.Usua (truncated)...]
21:12:18 DEBUG - Completed 200 OK
21:13:30 DEBUG - POST "/api/usuarios", parameters={}
21:13:30 DEBUG - Mapped to com.example.api_gestion_almacen.controladores.UsuarioControlador#crearUsuario(CrearUsuDto)
21:13:30 DEBUG - Read "application/json;charset=UTF-8" to [CrearUsuDto{nombreCompleto='usu', movil='123456789', correoElectronico='222@222.com', rolId=2, contr (truncated)...]
21:13:30 INFO  - Iniciando creación de usuario: 222@222.com
21:13:30 DEBUG - Datos recibidos: CrearUsuDto{nombreCompleto='usu', movil='123456789', correoElectronico='222@222.com', rolId=2, contrasena='[PROTECTED]', foto=null}
21:13:30 DEBUG - 
    select
        ue1_0.id,
        ue1_0.contrasena,
        ue1_0.correo_confirmado,
        ue1_0.correo_electronico,
        ue1_0.fecha_creacion,
        ue1_0.foto,
        ue1_0.google,
        ue1_0.movil,
        ue1_0.nombre_completo,
        ue1_0.rol_id 
    from
        usuarios ue1_0 
    where
        ue1_0.correo_electronico=?
21:13:30 DEBUG - 
    select
        re1_0.id,
        re1_0.nombre 
    from
        roles re1_0 
    where
        re1_0.id=?
21:13:31 DEBUG - 
    insert 
    into
        usuarios
        (contrasena, correo_confirmado, correo_electronico, foto, google, movil, nombre_completo, rol_id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?)
21:13:31 INFO  - Usuario creado exitosamente: 222@222.com
21:13:31 DEBUG - Using 'application/json', given [*/*] and supported [application/json]
21:13:31 DEBUG - Writing [CrearUsuDto{nombreCompleto='usu', movil='123456789', correoElectronico='222@222.com', rolId=2, contr (truncated)...]
21:13:31 DEBUG - Completed 201 CREATED
21:13:31 DEBUG - GET "/api/usuarios", parameters={}
21:13:31 DEBUG - Mapped to com.example.api_gestion_almacen.controladores.UsuarioControlador#obtenerTodosLosUsuarios()
21:13:31 INFO  - Obteniendo lista de todos los usuarios
21:13:31 DEBUG - 
    select
        ue1_0.id,
        ue1_0.contrasena,
        ue1_0.correo_confirmado,
        ue1_0.correo_electronico,
        ue1_0.fecha_creacion,
        ue1_0.foto,
        ue1_0.google,
        ue1_0.movil,
        ue1_0.nombre_completo,
        ue1_0.rol_id 
    from
        usuarios ue1_0
21:13:35 DEBUG - 
    select
        re1_0.id,
        re1_0.nombre 
    from
        roles re1_0 
    where
        re1_0.id=?
21:13:35 DEBUG - 
    select
        re1_0.id,
        re1_0.nombre 
    from
        roles re1_0 
    where
        re1_0.id=?
21:13:35 DEBUG - 
    select
        re1_0.id,
        re1_0.nombre 
    from
        roles re1_0 
    where
        re1_0.id=?
21:13:35 DEBUG - 
    select
        re1_0.id,
        re1_0.nombre 
    from
        roles re1_0 
    where
        re1_0.id=?
21:13:36 INFO  - Total de usuarios encontrados: 40
21:13:36 DEBUG - Using 'application/json', given [application/json] and supported [application/json]
21:13:36 DEBUG - Writing [[com.example.api_gestion_almacen.dtos.UsuarioDto@62188b56, com.example.api_gestion_almacen.dtos.Usua (truncated)...]
21:13:36 DEBUG - Completed 200 OK
21:13:36 DEBUG - GET "/api/usuarios", parameters={}
21:13:36 DEBUG - Mapped to com.example.api_gestion_almacen.controladores.UsuarioControlador#obtenerTodosLosUsuarios()
21:13:36 INFO  - Obteniendo lista de todos los usuarios
21:13:36 DEBUG - 
    select
        ue1_0.id,
        ue1_0.contrasena,
        ue1_0.correo_confirmado,
        ue1_0.correo_electronico,
        ue1_0.fecha_creacion,
        ue1_0.foto,
        ue1_0.google,
        ue1_0.movil,
        ue1_0.nombre_completo,
        ue1_0.rol_id 
    from
        usuarios ue1_0
21:13:40 DEBUG - 
    select
        re1_0.id,
        re1_0.nombre 
    from
        roles re1_0 
    where
        re1_0.id=?
21:13:40 DEBUG - 
    select
        re1_0.id,
        re1_0.nombre 
    from
        roles re1_0 
    where
        re1_0.id=?
21:13:40 DEBUG - 
    select
        re1_0.id,
        re1_0.nombre 
    from
        roles re1_0 
    where
        re1_0.id=?
21:13:40 DEBUG - 
    select
        re1_0.id,
        re1_0.nombre 
    from
        roles re1_0 
    where
        re1_0.id=?
21:13:40 INFO  - Total de usuarios encontrados: 40
21:13:40 DEBUG - Using 'application/json', given [application/json] and supported [application/json]
21:13:40 DEBUG - Writing [[com.example.api_gestion_almacen.dtos.UsuarioDto@c22ec9a, com.example.api_gestion_almacen.dtos.Usuar (truncated)...]
21:13:40 DEBUG - Completed 200 OK
21:13:55 DEBUG - GET "/api/usuarios/correo/222@222.com", parameters={}
21:13:55 DEBUG - Mapped to com.example.api_gestion_almacen.controladores.UsuarioControlador#buscarPorCorreo(String)
21:13:55 INFO  - Buscando usuario por correo: 222@222.com
21:13:55 DEBUG - 
    select
        ue1_0.id,
        ue1_0.contrasena,
        ue1_0.correo_confirmado,
        ue1_0.correo_electronico,
        ue1_0.fecha_creacion,
        ue1_0.foto,
        ue1_0.google,
        ue1_0.movil,
        ue1_0.nombre_completo,
        ue1_0.rol_id 
    from
        usuarios ue1_0 
    where
        ue1_0.correo_electronico=?
21:13:55 DEBUG - 
    select
        re1_0.id,
        re1_0.nombre 
    from
        roles re1_0 
    where
        re1_0.id=?
21:13:55 INFO  - Usuario encontrado: 222@222.com
21:13:55 DEBUG - Using 'application/json', given [application/json] and supported [application/json]
21:13:55 DEBUG - Writing [com.example.api_gestion_almacen.dtos.UsuarioDto@68e45817]
21:13:55 DEBUG - Completed 200 OK
21:13:55 DEBUG - POST "/api/usuarios/autenticar", parameters={}
21:13:55 DEBUG - Mapped to com.example.api_gestion_almacen.controladores.UsuarioControlador#autenticarUsuario(Map)
21:13:55 DEBUG - Read "application/json;charset=UTF-8" to [{contrasena=7a8b34493ea0b67adab3b2e92878ae6b2fcc143e732db839045c88a44a3cead2, correoElectronico=222@ (truncated)...]
21:13:55 INFO  - Intento de autenticación para usuario: 222@222.com
21:13:55 DEBUG - 
    select
        ue1_0.id,
        ue1_0.contrasena,
        ue1_0.correo_confirmado,
        ue1_0.correo_electronico,
        ue1_0.fecha_creacion,
        ue1_0.foto,
        ue1_0.google,
        ue1_0.movil,
        ue1_0.nombre_completo,
        ue1_0.rol_id 
    from
        usuarios ue1_0 
    where
        ue1_0.correo_electronico=?
21:13:56 DEBUG - 
    select
        re1_0.id,
        re1_0.nombre 
    from
        roles re1_0 
    where
        re1_0.id=?
21:13:56 INFO  - Autenticación exitosa para: 222@222.com
21:13:56 DEBUG - Using 'application/json', given [*/*] and supported [application/json]
21:13:56 DEBUG - Writing [com.example.api_gestion_almacen.dtos.UsuarioDto@47a4864c]
21:13:56 DEBUG - Completed 200 OK
22:12:04 DEBUG - GET "/api/usuarios/correo/palomitasverdes73@gmail.com", parameters={}
22:12:04 DEBUG - Mapped to com.example.api_gestion_almacen.controladores.UsuarioControlador#buscarPorCorreo(String)
22:12:04 INFO  - Buscando usuario por correo: palomitasverdes73@gmail.com
22:12:04 DEBUG - 
    select
        ue1_0.id,
        ue1_0.contrasena,
        ue1_0.correo_confirmado,
        ue1_0.correo_electronico,
        ue1_0.fecha_creacion,
        ue1_0.foto,
        ue1_0.google,
        ue1_0.movil,
        ue1_0.nombre_completo,
        ue1_0.rol_id 
    from
        usuarios ue1_0 
    where
        ue1_0.correo_electronico=?
22:12:04 DEBUG - 
    select
        re1_0.id,
        re1_0.nombre 
    from
        roles re1_0 
    where
        re1_0.id=?
22:12:04 INFO  - Usuario encontrado: palomitasverdes73@gmail.com
22:12:04 DEBUG - Using 'application/json', given [application/json] and supported [application/json]
22:12:04 DEBUG - Writing [com.example.api_gestion_almacen.dtos.UsuarioDto@2c11b22d]
22:12:04 DEBUG - Completed 200 OK
22:12:04 DEBUG - POST "/api/usuarios/autenticar", parameters={}
22:12:04 DEBUG - Mapped to com.example.api_gestion_almacen.controladores.UsuarioControlador#autenticarUsuario(Map)
22:12:04 DEBUG - Read "application/json;charset=UTF-8" to [{contrasena=3cc890a93fa2160c551414745f084c101a9a4be2d32d6b1b1c622d1a217dbbaa, correoElectronico=palo (truncated)...]
22:12:04 INFO  - Intento de autenticación para usuario: palomitasverdes73@gmail.com
22:12:04 DEBUG - 
    select
        ue1_0.id,
        ue1_0.contrasena,
        ue1_0.correo_confirmado,
        ue1_0.correo_electronico,
        ue1_0.fecha_creacion,
        ue1_0.foto,
        ue1_0.google,
        ue1_0.movil,
        ue1_0.nombre_completo,
        ue1_0.rol_id 
    from
        usuarios ue1_0 
    where
        ue1_0.correo_electronico=?
22:12:05 DEBUG - 
    select
        re1_0.id,
        re1_0.nombre 
    from
        roles re1_0 
    where
        re1_0.id=?
22:12:05 INFO  - Autenticación exitosa para: palomitasverdes73@gmail.com
22:12:05 DEBUG - Using 'application/json', given [*/*] and supported [application/json]
22:12:05 DEBUG - Writing [com.example.api_gestion_almacen.dtos.UsuarioDto@1f2df96]
22:12:05 DEBUG - Completed 200 OK
22:12:06 DEBUG - GET "/api/usuarios", parameters={}
22:12:06 DEBUG - Mapped to com.example.api_gestion_almacen.controladores.UsuarioControlador#obtenerTodosLosUsuarios()
22:12:06 INFO  - Obteniendo lista de todos los usuarios
22:12:07 DEBUG - 
    select
        ue1_0.id,
        ue1_0.contrasena,
        ue1_0.correo_confirmado,
        ue1_0.correo_electronico,
        ue1_0.fecha_creacion,
        ue1_0.foto,
        ue1_0.google,
        ue1_0.movil,
        ue1_0.nombre_completo,
        ue1_0.rol_id 
    from
        usuarios ue1_0
22:12:11 DEBUG - 
    select
        re1_0.id,
        re1_0.nombre 
    from
        roles re1_0 
    where
        re1_0.id=?
22:12:11 DEBUG - 
    select
        re1_0.id,
        re1_0.nombre 
    from
        roles re1_0 
    where
        re1_0.id=?
22:12:11 DEBUG - 
    select
        re1_0.id,
        re1_0.nombre 
    from
        roles re1_0 
    where
        re1_0.id=?
22:12:11 DEBUG - 
    select
        re1_0.id,
        re1_0.nombre 
    from
        roles re1_0 
    where
        re1_0.id=?
22:12:11 INFO  - Total de usuarios encontrados: 40
22:12:11 DEBUG - Using 'application/json', given [application/json] and supported [application/json]
22:12:11 DEBUG - Writing [[com.example.api_gestion_almacen.dtos.UsuarioDto@7cb28859, com.example.api_gestion_almacen.dtos.Usua (truncated)...]
22:12:11 DEBUG - Completed 200 OK
22:12:12 DEBUG - GET "/api/usuarios", parameters={}
22:12:12 DEBUG - Mapped to com.example.api_gestion_almacen.controladores.UsuarioControlador#obtenerTodosLosUsuarios()
22:12:12 INFO  - Obteniendo lista de todos los usuarios
22:12:12 DEBUG - 
    select
        ue1_0.id,
        ue1_0.contrasena,
        ue1_0.correo_confirmado,
        ue1_0.correo_electronico,
        ue1_0.fecha_creacion,
        ue1_0.foto,
        ue1_0.google,
        ue1_0.movil,
        ue1_0.nombre_completo,
        ue1_0.rol_id 
    from
        usuarios ue1_0
22:12:17 DEBUG - 
    select
        re1_0.id,
        re1_0.nombre 
    from
        roles re1_0 
    where
        re1_0.id=?
22:12:17 DEBUG - 
    select
        re1_0.id,
        re1_0.nombre 
    from
        roles re1_0 
    where
        re1_0.id=?
22:12:17 DEBUG - 
    select
        re1_0.id,
        re1_0.nombre 
    from
        roles re1_0 
    where
        re1_0.id=?
22:12:17 DEBUG - 
    select
        re1_0.id,
        re1_0.nombre 
    from
        roles re1_0 
    where
        re1_0.id=?
22:12:18 INFO  - Total de usuarios encontrados: 40
22:12:18 DEBUG - Using 'application/json', given [application/json] and supported [application/json]
22:12:18 DEBUG - Writing [[com.example.api_gestion_almacen.dtos.UsuarioDto@2e8e1504, com.example.api_gestion_almacen.dtos.Usua (truncated)...]
22:12:18 DEBUG - Completed 200 OK
22:13:14 DEBUG - POST "/api/usuarios", parameters={}
22:13:14 DEBUG - Mapped to com.example.api_gestion_almacen.controladores.UsuarioControlador#crearUsuario(CrearUsuDto)
22:13:14 DEBUG - Read "application/json;charset=UTF-8" to [CrearUsuDto{nombreCompleto='fdsf', movil='612345678', correoElectronico='333@333.com', rolId=3, cont (truncated)...]
22:13:14 INFO  - Iniciando creación de usuario: 333@333.com
22:13:14 DEBUG - Datos recibidos: CrearUsuDto{nombreCompleto='fdsf', movil='612345678', correoElectronico='333@333.com', rolId=3, contrasena='[PROTECTED]', foto=null}
22:13:14 DEBUG - 
    select
        ue1_0.id,
        ue1_0.contrasena,
        ue1_0.correo_confirmado,
        ue1_0.correo_electronico,
        ue1_0.fecha_creacion,
        ue1_0.foto,
        ue1_0.google,
        ue1_0.movil,
        ue1_0.nombre_completo,
        ue1_0.rol_id 
    from
        usuarios ue1_0 
    where
        ue1_0.correo_electronico=?
22:13:14 DEBUG - 
    select
        re1_0.id,
        re1_0.nombre 
    from
        roles re1_0 
    where
        re1_0.id=?
22:13:14 DEBUG - 
    insert 
    into
        usuarios
        (contrasena, correo_confirmado, correo_electronico, foto, google, movil, nombre_completo, rol_id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?)
22:13:15 INFO  - Usuario creado exitosamente: 333@333.com
22:13:15 DEBUG - Using 'application/json', given [*/*] and supported [application/json]
22:13:15 DEBUG - Writing [CrearUsuDto{nombreCompleto='fdsf', movil='612345678', correoElectronico='333@333.com', rolId=3, cont (truncated)...]
22:13:15 DEBUG - Completed 201 CREATED
22:13:15 DEBUG - GET "/api/usuarios", parameters={}
22:13:15 DEBUG - Mapped to com.example.api_gestion_almacen.controladores.UsuarioControlador#obtenerTodosLosUsuarios()
22:13:15 INFO  - Obteniendo lista de todos los usuarios
22:13:15 DEBUG - 
    select
        ue1_0.id,
        ue1_0.contrasena,
        ue1_0.correo_confirmado,
        ue1_0.correo_electronico,
        ue1_0.fecha_creacion,
        ue1_0.foto,
        ue1_0.google,
        ue1_0.movil,
        ue1_0.nombre_completo,
        ue1_0.rol_id 
    from
        usuarios ue1_0
22:13:19 DEBUG - 
    select
        re1_0.id,
        re1_0.nombre 
    from
        roles re1_0 
    where
        re1_0.id=?
22:13:19 DEBUG - 
    select
        re1_0.id,
        re1_0.nombre 
    from
        roles re1_0 
    where
        re1_0.id=?
22:13:19 DEBUG - 
    select
        re1_0.id,
        re1_0.nombre 
    from
        roles re1_0 
    where
        re1_0.id=?
22:13:19 DEBUG - 
    select
        re1_0.id,
        re1_0.nombre 
    from
        roles re1_0 
    where
        re1_0.id=?
22:13:20 INFO  - Total de usuarios encontrados: 41
22:13:20 DEBUG - Using 'application/json', given [application/json] and supported [application/json]
22:13:20 DEBUG - Writing [[com.example.api_gestion_almacen.dtos.UsuarioDto@5a500a0a, com.example.api_gestion_almacen.dtos.Usua (truncated)...]
22:13:20 DEBUG - Completed 200 OK
22:13:20 DEBUG - GET "/api/usuarios", parameters={}
22:13:20 DEBUG - Mapped to com.example.api_gestion_almacen.controladores.UsuarioControlador#obtenerTodosLosUsuarios()
22:13:20 INFO  - Obteniendo lista de todos los usuarios
22:13:20 DEBUG - 
    select
        ue1_0.id,
        ue1_0.contrasena,
        ue1_0.correo_confirmado,
        ue1_0.correo_electronico,
        ue1_0.fecha_creacion,
        ue1_0.foto,
        ue1_0.google,
        ue1_0.movil,
        ue1_0.nombre_completo,
        ue1_0.rol_id 
    from
        usuarios ue1_0
22:13:24 DEBUG - 
    select
        re1_0.id,
        re1_0.nombre 
    from
        roles re1_0 
    where
        re1_0.id=?
22:13:24 DEBUG - 
    select
        re1_0.id,
        re1_0.nombre 
    from
        roles re1_0 
    where
        re1_0.id=?
22:13:24 DEBUG - 
    select
        re1_0.id,
        re1_0.nombre 
    from
        roles re1_0 
    where
        re1_0.id=?
22:13:24 DEBUG - 
    select
        re1_0.id,
        re1_0.nombre 
    from
        roles re1_0 
    where
        re1_0.id=?
22:13:25 INFO  - Total de usuarios encontrados: 41
22:13:25 DEBUG - Using 'application/json', given [application/json] and supported [application/json]
22:13:25 DEBUG - Writing [[com.example.api_gestion_almacen.dtos.UsuarioDto@14b79b0d, com.example.api_gestion_almacen.dtos.Usua (truncated)...]
22:13:25 DEBUG - Completed 200 OK
22:13:27 DEBUG - GET "/api/usuarios/correo/333@333.com", parameters={}
22:13:27 DEBUG - Mapped to com.example.api_gestion_almacen.controladores.UsuarioControlador#buscarPorCorreo(String)
22:13:27 INFO  - Buscando usuario por correo: 333@333.com
22:13:27 DEBUG - 
    select
        ue1_0.id,
        ue1_0.contrasena,
        ue1_0.correo_confirmado,
        ue1_0.correo_electronico,
        ue1_0.fecha_creacion,
        ue1_0.foto,
        ue1_0.google,
        ue1_0.movil,
        ue1_0.nombre_completo,
        ue1_0.rol_id 
    from
        usuarios ue1_0 
    where
        ue1_0.correo_electronico=?
22:13:27 DEBUG - 
    select
        re1_0.id,
        re1_0.nombre 
    from
        roles re1_0 
    where
        re1_0.id=?
22:13:27 INFO  - Usuario encontrado: 333@333.com
22:13:27 DEBUG - Using 'application/json', given [application/json] and supported [application/json]
22:13:27 DEBUG - Writing [com.example.api_gestion_almacen.dtos.UsuarioDto@4fc25fa7]
22:13:27 DEBUG - Completed 200 OK
22:13:27 DEBUG - POST "/api/usuarios/autenticar", parameters={}
22:13:27 DEBUG - Mapped to com.example.api_gestion_almacen.controladores.UsuarioControlador#autenticarUsuario(Map)
22:13:27 DEBUG - Read "application/json;charset=UTF-8" to [{contrasena=7521b21028b9df540ce3d35b250ba16ec5ee85081334e3ea2a783ca124005ab1, correoElectronico=333@ (truncated)...]
22:13:27 INFO  - Intento de autenticación para usuario: 333@333.com
22:13:27 DEBUG - 
    select
        ue1_0.id,
        ue1_0.contrasena,
        ue1_0.correo_confirmado,
        ue1_0.correo_electronico,
        ue1_0.fecha_creacion,
        ue1_0.foto,
        ue1_0.google,
        ue1_0.movil,
        ue1_0.nombre_completo,
        ue1_0.rol_id 
    from
        usuarios ue1_0 
    where
        ue1_0.correo_electronico=?
22:13:27 DEBUG - 
    select
        re1_0.id,
        re1_0.nombre 
    from
        roles re1_0 
    where
        re1_0.id=?
22:13:27 INFO  - Autenticación exitosa para: 333@333.com
22:13:27 DEBUG - Using 'application/json', given [*/*] and supported [application/json]
22:13:27 DEBUG - Writing [com.example.api_gestion_almacen.dtos.UsuarioDto@55d69a4b]
22:13:27 DEBUG - Completed 200 OK
